ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_1_initVar
  18              		.bss
  19              		.type	PWM_1_initVar, %object
  20              		.size	PWM_1_initVar, 1
  21              	PWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_1_Init, %function
  29              	PWM_1_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  This file provides the source code to the API for the PWM_1
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_1.c **** *
   9:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_1.c **** *
  12:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_1.c **** 
  19:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  20:.\Generated_Source\PSoC4/PWM_1.c **** 
  21:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_1.c **** 
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  26:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_1.c **** *
  28:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize/Restore default PWM_1 configuration.
  30:.\Generated_Source\PSoC4/PWM_1.c **** *
  31:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  33:.\Generated_Source\PSoC4/PWM_1.c **** *
  34:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_1.c **** *
  37:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void)
  39:.\Generated_Source\PSoC4/PWM_1.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/PWM_1.c **** 
  41:.\Generated_Source\PSoC4/PWM_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_1.c ****         
  45:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_1.c **** 
  48:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_1.c ****         
  51:.\Generated_Source\PSoC4/PWM_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetCounterMode(PWM_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_1.c **** 
  57:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_1.c ****         
  60:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     
  63:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_1.c ****         
  66:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_1.c **** 
  69:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_1.c **** 
  72:.\Generated_Source\PSoC4/PWM_1.c ****             #if (1u == PWM_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCompareBuf(PWM_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (1u == PWM_1_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 3


  76:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_1.c **** 
  78:.\Generated_Source\PSoC4/PWM_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_1.c ****         #elif(PWM_1__COUNT_DOWN == PWM_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__TIMER == PWM_1_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_1.c **** 
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 134B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/PWM_1.c **** 
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_ALIGN | PWM_1_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 114B     		ldr	r3, .L2
  47 000e 114A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 8021     		mov	r1, #128
  50 0014 4902     		lsl	r1, r1, #9
  51 0016 0A43     		orr	r2, r1
  52 0018 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/PWM_1.c ****             
  97:.\Generated_Source\PSoC4/PWM_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(PWM_1_PWM_PERIOD_VALUE);
  53              		.loc 1 101 0
  54 001a 8023     		mov	r3, #128
  55 001c 1B01     		lsl	r3, r3, #4
  56 001e 181C     		mov	r0, r3
  57 0020 FFF7FEFF 		bl	PWM_1_WriteCounter
 102:.\Generated_Source\PSoC4/PWM_1.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_DT == PWM_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_DT == PWM_1_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM == PWM_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_PRESCALER;
  58              		.loc 1 112 0
  59 0024 0B4B     		ldr	r3, .L2
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 4


  60 0026 0B4A     		ldr	r2, .L2
  61 0028 1268     		ldr	r2, [r2]
  62 002a 1A60     		str	r2, [r3]
 113:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM == PWM_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_PWM_SIGNALS_MODES;
  63              		.loc 1 116 0
  64 002c 0A4B     		ldr	r3, .L2+4
  65 002e 0C22     		mov	r2, #12
  66 0030 1A60     		str	r2, [r3]
 117:.\Generated_Source\PSoC4/PWM_1.c ****     
 118:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_PWM_INTERRUPT_MASK);
  67              		.loc 1 119 0
  68 0032 0120     		mov	r0, #1
  69 0034 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM_1.c **** 
 121:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_1.c ****                     (PWM_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__LEFT == PWM_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_LEFT == PWM_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_1.c **** 
 132:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_RIGHT;
  70              		.loc 1 133 0
  71 0038 084B     		ldr	r3, .L2+8
  72 003a 1C22     		mov	r2, #28
  73 003c 1A60     		str	r2, [r3]
 134:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_RIGHT == PWM_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__CENTER == PWM_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_CENTER == PWM_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_1.c **** 
 140:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_PWM_PERIOD_VALUE );
  74              		.loc 1 146 0
  75 003e 8023     		mov	r3, #128
  76 0040 1B01     		lsl	r3, r3, #4
  77 0042 181C     		mov	r0, r3
  78 0044 FFF7FEFF 		bl	PWM_1_WritePeriod
 147:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
  79              		.loc 1 147 0
  80 0048 0020     		mov	r0, #0
  81 004a FFF7FEFF 		bl	PWM_1_WriteCompare
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 5


 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompareBuf(PWM_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM_1.c **** 
 154:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WritePeriodBuf(PWM_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_1.c ****     
 160:.\Generated_Source\PSoC4/PWM_1.c **** }
  82              		.loc 1 160 0
  83 004e BD46     		mov	sp, r7
  84              		@ sp needed
  85 0050 80BD     		pop	{r7, pc}
  86              	.L3:
  87 0052 C046     		.align	2
  88              	.L2:
  89 0054 40010540 		.word	1074069824
  90 0058 64010540 		.word	1074069860
  91 005c 68010540 		.word	1074069864
  92              		.cfi_endproc
  93              	.LFE0:
  94              		.size	PWM_1_Init, .-PWM_1_Init
  95              		.section	.text.PWM_1_Enable,"ax",%progbits
  96              		.align	2
  97              		.global	PWM_1_Enable
  98              		.code	16
  99              		.thumb_func
 100              		.type	PWM_1_Enable, %function
 101              	PWM_1_Enable:
 102              	.LFB1:
 161:.\Generated_Source\PSoC4/PWM_1.c **** 
 162:.\Generated_Source\PSoC4/PWM_1.c **** 
 163:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 165:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_1.c **** *
 167:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM_1.
 169:.\Generated_Source\PSoC4/PWM_1.c **** *
 170:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_1.c **** *
 173:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_1.c **** *
 176:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_1.c **** {
 103              		.loc 1 178 0
 104              		.cfi_startproc
 105 0000 90B5     		push	{r4, r7, lr}
 106              		.cfi_def_cfa_offset 12
 107              		.cfi_offset 4, -12
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 6


 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 83B0     		sub	sp, sp, #12
 111              		.cfi_def_cfa_offset 24
 112 0004 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 181 0
 115 0006 FC1D     		add	r4, r7, #7
 116 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 117 000c 031C     		mov	r3, r0
 118 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG |= PWM_1_MASK;
 119              		.loc 1 182 0
 120 0010 084B     		ldr	r3, .L5
 121 0012 084A     		ldr	r2, .L5
 122 0014 1268     		ldr	r2, [r2]
 123 0016 0221     		mov	r1, #2
 124 0018 0A43     		orr	r2, r1
 125 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 126              		.loc 1 183 0
 127 001c FB1D     		add	r3, r7, #7
 128 001e 1B78     		ldrb	r3, [r3]
 129 0020 181C     		mov	r0, r3
 130 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/PWM_1.c **** 
 185:.\Generated_Source\PSoC4/PWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 131              		.loc 1 188 0
 132 0026 0220     		mov	r0, #2
 133 0028 1821     		mov	r1, #24
 134 002a FFF7FEFF 		bl	PWM_1_TriggerCommand
 189:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_1.c **** 
 192:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__TIMER == PWM_1_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_1.c **** }
 135              		.loc 1 197 0
 136 002e BD46     		mov	sp, r7
 137 0030 03B0     		add	sp, sp, #12
 138              		@ sp needed
 139 0032 90BD     		pop	{r4, r7, pc}
 140              	.L6:
 141              		.align	2
 142              	.L5:
 143 0034 00000540 		.word	1074069504
 144              		.cfi_endproc
 145              	.LFE1:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 7


 146              		.size	PWM_1_Enable, .-PWM_1_Enable
 147              		.section	.text.PWM_1_Start,"ax",%progbits
 148              		.align	2
 149              		.global	PWM_1_Start
 150              		.code	16
 151              		.thumb_func
 152              		.type	PWM_1_Start, %function
 153              	PWM_1_Start:
 154              	.LFB2:
 198:.\Generated_Source\PSoC4/PWM_1.c **** 
 199:.\Generated_Source\PSoC4/PWM_1.c **** 
 200:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
 202:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM_1.c **** *
 204:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM_1.c **** *  Initializes the PWM_1 with default customizer
 206:.\Generated_Source\PSoC4/PWM_1.c **** *  values when called the first time and enables the PWM_1.
 207:.\Generated_Source\PSoC4/PWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM_1.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM_1.c **** *
 210:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 212:.\Generated_Source\PSoC4/PWM_1.c **** *
 213:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 215:.\Generated_Source\PSoC4/PWM_1.c **** *
 216:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  to 1 the first time PWM_1_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM_1.c **** *  calls to the PWM_1_Start() routine.
 222:.\Generated_Source\PSoC4/PWM_1.c **** *
 223:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void)
 225:.\Generated_Source\PSoC4/PWM_1.c **** {
 155              		.loc 1 225 0
 156              		.cfi_startproc
 157 0000 80B5     		push	{r7, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
 226:.\Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 163              		.loc 1 226 0
 164 0004 064B     		ldr	r3, .L9
 165 0006 1B78     		ldrb	r3, [r3]
 166 0008 002B     		cmp	r3, #0
 167 000a 04D1     		bne	.L8
 227:.\Generated_Source\PSoC4/PWM_1.c ****     {
 228:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 168              		.loc 1 228 0
 169 000c FFF7FEFF 		bl	PWM_1_Init
 229:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 170              		.loc 1 229 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 8


 171 0010 034B     		ldr	r3, .L9
 172 0012 0122     		mov	r2, #1
 173 0014 1A70     		strb	r2, [r3]
 174              	.L8:
 230:.\Generated_Source\PSoC4/PWM_1.c ****     }
 231:.\Generated_Source\PSoC4/PWM_1.c **** 
 232:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 175              		.loc 1 232 0
 176 0016 FFF7FEFF 		bl	PWM_1_Enable
 233:.\Generated_Source\PSoC4/PWM_1.c **** }
 177              		.loc 1 233 0
 178 001a BD46     		mov	sp, r7
 179              		@ sp needed
 180 001c 80BD     		pop	{r7, pc}
 181              	.L10:
 182 001e C046     		.align	2
 183              	.L9:
 184 0020 00000000 		.word	PWM_1_initVar
 185              		.cfi_endproc
 186              	.LFE2:
 187              		.size	PWM_1_Start, .-PWM_1_Start
 188              		.section	.text.PWM_1_Stop,"ax",%progbits
 189              		.align	2
 190              		.global	PWM_1_Stop
 191              		.code	16
 192              		.thumb_func
 193              		.type	PWM_1_Stop, %function
 194              	PWM_1_Stop:
 195              	.LFB3:
 234:.\Generated_Source\PSoC4/PWM_1.c **** 
 235:.\Generated_Source\PSoC4/PWM_1.c **** 
 236:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 238:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM_1.c **** *
 240:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM_1.c **** *  Disables the PWM_1.
 242:.\Generated_Source\PSoC4/PWM_1.c **** *
 243:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 245:.\Generated_Source\PSoC4/PWM_1.c **** *
 246:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 248:.\Generated_Source\PSoC4/PWM_1.c **** *
 249:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void)
 251:.\Generated_Source\PSoC4/PWM_1.c **** {
 196              		.loc 1 251 0
 197              		.cfi_startproc
 198 0000 90B5     		push	{r4, r7, lr}
 199              		.cfi_def_cfa_offset 12
 200              		.cfi_offset 4, -12
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 83B0     		sub	sp, sp, #12
 204              		.cfi_def_cfa_offset 24
 205 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 9


 206              		.cfi_def_cfa_register 7
 252:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM_1.c **** 
 254:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 207              		.loc 1 254 0
 208 0006 FC1D     		add	r4, r7, #7
 209 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 210 000c 031C     		mov	r3, r0
 211 000e 2370     		strb	r3, [r4]
 255:.\Generated_Source\PSoC4/PWM_1.c **** 
 256:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG &= (uint32)~PWM_1_MASK;
 212              		.loc 1 256 0
 213 0010 064B     		ldr	r3, .L12
 214 0012 064A     		ldr	r2, .L12
 215 0014 1268     		ldr	r2, [r2]
 216 0016 0221     		mov	r1, #2
 217 0018 8A43     		bic	r2, r1
 218 001a 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/PWM_1.c **** 
 258:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 258 0
 220 001c FB1D     		add	r3, r7, #7
 221 001e 1B78     		ldrb	r3, [r3]
 222 0020 181C     		mov	r0, r3
 223 0022 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/PWM_1.c **** }
 224              		.loc 1 259 0
 225 0026 BD46     		mov	sp, r7
 226 0028 03B0     		add	sp, sp, #12
 227              		@ sp needed
 228 002a 90BD     		pop	{r4, r7, pc}
 229              	.L13:
 230              		.align	2
 231              	.L12:
 232 002c 00000540 		.word	1074069504
 233              		.cfi_endproc
 234              	.LFE3:
 235              		.size	PWM_1_Stop, .-PWM_1_Stop
 236              		.section	.text.PWM_1_SetMode,"ax",%progbits
 237              		.align	2
 238              		.global	PWM_1_SetMode
 239              		.code	16
 240              		.thumb_func
 241              		.type	PWM_1_SetMode, %function
 242              	PWM_1_SetMode:
 243              	.LFB4:
 260:.\Generated_Source\PSoC4/PWM_1.c **** 
 261:.\Generated_Source\PSoC4/PWM_1.c **** 
 262:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetMode
 264:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM_1.c **** *
 266:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the operation mode of the PWM_1. This function is used when
 268:.\Generated_Source\PSoC4/PWM_1.c **** *  configured as a generic PWM_1 and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 10


 271:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM_1.c **** *  mode: Mode for the PWM_1 to operate in
 273:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM_1.c **** *   - PWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PWM_1.c **** *
 283:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 285:.\Generated_Source\PSoC4/PWM_1.c **** *
 286:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM_1.c **** {
 244              		.loc 1 288 0
 245              		.cfi_startproc
 246 0000 90B5     		push	{r4, r7, lr}
 247              		.cfi_def_cfa_offset 12
 248              		.cfi_offset 4, -12
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 85B0     		sub	sp, sp, #20
 252              		.cfi_def_cfa_offset 32
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 255 0006 7860     		str	r0, [r7, #4]
 289:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM_1.c **** 
 291:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 256              		.loc 1 291 0
 257 0008 3C1C     		mov	r4, r7
 258 000a 0F34     		add	r4, r4, #15
 259 000c FFF7FEFF 		bl	CyEnterCriticalSection
 260 0010 031C     		mov	r3, r0
 261 0012 2370     		strb	r3, [r4]
 292:.\Generated_Source\PSoC4/PWM_1.c **** 
 293:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_MODE_MASK;
 262              		.loc 1 293 0
 263 0014 0A4B     		ldr	r3, .L15
 264 0016 0A4A     		ldr	r2, .L15
 265 0018 1168     		ldr	r1, [r2]
 266 001a 0A4A     		ldr	r2, .L15+4
 267 001c 0A40     		and	r2, r1
 268 001e 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mode;
 269              		.loc 1 294 0
 270 0020 074B     		ldr	r3, .L15
 271 0022 074A     		ldr	r2, .L15
 272 0024 1168     		ldr	r1, [r2]
 273 0026 7A68     		ldr	r2, [r7, #4]
 274 0028 0A43     		orr	r2, r1
 275 002a 1A60     		str	r2, [r3]
 295:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 11


 296:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 276              		.loc 1 296 0
 277 002c 3B1C     		mov	r3, r7
 278 002e 0F33     		add	r3, r3, #15
 279 0030 1B78     		ldrb	r3, [r3]
 280 0032 181C     		mov	r0, r3
 281 0034 FFF7FEFF 		bl	CyExitCriticalSection
 297:.\Generated_Source\PSoC4/PWM_1.c **** }
 282              		.loc 1 297 0
 283 0038 BD46     		mov	sp, r7
 284 003a 05B0     		add	sp, sp, #20
 285              		@ sp needed
 286 003c 90BD     		pop	{r4, r7, pc}
 287              	.L16:
 288 003e C046     		.align	2
 289              	.L15:
 290 0040 40010540 		.word	1074069824
 291 0044 FFFFFFF8 		.word	-117440513
 292              		.cfi_endproc
 293              	.LFE4:
 294              		.size	PWM_1_SetMode, .-PWM_1_SetMode
 295              		.section	.text.PWM_1_SetQDMode,"ax",%progbits
 296              		.align	2
 297              		.global	PWM_1_SetQDMode
 298              		.code	16
 299              		.thumb_func
 300              		.type	PWM_1_SetQDMode, %function
 301              	PWM_1_SetQDMode:
 302              	.LFB5:
 298:.\Generated_Source\PSoC4/PWM_1.c **** 
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetQDMode
 302:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM_1.c **** *
 304:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM_1.c **** *
 308:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM_1.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM_1.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM_1.c **** *
 316:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 318:.\Generated_Source\PSoC4/PWM_1.c **** *
 319:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM_1.c **** {
 303              		.loc 1 321 0
 304              		.cfi_startproc
 305 0000 90B5     		push	{r4, r7, lr}
 306              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 12


 307              		.cfi_offset 4, -12
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 85B0     		sub	sp, sp, #20
 311              		.cfi_def_cfa_offset 32
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 322:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM_1.c **** 
 324:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 315              		.loc 1 324 0
 316 0008 3C1C     		mov	r4, r7
 317 000a 0F34     		add	r4, r4, #15
 318 000c FFF7FEFF 		bl	CyEnterCriticalSection
 319 0010 031C     		mov	r3, r0
 320 0012 2370     		strb	r3, [r4]
 325:.\Generated_Source\PSoC4/PWM_1.c **** 
 326:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_QUAD_MODE_MASK;
 321              		.loc 1 326 0
 322 0014 0A4B     		ldr	r3, .L18
 323 0016 0A4A     		ldr	r2, .L18
 324 0018 1168     		ldr	r1, [r2]
 325 001a 0A4A     		ldr	r2, .L18+4
 326 001c 0A40     		and	r2, r1
 327 001e 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= qdMode;
 328              		.loc 1 327 0
 329 0020 074B     		ldr	r3, .L18
 330 0022 074A     		ldr	r2, .L18
 331 0024 1168     		ldr	r1, [r2]
 332 0026 7A68     		ldr	r2, [r7, #4]
 333 0028 0A43     		orr	r2, r1
 334 002a 1A60     		str	r2, [r3]
 328:.\Generated_Source\PSoC4/PWM_1.c **** 
 329:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 335              		.loc 1 329 0
 336 002c 3B1C     		mov	r3, r7
 337 002e 0F33     		add	r3, r3, #15
 338 0030 1B78     		ldrb	r3, [r3]
 339 0032 181C     		mov	r0, r3
 340 0034 FFF7FEFF 		bl	CyExitCriticalSection
 330:.\Generated_Source\PSoC4/PWM_1.c **** }
 341              		.loc 1 330 0
 342 0038 BD46     		mov	sp, r7
 343 003a 05B0     		add	sp, sp, #20
 344              		@ sp needed
 345 003c 90BD     		pop	{r4, r7, pc}
 346              	.L19:
 347 003e C046     		.align	2
 348              	.L18:
 349 0040 40010540 		.word	1074069824
 350 0044 FFFF8FFF 		.word	-7340033
 351              		.cfi_endproc
 352              	.LFE5:
 353              		.size	PWM_1_SetQDMode, .-PWM_1_SetQDMode
 354              		.section	.text.PWM_1_SetPrescaler,"ax",%progbits
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 13


 355              		.align	2
 356              		.global	PWM_1_SetPrescaler
 357              		.code	16
 358              		.thumb_func
 359              		.type	PWM_1_SetPrescaler, %function
 360              	PWM_1_SetPrescaler:
 361              	.LFB6:
 331:.\Generated_Source\PSoC4/PWM_1.c **** 
 332:.\Generated_Source\PSoC4/PWM_1.c **** 
 333:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM_1.c **** *
 337:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM_1.c **** *
 341:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM_1.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM_1.c **** *
 353:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 355:.\Generated_Source\PSoC4/PWM_1.c **** *
 356:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM_1.c **** {
 362              		.loc 1 358 0
 363              		.cfi_startproc
 364 0000 90B5     		push	{r4, r7, lr}
 365              		.cfi_def_cfa_offset 12
 366              		.cfi_offset 4, -12
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 85B0     		sub	sp, sp, #20
 370              		.cfi_def_cfa_offset 32
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 359:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM_1.c **** 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 374              		.loc 1 361 0
 375 0008 3C1C     		mov	r4, r7
 376 000a 0F34     		add	r4, r4, #15
 377 000c FFF7FEFF 		bl	CyEnterCriticalSection
 378 0010 031C     		mov	r3, r0
 379 0012 2370     		strb	r3, [r4]
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 14


 363:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 380              		.loc 1 363 0
 381 0014 0A4B     		ldr	r3, .L21
 382 0016 0A4A     		ldr	r2, .L21
 383 0018 1168     		ldr	r1, [r2]
 384 001a 0A4A     		ldr	r2, .L21+4
 385 001c 0A40     		and	r2, r1
 386 001e 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= prescaler;
 387              		.loc 1 364 0
 388 0020 074B     		ldr	r3, .L21
 389 0022 074A     		ldr	r2, .L21
 390 0024 1168     		ldr	r1, [r2]
 391 0026 7A68     		ldr	r2, [r7, #4]
 392 0028 0A43     		orr	r2, r1
 393 002a 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC4/PWM_1.c **** 
 366:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 394              		.loc 1 366 0
 395 002c 3B1C     		mov	r3, r7
 396 002e 0F33     		add	r3, r3, #15
 397 0030 1B78     		ldrb	r3, [r3]
 398 0032 181C     		mov	r0, r3
 399 0034 FFF7FEFF 		bl	CyExitCriticalSection
 367:.\Generated_Source\PSoC4/PWM_1.c **** }
 400              		.loc 1 367 0
 401 0038 BD46     		mov	sp, r7
 402 003a 05B0     		add	sp, sp, #20
 403              		@ sp needed
 404 003c 90BD     		pop	{r4, r7, pc}
 405              	.L22:
 406 003e C046     		.align	2
 407              	.L21:
 408 0040 40010540 		.word	1074069824
 409 0044 FF00FFFF 		.word	-65281
 410              		.cfi_endproc
 411              	.LFE6:
 412              		.size	PWM_1_SetPrescaler, .-PWM_1_SetPrescaler
 413              		.section	.text.PWM_1_SetOneShot,"ax",%progbits
 414              		.align	2
 415              		.global	PWM_1_SetOneShot
 416              		.code	16
 417              		.thumb_func
 418              		.type	PWM_1_SetOneShot, %function
 419              	PWM_1_SetOneShot:
 420              	.LFB7:
 368:.\Generated_Source\PSoC4/PWM_1.c **** 
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetOneShot
 372:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM_1.c **** *
 374:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM_1 runs
 376:.\Generated_Source\PSoC4/PWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1 operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 15


 379:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM_1.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM_1.c **** *
 385:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 387:.\Generated_Source\PSoC4/PWM_1.c **** *
 388:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM_1.c **** {
 421              		.loc 1 390 0
 422              		.cfi_startproc
 423 0000 90B5     		push	{r4, r7, lr}
 424              		.cfi_def_cfa_offset 12
 425              		.cfi_offset 4, -12
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 85B0     		sub	sp, sp, #20
 429              		.cfi_def_cfa_offset 32
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 432 0006 7860     		str	r0, [r7, #4]
 391:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM_1.c **** 
 393:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 433              		.loc 1 393 0
 434 0008 3C1C     		mov	r4, r7
 435 000a 0F34     		add	r4, r4, #15
 436 000c FFF7FEFF 		bl	CyEnterCriticalSection
 437 0010 031C     		mov	r3, r0
 438 0012 2370     		strb	r3, [r4]
 394:.\Generated_Source\PSoC4/PWM_1.c **** 
 395:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_ONESHOT_MASK;
 439              		.loc 1 395 0
 440 0014 0B4B     		ldr	r3, .L24
 441 0016 0B4A     		ldr	r2, .L24
 442 0018 1168     		ldr	r1, [r2]
 443 001a 0B4A     		ldr	r2, .L24+4
 444 001c 0A40     		and	r2, r1
 445 001e 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1_1BIT_MASK) <<
 446              		.loc 1 396 0
 447 0020 084B     		ldr	r3, .L24
 448 0022 084A     		ldr	r2, .L24
 449 0024 1168     		ldr	r1, [r2]
 450 0026 7868     		ldr	r0, [r7, #4]
 451 0028 0122     		mov	r2, #1
 452 002a 0240     		and	r2, r0
 453 002c 9204     		lsl	r2, r2, #18
 454 002e 0A43     		orr	r2, r1
 455 0030 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/PWM_1.c ****                                                                PWM_1_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM_1.c **** 
 399:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 456              		.loc 1 399 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 16


 457 0032 3B1C     		mov	r3, r7
 458 0034 0F33     		add	r3, r3, #15
 459 0036 1B78     		ldrb	r3, [r3]
 460 0038 181C     		mov	r0, r3
 461 003a FFF7FEFF 		bl	CyExitCriticalSection
 400:.\Generated_Source\PSoC4/PWM_1.c **** }
 462              		.loc 1 400 0
 463 003e BD46     		mov	sp, r7
 464 0040 05B0     		add	sp, sp, #20
 465              		@ sp needed
 466 0042 90BD     		pop	{r4, r7, pc}
 467              	.L25:
 468              		.align	2
 469              	.L24:
 470 0044 40010540 		.word	1074069824
 471 0048 FFFFFBFF 		.word	-262145
 472              		.cfi_endproc
 473              	.LFE7:
 474              		.size	PWM_1_SetOneShot, .-PWM_1_SetOneShot
 475              		.section	.text.PWM_1_SetPWMMode,"ax",%progbits
 476              		.align	2
 477              		.global	PWM_1_SetPWMMode
 478              		.code	16
 479              		.thumb_func
 480              		.type	PWM_1_SetPWMMode, %function
 481              	PWM_1_SetPWMMode:
 482              	.LFB8:
 401:.\Generated_Source\PSoC4/PWM_1.c **** 
 402:.\Generated_Source\PSoC4/PWM_1.c **** 
 403:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM_1.c **** *
 407:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM_1.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM_1.c **** *
 414:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 17


 431:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM_1.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM_1.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM_1.c **** *
 439:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 441:.\Generated_Source\PSoC4/PWM_1.c **** *
 442:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM_1.c **** {
 483              		.loc 1 444 0
 484              		.cfi_startproc
 485 0000 80B5     		push	{r7, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 82B0     		sub	sp, sp, #8
 490              		.cfi_def_cfa_offset 16
 491 0004 00AF     		add	r7, sp, #0
 492              		.cfi_def_cfa_register 7
 493 0006 7860     		str	r0, [r7, #4]
 445:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL2_REG = (modeMask & PWM_1_6BIT_MASK);
 494              		.loc 1 445 0
 495 0008 034B     		ldr	r3, .L27
 496 000a 7968     		ldr	r1, [r7, #4]
 497 000c 3F22     		mov	r2, #63
 498 000e 0A40     		and	r2, r1
 499 0010 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/PWM_1.c **** }
 500              		.loc 1 446 0
 501 0012 BD46     		mov	sp, r7
 502 0014 02B0     		add	sp, sp, #8
 503              		@ sp needed
 504 0016 80BD     		pop	{r7, pc}
 505              	.L28:
 506              		.align	2
 507              	.L27:
 508 0018 68010540 		.word	1074069864
 509              		.cfi_endproc
 510              	.LFE8:
 511              		.size	PWM_1_SetPWMMode, .-PWM_1_SetPWMMode
 512              		.section	.text.PWM_1_SetPWMSyncKill,"ax",%progbits
 513              		.align	2
 514              		.global	PWM_1_SetPWMSyncKill
 515              		.code	16
 516              		.thumb_func
 517              		.type	PWM_1_SetPWMSyncKill, %function
 518              	PWM_1_SetPWMSyncKill:
 519              	.LFB9:
 447:.\Generated_Source\PSoC4/PWM_1.c **** 
 448:.\Generated_Source\PSoC4/PWM_1.c **** 
 449:.\Generated_Source\PSoC4/PWM_1.c **** 
 450:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 18


 451:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM_1.c **** *
 454:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM_1.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM_1.c **** *
 460:.\Generated_Source\PSoC4/PWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM_1.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM_1.c **** *
 463:.\Generated_Source\PSoC4/PWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM_1.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM_1.c **** 
 468:.\Generated_Source\PSoC4/PWM_1.c **** *
 469:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM_1.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM_1.c **** *
 475:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM_1.c **** {
 520              		.loc 1 480 0
 521              		.cfi_startproc
 522 0000 90B5     		push	{r4, r7, lr}
 523              		.cfi_def_cfa_offset 12
 524              		.cfi_offset 4, -12
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 85B0     		sub	sp, sp, #20
 528              		.cfi_def_cfa_offset 32
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 481:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM_1.c **** 
 483:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 532              		.loc 1 483 0
 533 0008 3C1C     		mov	r4, r7
 534 000a 0F34     		add	r4, r4, #15
 535 000c FFF7FEFF 		bl	CyEnterCriticalSection
 536 0010 031C     		mov	r3, r0
 537 0012 2370     		strb	r3, [r4]
 484:.\Generated_Source\PSoC4/PWM_1.c **** 
 485:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_SYNC_KILL_MASK;
 538              		.loc 1 485 0
 539 0014 0B4B     		ldr	r3, .L30
 540 0016 0B4A     		ldr	r2, .L30
 541 0018 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 19


 542 001a 0421     		mov	r1, #4
 543 001c 8A43     		bic	r2, r1
 544 001e 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1_1BIT_MASK)  <<
 545              		.loc 1 486 0
 546 0020 084B     		ldr	r3, .L30
 547 0022 084A     		ldr	r2, .L30
 548 0024 1168     		ldr	r1, [r2]
 549 0026 7868     		ldr	r0, [r7, #4]
 550 0028 0122     		mov	r2, #1
 551 002a 0240     		and	r2, r0
 552 002c 9200     		lsl	r2, r2, #2
 553 002e 0A43     		orr	r2, r1
 554 0030 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM_1.c **** 
 489:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 555              		.loc 1 489 0
 556 0032 3B1C     		mov	r3, r7
 557 0034 0F33     		add	r3, r3, #15
 558 0036 1B78     		ldrb	r3, [r3]
 559 0038 181C     		mov	r0, r3
 560 003a FFF7FEFF 		bl	CyExitCriticalSection
 490:.\Generated_Source\PSoC4/PWM_1.c **** }
 561              		.loc 1 490 0
 562 003e BD46     		mov	sp, r7
 563 0040 05B0     		add	sp, sp, #20
 564              		@ sp needed
 565 0042 90BD     		pop	{r4, r7, pc}
 566              	.L31:
 567              		.align	2
 568              	.L30:
 569 0044 40010540 		.word	1074069824
 570              		.cfi_endproc
 571              	.LFE9:
 572              		.size	PWM_1_SetPWMSyncKill, .-PWM_1_SetPWMSyncKill
 573              		.section	.text.PWM_1_SetPWMStopOnKill,"ax",%progbits
 574              		.align	2
 575              		.global	PWM_1_SetPWMStopOnKill
 576              		.code	16
 577              		.thumb_func
 578              		.type	PWM_1_SetPWMStopOnKill, %function
 579              	PWM_1_SetPWMStopOnKill:
 580              	.LFB10:
 491:.\Generated_Source\PSoC4/PWM_1.c **** 
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM_1.c **** *
 497:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM_1.c **** *
 502:.\Generated_Source\PSoC4/PWM_1.c **** *
 503:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 20


 504:.\Generated_Source\PSoC4/PWM_1.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM_1.c **** *
 509:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 511:.\Generated_Source\PSoC4/PWM_1.c **** *
 512:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM_1.c **** {
 581              		.loc 1 514 0
 582              		.cfi_startproc
 583 0000 90B5     		push	{r4, r7, lr}
 584              		.cfi_def_cfa_offset 12
 585              		.cfi_offset 4, -12
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 85B0     		sub	sp, sp, #20
 589              		.cfi_def_cfa_offset 32
 590 0004 00AF     		add	r7, sp, #0
 591              		.cfi_def_cfa_register 7
 592 0006 7860     		str	r0, [r7, #4]
 515:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM_1.c **** 
 517:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 593              		.loc 1 517 0
 594 0008 3C1C     		mov	r4, r7
 595 000a 0F34     		add	r4, r4, #15
 596 000c FFF7FEFF 		bl	CyEnterCriticalSection
 597 0010 031C     		mov	r3, r0
 598 0012 2370     		strb	r3, [r4]
 518:.\Generated_Source\PSoC4/PWM_1.c **** 
 519:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_STOP_KILL_MASK;
 599              		.loc 1 519 0
 600 0014 0B4B     		ldr	r3, .L33
 601 0016 0B4A     		ldr	r2, .L33
 602 0018 1268     		ldr	r2, [r2]
 603 001a 0821     		mov	r1, #8
 604 001c 8A43     		bic	r2, r1
 605 001e 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1_1BIT_MASK)  <<
 606              		.loc 1 520 0
 607 0020 084B     		ldr	r3, .L33
 608 0022 084A     		ldr	r2, .L33
 609 0024 1168     		ldr	r1, [r2]
 610 0026 7868     		ldr	r0, [r7, #4]
 611 0028 0122     		mov	r2, #1
 612 002a 0240     		and	r2, r0
 613 002c D200     		lsl	r2, r2, #3
 614 002e 0A43     		orr	r2, r1
 615 0030 1A60     		str	r2, [r3]
 521:.\Generated_Source\PSoC4/PWM_1.c ****                                                          PWM_1_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM_1.c **** 
 523:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 616              		.loc 1 523 0
 617 0032 3B1C     		mov	r3, r7
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 21


 618 0034 0F33     		add	r3, r3, #15
 619 0036 1B78     		ldrb	r3, [r3]
 620 0038 181C     		mov	r0, r3
 621 003a FFF7FEFF 		bl	CyExitCriticalSection
 524:.\Generated_Source\PSoC4/PWM_1.c **** }
 622              		.loc 1 524 0
 623 003e BD46     		mov	sp, r7
 624 0040 05B0     		add	sp, sp, #20
 625              		@ sp needed
 626 0042 90BD     		pop	{r4, r7, pc}
 627              	.L34:
 628              		.align	2
 629              	.L33:
 630 0044 40010540 		.word	1074069824
 631              		.cfi_endproc
 632              	.LFE10:
 633              		.size	PWM_1_SetPWMStopOnKill, .-PWM_1_SetPWMStopOnKill
 634              		.section	.text.PWM_1_SetPWMDeadTime,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_1_SetPWMDeadTime
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_1_SetPWMDeadTime, %function
 640              	PWM_1_SetPWMDeadTime:
 641              	.LFB11:
 525:.\Generated_Source\PSoC4/PWM_1.c **** 
 526:.\Generated_Source\PSoC4/PWM_1.c **** 
 527:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM_1.c **** *
 531:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM_1.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** *
 538:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM_1.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM_1.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM_1.c **** *
 542:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 544:.\Generated_Source\PSoC4/PWM_1.c **** *
 545:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM_1.c **** {
 642              		.loc 1 547 0
 643              		.cfi_startproc
 644 0000 90B5     		push	{r4, r7, lr}
 645              		.cfi_def_cfa_offset 12
 646              		.cfi_offset 4, -12
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 85B0     		sub	sp, sp, #20
 650              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 22


 651 0004 00AF     		add	r7, sp, #0
 652              		.cfi_def_cfa_register 7
 653 0006 7860     		str	r0, [r7, #4]
 548:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM_1.c **** 
 550:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 654              		.loc 1 550 0
 655 0008 3C1C     		mov	r4, r7
 656 000a 0F34     		add	r4, r4, #15
 657 000c FFF7FEFF 		bl	CyEnterCriticalSection
 658 0010 031C     		mov	r3, r0
 659 0012 2370     		strb	r3, [r4]
 551:.\Generated_Source\PSoC4/PWM_1.c **** 
 552:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 660              		.loc 1 552 0
 661 0014 0B4B     		ldr	r3, .L36
 662 0016 0B4A     		ldr	r2, .L36
 663 0018 1168     		ldr	r1, [r2]
 664 001a 0B4A     		ldr	r2, .L36+4
 665 001c 0A40     		and	r2, r1
 666 001e 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((deadTime & PWM_1_8BIT_MASK) <<
 667              		.loc 1 553 0
 668 0020 084B     		ldr	r3, .L36
 669 0022 084A     		ldr	r2, .L36
 670 0024 1168     		ldr	r1, [r2]
 671 0026 7A68     		ldr	r2, [r7, #4]
 672 0028 1202     		lsl	r2, r2, #8
 673 002a 1204     		lsl	r2, r2, #16
 674 002c 120C     		lsr	r2, r2, #16
 675 002e 0A43     		orr	r2, r1
 676 0030 1A60     		str	r2, [r3]
 554:.\Generated_Source\PSoC4/PWM_1.c ****                                                           PWM_1_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM_1.c **** 
 556:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 677              		.loc 1 556 0
 678 0032 3B1C     		mov	r3, r7
 679 0034 0F33     		add	r3, r3, #15
 680 0036 1B78     		ldrb	r3, [r3]
 681 0038 181C     		mov	r0, r3
 682 003a FFF7FEFF 		bl	CyExitCriticalSection
 557:.\Generated_Source\PSoC4/PWM_1.c **** }
 683              		.loc 1 557 0
 684 003e BD46     		mov	sp, r7
 685 0040 05B0     		add	sp, sp, #20
 686              		@ sp needed
 687 0042 90BD     		pop	{r4, r7, pc}
 688              	.L37:
 689              		.align	2
 690              	.L36:
 691 0044 40010540 		.word	1074069824
 692 0048 FF00FFFF 		.word	-65281
 693              		.cfi_endproc
 694              	.LFE11:
 695              		.size	PWM_1_SetPWMDeadTime, .-PWM_1_SetPWMDeadTime
 696              		.section	.text.PWM_1_SetPWMInvert,"ax",%progbits
 697              		.align	2
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 23


 698              		.global	PWM_1_SetPWMInvert
 699              		.code	16
 700              		.thumb_func
 701              		.type	PWM_1_SetPWMInvert, %function
 702              	PWM_1_SetPWMInvert:
 703              	.LFB12:
 558:.\Generated_Source\PSoC4/PWM_1.c **** 
 559:.\Generated_Source\PSoC4/PWM_1.c **** 
 560:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM_1.c **** *
 564:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 565:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM_1.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM_1.c **** *
 569:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM_1.c **** *
 575:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 577:.\Generated_Source\PSoC4/PWM_1.c **** *
 578:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM_1.c **** {
 704              		.loc 1 580 0
 705              		.cfi_startproc
 706 0000 90B5     		push	{r4, r7, lr}
 707              		.cfi_def_cfa_offset 12
 708              		.cfi_offset 4, -12
 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
 711 0002 85B0     		sub	sp, sp, #20
 712              		.cfi_def_cfa_offset 32
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM_1.c **** 
 583:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 716              		.loc 1 583 0
 717 0008 3C1C     		mov	r4, r7
 718 000a 0F34     		add	r4, r4, #15
 719 000c FFF7FEFF 		bl	CyEnterCriticalSection
 720 0010 031C     		mov	r3, r0
 721 0012 2370     		strb	r3, [r4]
 584:.\Generated_Source\PSoC4/PWM_1.c **** 
 585:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_INV_OUT_MASK;
 722              		.loc 1 585 0
 723 0014 0A4B     		ldr	r3, .L39
 724 0016 0A4A     		ldr	r2, .L39
 725 0018 1168     		ldr	r1, [r2]
 726 001a 0A4A     		ldr	r2, .L39+4
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 24


 727 001c 0A40     		and	r2, r1
 728 001e 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mask;
 729              		.loc 1 586 0
 730 0020 074B     		ldr	r3, .L39
 731 0022 074A     		ldr	r2, .L39
 732 0024 1168     		ldr	r1, [r2]
 733 0026 7A68     		ldr	r2, [r7, #4]
 734 0028 0A43     		orr	r2, r1
 735 002a 1A60     		str	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM_1.c **** 
 588:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 736              		.loc 1 588 0
 737 002c 3B1C     		mov	r3, r7
 738 002e 0F33     		add	r3, r3, #15
 739 0030 1B78     		ldrb	r3, [r3]
 740 0032 181C     		mov	r0, r3
 741 0034 FFF7FEFF 		bl	CyExitCriticalSection
 589:.\Generated_Source\PSoC4/PWM_1.c **** }
 742              		.loc 1 589 0
 743 0038 BD46     		mov	sp, r7
 744 003a 05B0     		add	sp, sp, #20
 745              		@ sp needed
 746 003c 90BD     		pop	{r4, r7, pc}
 747              	.L40:
 748 003e C046     		.align	2
 749              	.L39:
 750 0040 40010540 		.word	1074069824
 751 0044 FFFFCFFF 		.word	-3145729
 752              		.cfi_endproc
 753              	.LFE12:
 754              		.size	PWM_1_SetPWMInvert, .-PWM_1_SetPWMInvert
 755              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 756              		.align	2
 757              		.global	PWM_1_WriteCounter
 758              		.code	16
 759              		.thumb_func
 760              		.type	PWM_1_WriteCounter, %function
 761              	PWM_1_WriteCounter:
 762              	.LFB13:
 590:.\Generated_Source\PSoC4/PWM_1.c **** 
 591:.\Generated_Source\PSoC4/PWM_1.c **** 
 592:.\Generated_Source\PSoC4/PWM_1.c **** 
 593:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCounter
 595:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM_1.c **** *
 597:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM_1.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM_1.c **** *
 602:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM_1.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM_1.c **** *
 605:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM_1.c **** *  None
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 25


 607:.\Generated_Source\PSoC4/PWM_1.c **** *
 608:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM_1.c **** {
 763              		.loc 1 610 0
 764              		.cfi_startproc
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 82B0     		sub	sp, sp, #8
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 7860     		str	r0, [r7, #4]
 611:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COUNTER_REG = (count & PWM_1_16BIT_MASK);
 774              		.loc 1 611 0
 775 0008 034B     		ldr	r3, .L42
 776 000a 7A68     		ldr	r2, [r7, #4]
 777 000c 1204     		lsl	r2, r2, #16
 778 000e 120C     		lsr	r2, r2, #16
 779 0010 1A60     		str	r2, [r3]
 612:.\Generated_Source\PSoC4/PWM_1.c **** }
 780              		.loc 1 612 0
 781 0012 BD46     		mov	sp, r7
 782 0014 02B0     		add	sp, sp, #8
 783              		@ sp needed
 784 0016 80BD     		pop	{r7, pc}
 785              	.L43:
 786              		.align	2
 787              	.L42:
 788 0018 48010540 		.word	1074069832
 789              		.cfi_endproc
 790              	.LFE13:
 791              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 792              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 793              		.align	2
 794              		.global	PWM_1_ReadCounter
 795              		.code	16
 796              		.thumb_func
 797              		.type	PWM_1_ReadCounter, %function
 798              	PWM_1_ReadCounter:
 799              	.LFB14:
 613:.\Generated_Source\PSoC4/PWM_1.c **** 
 614:.\Generated_Source\PSoC4/PWM_1.c **** 
 615:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCounter
 617:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM_1.c **** *
 619:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM_1.c **** *
 622:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 624:.\Generated_Source\PSoC4/PWM_1.c **** *
 625:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM_1.c **** *  Current counter value
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 26


 627:.\Generated_Source\PSoC4/PWM_1.c **** *
 628:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM_1.c **** {
 800              		.loc 1 630 0
 801              		.cfi_startproc
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 631:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COUNTER_REG & PWM_1_16BIT_MASK);
 808              		.loc 1 631 0
 809 0004 034B     		ldr	r3, .L46
 810 0006 1B68     		ldr	r3, [r3]
 811 0008 1B04     		lsl	r3, r3, #16
 812 000a 1B0C     		lsr	r3, r3, #16
 632:.\Generated_Source\PSoC4/PWM_1.c **** }
 813              		.loc 1 632 0
 814 000c 181C     		mov	r0, r3
 815 000e BD46     		mov	sp, r7
 816              		@ sp needed
 817 0010 80BD     		pop	{r7, pc}
 818              	.L47:
 819 0012 C046     		.align	2
 820              	.L46:
 821 0014 48010540 		.word	1074069832
 822              		.cfi_endproc
 823              	.LFE14:
 824              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 825              		.section	.text.PWM_1_SetCounterMode,"ax",%progbits
 826              		.align	2
 827              		.global	PWM_1_SetCounterMode
 828              		.code	16
 829              		.thumb_func
 830              		.type	PWM_1_SetCounterMode, %function
 831              	PWM_1_SetCounterMode:
 832              	.LFB15:
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c **** 
 635:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM_1.c **** *
 639:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 640:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM_1.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM_1.c **** *
 643:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM_1.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 27


 651:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM_1.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM_1.c **** *
 654:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 656:.\Generated_Source\PSoC4/PWM_1.c **** *
 657:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM_1.c **** {
 833              		.loc 1 659 0
 834              		.cfi_startproc
 835 0000 90B5     		push	{r4, r7, lr}
 836              		.cfi_def_cfa_offset 12
 837              		.cfi_offset 4, -12
 838              		.cfi_offset 7, -8
 839              		.cfi_offset 14, -4
 840 0002 85B0     		sub	sp, sp, #20
 841              		.cfi_def_cfa_offset 32
 842 0004 00AF     		add	r7, sp, #0
 843              		.cfi_def_cfa_register 7
 844 0006 7860     		str	r0, [r7, #4]
 660:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM_1.c **** 
 662:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 845              		.loc 1 662 0
 846 0008 3C1C     		mov	r4, r7
 847 000a 0F34     		add	r4, r4, #15
 848 000c FFF7FEFF 		bl	CyEnterCriticalSection
 849 0010 031C     		mov	r3, r0
 850 0012 2370     		strb	r3, [r4]
 663:.\Generated_Source\PSoC4/PWM_1.c **** 
 664:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_UPDOWN_MASK;
 851              		.loc 1 664 0
 852 0014 0A4B     		ldr	r3, .L49
 853 0016 0A4A     		ldr	r2, .L49
 854 0018 1168     		ldr	r1, [r2]
 855 001a 0A4A     		ldr	r2, .L49+4
 856 001c 0A40     		and	r2, r1
 857 001e 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= counterMode;
 858              		.loc 1 665 0
 859 0020 074B     		ldr	r3, .L49
 860 0022 074A     		ldr	r2, .L49
 861 0024 1168     		ldr	r1, [r2]
 862 0026 7A68     		ldr	r2, [r7, #4]
 863 0028 0A43     		orr	r2, r1
 864 002a 1A60     		str	r2, [r3]
 666:.\Generated_Source\PSoC4/PWM_1.c **** 
 667:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 865              		.loc 1 667 0
 866 002c 3B1C     		mov	r3, r7
 867 002e 0F33     		add	r3, r3, #15
 868 0030 1B78     		ldrb	r3, [r3]
 869 0032 181C     		mov	r0, r3
 870 0034 FFF7FEFF 		bl	CyExitCriticalSection
 668:.\Generated_Source\PSoC4/PWM_1.c **** }
 871              		.loc 1 668 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 28


 872 0038 BD46     		mov	sp, r7
 873 003a 05B0     		add	sp, sp, #20
 874              		@ sp needed
 875 003c 90BD     		pop	{r4, r7, pc}
 876              	.L50:
 877 003e C046     		.align	2
 878              	.L49:
 879 0040 40010540 		.word	1074069824
 880 0044 FFFFFCFF 		.word	-196609
 881              		.cfi_endproc
 882              	.LFE15:
 883              		.size	PWM_1_SetCounterMode, .-PWM_1_SetCounterMode
 884              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 885              		.align	2
 886              		.global	PWM_1_WritePeriod
 887              		.code	16
 888              		.thumb_func
 889              		.type	PWM_1_WritePeriod, %function
 890              	PWM_1_WritePeriod:
 891              	.LFB16:
 669:.\Generated_Source\PSoC4/PWM_1.c **** 
 670:.\Generated_Source\PSoC4/PWM_1.c **** 
 671:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 673:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM_1.c **** *
 675:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM_1.c **** *
 680:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM_1.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM_1.c **** *
 683:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 685:.\Generated_Source\PSoC4/PWM_1.c **** *
 686:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM_1.c **** {
 892              		.loc 1 688 0
 893              		.cfi_startproc
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 689:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_REG = (period & PWM_1_16BIT_MASK);
 903              		.loc 1 689 0
 904 0008 034B     		ldr	r3, .L52
 905 000a 7A68     		ldr	r2, [r7, #4]
 906 000c 1204     		lsl	r2, r2, #16
 907 000e 120C     		lsr	r2, r2, #16
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 29


 908 0010 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/PWM_1.c **** }
 909              		.loc 1 690 0
 910 0012 BD46     		mov	sp, r7
 911 0014 02B0     		add	sp, sp, #8
 912              		@ sp needed
 913 0016 80BD     		pop	{r7, pc}
 914              	.L53:
 915              		.align	2
 916              	.L52:
 917 0018 54010540 		.word	1074069844
 918              		.cfi_endproc
 919              	.LFE16:
 920              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 921              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 922              		.align	2
 923              		.global	PWM_1_ReadPeriod
 924              		.code	16
 925              		.thumb_func
 926              		.type	PWM_1_ReadPeriod, %function
 927              	PWM_1_ReadPeriod:
 928              	.LFB17:
 691:.\Generated_Source\PSoC4/PWM_1.c **** 
 692:.\Generated_Source\PSoC4/PWM_1.c **** 
 693:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM_1.c **** *
 697:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM_1.c **** *
 700:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 702:.\Generated_Source\PSoC4/PWM_1.c **** *
 703:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM_1.c **** *
 706:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM_1.c **** {
 929              		.loc 1 708 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 709:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_REG & PWM_1_16BIT_MASK);
 937              		.loc 1 709 0
 938 0004 034B     		ldr	r3, .L56
 939 0006 1B68     		ldr	r3, [r3]
 940 0008 1B04     		lsl	r3, r3, #16
 941 000a 1B0C     		lsr	r3, r3, #16
 710:.\Generated_Source\PSoC4/PWM_1.c **** }
 942              		.loc 1 710 0
 943 000c 181C     		mov	r0, r3
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 30


 944 000e BD46     		mov	sp, r7
 945              		@ sp needed
 946 0010 80BD     		pop	{r7, pc}
 947              	.L57:
 948 0012 C046     		.align	2
 949              	.L56:
 950 0014 54010540 		.word	1074069844
 951              		.cfi_endproc
 952              	.LFE17:
 953              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 954              		.section	.text.PWM_1_SetCompareSwap,"ax",%progbits
 955              		.align	2
 956              		.global	PWM_1_SetCompareSwap
 957              		.code	16
 958              		.thumb_func
 959              		.type	PWM_1_SetCompareSwap, %function
 960              	PWM_1_SetCompareSwap:
 961              	.LFB18:
 711:.\Generated_Source\PSoC4/PWM_1.c **** 
 712:.\Generated_Source\PSoC4/PWM_1.c **** 
 713:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCompareSwap
 715:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM_1.c **** *
 717:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM_1.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM_1.c **** *
 723:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM_1.c **** *
 729:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 731:.\Generated_Source\PSoC4/PWM_1.c **** *
 732:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM_1.c **** {
 962              		.loc 1 734 0
 963              		.cfi_startproc
 964 0000 90B5     		push	{r4, r7, lr}
 965              		.cfi_def_cfa_offset 12
 966              		.cfi_offset 4, -12
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 85B0     		sub	sp, sp, #20
 970              		.cfi_def_cfa_offset 32
 971 0004 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 735:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM_1.c **** 
 737:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 31


 974              		.loc 1 737 0
 975 0008 3C1C     		mov	r4, r7
 976 000a 0F34     		add	r4, r4, #15
 977 000c FFF7FEFF 		bl	CyEnterCriticalSection
 978 0010 031C     		mov	r3, r0
 979 0012 2370     		strb	r3, [r4]
 738:.\Generated_Source\PSoC4/PWM_1.c **** 
 739:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_CC_MASK;
 980              		.loc 1 739 0
 981 0014 0B4B     		ldr	r3, .L59
 982 0016 0B4A     		ldr	r2, .L59
 983 0018 1268     		ldr	r2, [r2]
 984 001a 0121     		mov	r1, #1
 985 001c 8A43     		bic	r2, r1
 986 001e 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= (swapEnable & PWM_1_1BIT_MASK);
 987              		.loc 1 740 0
 988 0020 084B     		ldr	r3, .L59
 989 0022 084A     		ldr	r2, .L59
 990 0024 1168     		ldr	r1, [r2]
 991 0026 7868     		ldr	r0, [r7, #4]
 992 0028 0122     		mov	r2, #1
 993 002a 0240     		and	r2, r0
 994 002c 0A43     		orr	r2, r1
 995 002e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/PWM_1.c **** 
 742:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 996              		.loc 1 742 0
 997 0030 3B1C     		mov	r3, r7
 998 0032 0F33     		add	r3, r3, #15
 999 0034 1B78     		ldrb	r3, [r3]
 1000 0036 181C     		mov	r0, r3
 1001 0038 FFF7FEFF 		bl	CyExitCriticalSection
 743:.\Generated_Source\PSoC4/PWM_1.c **** }
 1002              		.loc 1 743 0
 1003 003c BD46     		mov	sp, r7
 1004 003e 05B0     		add	sp, sp, #20
 1005              		@ sp needed
 1006 0040 90BD     		pop	{r4, r7, pc}
 1007              	.L60:
 1008 0042 C046     		.align	2
 1009              	.L59:
 1010 0044 40010540 		.word	1074069824
 1011              		.cfi_endproc
 1012              	.LFE18:
 1013              		.size	PWM_1_SetCompareSwap, .-PWM_1_SetCompareSwap
 1014              		.section	.text.PWM_1_WritePeriodBuf,"ax",%progbits
 1015              		.align	2
 1016              		.global	PWM_1_WritePeriodBuf
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	PWM_1_WritePeriodBuf, %function
 1020              	PWM_1_WritePeriodBuf:
 1021              	.LFB19:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 32


 747:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c **** *
 750:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM_1.c **** *
 753:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM_1.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM_1.c **** *
 756:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 758:.\Generated_Source\PSoC4/PWM_1.c **** *
 759:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM_1.c **** {
 1022              		.loc 1 761 0
 1023              		.cfi_startproc
 1024 0000 80B5     		push	{r7, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 82B0     		sub	sp, sp, #8
 1029              		.cfi_def_cfa_offset 16
 1030 0004 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]
 762:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_BUF_REG = (periodBuf & PWM_1_16BIT_MASK);
 1033              		.loc 1 762 0
 1034 0008 034B     		ldr	r3, .L62
 1035 000a 7A68     		ldr	r2, [r7, #4]
 1036 000c 1204     		lsl	r2, r2, #16
 1037 000e 120C     		lsr	r2, r2, #16
 1038 0010 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM_1.c **** }
 1039              		.loc 1 763 0
 1040 0012 BD46     		mov	sp, r7
 1041 0014 02B0     		add	sp, sp, #8
 1042              		@ sp needed
 1043 0016 80BD     		pop	{r7, pc}
 1044              	.L63:
 1045              		.align	2
 1046              	.L62:
 1047 0018 58010540 		.word	1074069848
 1048              		.cfi_endproc
 1049              	.LFE19:
 1050              		.size	PWM_1_WritePeriodBuf, .-PWM_1_WritePeriodBuf
 1051              		.section	.text.PWM_1_ReadPeriodBuf,"ax",%progbits
 1052              		.align	2
 1053              		.global	PWM_1_ReadPeriodBuf
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	PWM_1_ReadPeriodBuf, %function
 1057              	PWM_1_ReadPeriodBuf:
 1058              	.LFB20:
 764:.\Generated_Source\PSoC4/PWM_1.c **** 
 765:.\Generated_Source\PSoC4/PWM_1.c **** 
 766:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 33


 767:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM_1.c **** *
 770:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM_1.c **** *
 773:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 775:.\Generated_Source\PSoC4/PWM_1.c **** *
 776:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM_1.c **** *
 779:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM_1.c **** {
 1059              		.loc 1 781 0
 1060              		.cfi_startproc
 1061 0000 80B5     		push	{r7, lr}
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
 782:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_BUF_REG & PWM_1_16BIT_MASK);
 1067              		.loc 1 782 0
 1068 0004 034B     		ldr	r3, .L66
 1069 0006 1B68     		ldr	r3, [r3]
 1070 0008 1B04     		lsl	r3, r3, #16
 1071 000a 1B0C     		lsr	r3, r3, #16
 783:.\Generated_Source\PSoC4/PWM_1.c **** }
 1072              		.loc 1 783 0
 1073 000c 181C     		mov	r0, r3
 1074 000e BD46     		mov	sp, r7
 1075              		@ sp needed
 1076 0010 80BD     		pop	{r7, pc}
 1077              	.L67:
 1078 0012 C046     		.align	2
 1079              	.L66:
 1080 0014 58010540 		.word	1074069848
 1081              		.cfi_endproc
 1082              	.LFE20:
 1083              		.size	PWM_1_ReadPeriodBuf, .-PWM_1_ReadPeriodBuf
 1084              		.section	.text.PWM_1_SetPeriodSwap,"ax",%progbits
 1085              		.align	2
 1086              		.global	PWM_1_SetPeriodSwap
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	PWM_1_SetPeriodSwap, %function
 1090              	PWM_1_SetPeriodSwap:
 1091              	.LFB21:
 784:.\Generated_Source\PSoC4/PWM_1.c **** 
 785:.\Generated_Source\PSoC4/PWM_1.c **** 
 786:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM_1.c **** *
 790:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 34


 791:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM_1.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM_1.c **** *
 796:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM_1.c **** *
 802:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 804:.\Generated_Source\PSoC4/PWM_1.c **** *
 805:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM_1.c **** {
 1092              		.loc 1 807 0
 1093              		.cfi_startproc
 1094 0000 90B5     		push	{r4, r7, lr}
 1095              		.cfi_def_cfa_offset 12
 1096              		.cfi_offset 4, -12
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 85B0     		sub	sp, sp, #20
 1100              		.cfi_def_cfa_offset 32
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 7860     		str	r0, [r7, #4]
 808:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM_1.c **** 
 810:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1104              		.loc 1 810 0
 1105 0008 3C1C     		mov	r4, r7
 1106 000a 0F34     		add	r4, r4, #15
 1107 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1108 0010 031C     		mov	r3, r0
 1109 0012 2370     		strb	r3, [r4]
 811:.\Generated_Source\PSoC4/PWM_1.c **** 
 812:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_PERIOD_MASK;
 1110              		.loc 1 812 0
 1111 0014 0B4B     		ldr	r3, .L69
 1112 0016 0B4A     		ldr	r2, .L69
 1113 0018 1268     		ldr	r2, [r2]
 1114 001a 0221     		mov	r1, #2
 1115 001c 8A43     		bic	r2, r1
 1116 001e 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((swapEnable & PWM_1_1BIT_MASK) <<
 1117              		.loc 1 813 0
 1118 0020 084B     		ldr	r3, .L69
 1119 0022 084A     		ldr	r2, .L69
 1120 0024 1168     		ldr	r1, [r2]
 1121 0026 7868     		ldr	r0, [r7, #4]
 1122 0028 0122     		mov	r2, #1
 1123 002a 0240     		and	r2, r0
 1124 002c 5200     		lsl	r2, r2, #1
 1125 002e 0A43     		orr	r2, r1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 35


 1126 0030 1A60     		str	r2, [r3]
 814:.\Generated_Source\PSoC4/PWM_1.c ****                                                             PWM_1_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM_1.c **** 
 816:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1127              		.loc 1 816 0
 1128 0032 3B1C     		mov	r3, r7
 1129 0034 0F33     		add	r3, r3, #15
 1130 0036 1B78     		ldrb	r3, [r3]
 1131 0038 181C     		mov	r0, r3
 1132 003a FFF7FEFF 		bl	CyExitCriticalSection
 817:.\Generated_Source\PSoC4/PWM_1.c **** }
 1133              		.loc 1 817 0
 1134 003e BD46     		mov	sp, r7
 1135 0040 05B0     		add	sp, sp, #20
 1136              		@ sp needed
 1137 0042 90BD     		pop	{r4, r7, pc}
 1138              	.L70:
 1139              		.align	2
 1140              	.L69:
 1141 0044 40010540 		.word	1074069824
 1142              		.cfi_endproc
 1143              	.LFE21:
 1144              		.size	PWM_1_SetPeriodSwap, .-PWM_1_SetPeriodSwap
 1145              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 1146              		.align	2
 1147              		.global	PWM_1_WriteCompare
 1148              		.code	16
 1149              		.thumb_func
 1150              		.type	PWM_1_WriteCompare, %function
 1151              	PWM_1_WriteCompare:
 1152              	.LFB22:
 818:.\Generated_Source\PSoC4/PWM_1.c **** 
 819:.\Generated_Source\PSoC4/PWM_1.c **** 
 820:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompare
 822:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM_1.c **** *
 824:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM_1.c **** *
 828:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM_1.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM_1.c **** *
 831:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 833:.\Generated_Source\PSoC4/PWM_1.c **** *
 834:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM_1.c **** {
 1153              		.loc 1 836 0
 1154              		.cfi_startproc
 1155 0000 80B5     		push	{r7, lr}
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 36


 1160              		.cfi_def_cfa_offset 16
 1161 0004 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
 1163 0006 7860     		str	r0, [r7, #4]
 837:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM_1.c **** 
 841:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM_1.c **** 
 844:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM_1.c ****         {
 846:.\Generated_Source\PSoC4/PWM_1.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM_1.c ****         }
 848:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM_1.c ****         {
 850:.\Generated_Source\PSoC4/PWM_1.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM_1.c ****         }
 852:.\Generated_Source\PSoC4/PWM_1.c ****         else
 853:.\Generated_Source\PSoC4/PWM_1.c ****         {
 854:.\Generated_Source\PSoC4/PWM_1.c ****         }
 855:.\Generated_Source\PSoC4/PWM_1.c ****         
 856:.\Generated_Source\PSoC4/PWM_1.c ****     
 857:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM_1.c ****     
 859:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_REG = (compare & PWM_1_16BIT_MASK);
 1164              		.loc 1 859 0
 1165 0008 034B     		ldr	r3, .L72
 1166 000a 7A68     		ldr	r2, [r7, #4]
 1167 000c 1204     		lsl	r2, r2, #16
 1168 000e 120C     		lsr	r2, r2, #16
 1169 0010 1A60     		str	r2, [r3]
 860:.\Generated_Source\PSoC4/PWM_1.c **** }
 1170              		.loc 1 860 0
 1171 0012 BD46     		mov	sp, r7
 1172 0014 02B0     		add	sp, sp, #8
 1173              		@ sp needed
 1174 0016 80BD     		pop	{r7, pc}
 1175              	.L73:
 1176              		.align	2
 1177              	.L72:
 1178 0018 4C010540 		.word	1074069836
 1179              		.cfi_endproc
 1180              	.LFE22:
 1181              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 1182              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 1183              		.align	2
 1184              		.global	PWM_1_ReadCompare
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	PWM_1_ReadCompare, %function
 1188              	PWM_1_ReadCompare:
 1189              	.LFB23:
 861:.\Generated_Source\PSoC4/PWM_1.c **** 
 862:.\Generated_Source\PSoC4/PWM_1.c **** 
 863:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 37


 864:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompare
 865:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM_1.c **** *
 867:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM_1.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM_1.c **** *
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM_1.c **** {
 1190              		.loc 1 879 0
 1191              		.cfi_startproc
 1192 0000 80B5     		push	{r7, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 00AF     		add	r7, sp, #0
 1197              		.cfi_def_cfa_register 7
 880:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM_1.c **** 
 885:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM_1.c ****         
 888:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM_1.c ****         
 890:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM_1.c ****         {
 892:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM_1.c ****         }
 894:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM_1.c ****         {
 896:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM_1.c ****         }
 898:.\Generated_Source\PSoC4/PWM_1.c ****         else
 899:.\Generated_Source\PSoC4/PWM_1.c ****         {
 900:.\Generated_Source\PSoC4/PWM_1.c ****         }
 901:.\Generated_Source\PSoC4/PWM_1.c **** 
 902:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 904:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1198              		.loc 1 904 0
 1199 0004 034B     		ldr	r3, .L76
 1200 0006 1B68     		ldr	r3, [r3]
 1201 0008 1B04     		lsl	r3, r3, #16
 1202 000a 1B0C     		lsr	r3, r3, #16
 905:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_1.c **** }
 1203              		.loc 1 906 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 38


 1204 000c 181C     		mov	r0, r3
 1205 000e BD46     		mov	sp, r7
 1206              		@ sp needed
 1207 0010 80BD     		pop	{r7, pc}
 1208              	.L77:
 1209 0012 C046     		.align	2
 1210              	.L76:
 1211 0014 4C010540 		.word	1074069836
 1212              		.cfi_endproc
 1213              	.LFE23:
 1214              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 1215              		.section	.text.PWM_1_WriteCompareBuf,"ax",%progbits
 1216              		.align	2
 1217              		.global	PWM_1_WriteCompareBuf
 1218              		.code	16
 1219              		.thumb_func
 1220              		.type	PWM_1_WriteCompareBuf, %function
 1221              	PWM_1_WriteCompareBuf:
 1222              	.LFB24:
 907:.\Generated_Source\PSoC4/PWM_1.c **** 
 908:.\Generated_Source\PSoC4/PWM_1.c **** 
 909:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM_1.c **** *
 913:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM_1.c **** *
 917:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM_1.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM_1.c **** *
 920:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 922:.\Generated_Source\PSoC4/PWM_1.c **** *
 923:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM_1.c **** {
 1223              		.loc 1 925 0
 1224              		.cfi_startproc
 1225 0000 80B5     		push	{r7, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 7, -8
 1228              		.cfi_offset 14, -4
 1229 0002 82B0     		sub	sp, sp, #8
 1230              		.cfi_def_cfa_offset 16
 1231 0004 00AF     		add	r7, sp, #0
 1232              		.cfi_def_cfa_register 7
 1233 0006 7860     		str	r0, [r7, #4]
 926:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM_1.c **** 
 930:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM_1.c **** 
 933:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 39


 934:.\Generated_Source\PSoC4/PWM_1.c ****         {
 935:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM_1.c ****         }
 937:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM_1.c ****         {
 939:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM_1.c ****         }
 941:.\Generated_Source\PSoC4/PWM_1.c ****         else
 942:.\Generated_Source\PSoC4/PWM_1.c ****         {
 943:.\Generated_Source\PSoC4/PWM_1.c ****         }
 944:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM_1.c ****     
 946:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_BUF_REG = (compareBuf & PWM_1_16BIT_MASK);
 1234              		.loc 1 946 0
 1235 0008 034B     		ldr	r3, .L79
 1236 000a 7A68     		ldr	r2, [r7, #4]
 1237 000c 1204     		lsl	r2, r2, #16
 1238 000e 120C     		lsr	r2, r2, #16
 1239 0010 1A60     		str	r2, [r3]
 947:.\Generated_Source\PSoC4/PWM_1.c **** }
 1240              		.loc 1 947 0
 1241 0012 BD46     		mov	sp, r7
 1242 0014 02B0     		add	sp, sp, #8
 1243              		@ sp needed
 1244 0016 80BD     		pop	{r7, pc}
 1245              	.L80:
 1246              		.align	2
 1247              	.L79:
 1248 0018 50010540 		.word	1074069840
 1249              		.cfi_endproc
 1250              	.LFE24:
 1251              		.size	PWM_1_WriteCompareBuf, .-PWM_1_WriteCompareBuf
 1252              		.section	.text.PWM_1_ReadCompareBuf,"ax",%progbits
 1253              		.align	2
 1254              		.global	PWM_1_ReadCompareBuf
 1255              		.code	16
 1256              		.thumb_func
 1257              		.type	PWM_1_ReadCompareBuf, %function
 1258              	PWM_1_ReadCompareBuf:
 1259              	.LFB25:
 948:.\Generated_Source\PSoC4/PWM_1.c **** 
 949:.\Generated_Source\PSoC4/PWM_1.c **** 
 950:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM_1.c **** *
 954:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM_1.c **** *
 958:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 960:.\Generated_Source\PSoC4/PWM_1.c **** *
 961:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM_1.c **** *
 964:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 40


 965:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM_1.c **** {
 1260              		.loc 1 966 0
 1261              		.cfi_startproc
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 967:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM_1.c **** 
 972:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM_1.c **** 
 975:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM_1.c ****         
 977:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM_1.c ****         {
 979:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM_1.c ****         }
 981:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM_1.c ****         {
 983:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM_1.c ****         }
 985:.\Generated_Source\PSoC4/PWM_1.c ****         else
 986:.\Generated_Source\PSoC4/PWM_1.c ****         {
 987:.\Generated_Source\PSoC4/PWM_1.c ****         }
 988:.\Generated_Source\PSoC4/PWM_1.c **** 
 989:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 991:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1268              		.loc 1 991 0
 1269 0004 034B     		ldr	r3, .L83
 1270 0006 1B68     		ldr	r3, [r3]
 1271 0008 1B04     		lsl	r3, r3, #16
 1272 000a 1B0C     		lsr	r3, r3, #16
 992:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM_1.c **** }
 1273              		.loc 1 993 0
 1274 000c 181C     		mov	r0, r3
 1275 000e BD46     		mov	sp, r7
 1276              		@ sp needed
 1277 0010 80BD     		pop	{r7, pc}
 1278              	.L84:
 1279 0012 C046     		.align	2
 1280              	.L83:
 1281 0014 50010540 		.word	1074069840
 1282              		.cfi_endproc
 1283              	.LFE25:
 1284              		.size	PWM_1_ReadCompareBuf, .-PWM_1_ReadCompareBuf
 1285              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 1286              		.align	2
 1287              		.global	PWM_1_ReadCapture
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 41


 1288              		.code	16
 1289              		.thumb_func
 1290              		.type	PWM_1_ReadCapture, %function
 1291              	PWM_1_ReadCapture:
 1292              	.LFB26:
 994:.\Generated_Source\PSoC4/PWM_1.c **** 
 995:.\Generated_Source\PSoC4/PWM_1.c **** 
 996:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCapture
 998:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM_1.c **** *
1000:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM_1.c **** *
1004:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1006:.\Generated_Source\PSoC4/PWM_1.c **** *
1007:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM_1.c **** *
1010:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM_1.c **** {
 1293              		.loc 1 1012 0
 1294              		.cfi_startproc
 1295 0000 80B5     		push	{r7, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 00AF     		add	r7, sp, #0
 1300              		.cfi_def_cfa_register 7
1013:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1301              		.loc 1 1013 0
 1302 0004 034B     		ldr	r3, .L87
 1303 0006 1B68     		ldr	r3, [r3]
 1304 0008 1B04     		lsl	r3, r3, #16
 1305 000a 1B0C     		lsr	r3, r3, #16
1014:.\Generated_Source\PSoC4/PWM_1.c **** }
 1306              		.loc 1 1014 0
 1307 000c 181C     		mov	r0, r3
 1308 000e BD46     		mov	sp, r7
 1309              		@ sp needed
 1310 0010 80BD     		pop	{r7, pc}
 1311              	.L88:
 1312 0012 C046     		.align	2
 1313              	.L87:
 1314 0014 4C010540 		.word	1074069836
 1315              		.cfi_endproc
 1316              	.LFE26:
 1317              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 1318              		.section	.text.PWM_1_ReadCaptureBuf,"ax",%progbits
 1319              		.align	2
 1320              		.global	PWM_1_ReadCaptureBuf
 1321              		.code	16
 1322              		.thumb_func
 1323              		.type	PWM_1_ReadCaptureBuf, %function
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 42


 1324              	PWM_1_ReadCaptureBuf:
 1325              	.LFB27:
1015:.\Generated_Source\PSoC4/PWM_1.c **** 
1016:.\Generated_Source\PSoC4/PWM_1.c **** 
1017:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM_1.c **** *
1021:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM_1.c **** *
1025:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1027:.\Generated_Source\PSoC4/PWM_1.c **** *
1028:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM_1.c **** *
1031:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM_1.c **** {
 1326              		.loc 1 1033 0
 1327              		.cfi_startproc
 1328 0000 80B5     		push	{r7, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
1034:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1334              		.loc 1 1034 0
 1335 0004 034B     		ldr	r3, .L91
 1336 0006 1B68     		ldr	r3, [r3]
 1337 0008 1B04     		lsl	r3, r3, #16
 1338 000a 1B0C     		lsr	r3, r3, #16
1035:.\Generated_Source\PSoC4/PWM_1.c **** }
 1339              		.loc 1 1035 0
 1340 000c 181C     		mov	r0, r3
 1341 000e BD46     		mov	sp, r7
 1342              		@ sp needed
 1343 0010 80BD     		pop	{r7, pc}
 1344              	.L92:
 1345 0012 C046     		.align	2
 1346              	.L91:
 1347 0014 50010540 		.word	1074069840
 1348              		.cfi_endproc
 1349              	.LFE27:
 1350              		.size	PWM_1_ReadCaptureBuf, .-PWM_1_ReadCaptureBuf
 1351              		.section	.text.PWM_1_SetCaptureMode,"ax",%progbits
 1352              		.align	2
 1353              		.global	PWM_1_SetCaptureMode
 1354              		.code	16
 1355              		.thumb_func
 1356              		.type	PWM_1_SetCaptureMode, %function
 1357              	PWM_1_SetCaptureMode:
 1358              	.LFB28:
1036:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 43


1037:.\Generated_Source\PSoC4/PWM_1.c **** 
1038:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM_1.c **** *
1042:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM_1.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PWM_1.c **** *
1047:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM_1.c **** *
1055:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1057:.\Generated_Source\PSoC4/PWM_1.c **** *
1058:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM_1.c **** {
 1359              		.loc 1 1060 0
 1360              		.cfi_startproc
 1361 0000 90B5     		push	{r4, r7, lr}
 1362              		.cfi_def_cfa_offset 12
 1363              		.cfi_offset 4, -12
 1364              		.cfi_offset 7, -8
 1365              		.cfi_offset 14, -4
 1366 0002 85B0     		sub	sp, sp, #20
 1367              		.cfi_def_cfa_offset 32
 1368 0004 00AF     		add	r7, sp, #0
 1369              		.cfi_def_cfa_register 7
 1370 0006 7860     		str	r0, [r7, #4]
1061:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM_1.c **** 
1063:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1371              		.loc 1 1063 0
 1372 0008 3C1C     		mov	r4, r7
 1373 000a 0F34     		add	r4, r4, #15
 1374 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1375 0010 031C     		mov	r3, r0
 1376 0012 2370     		strb	r3, [r4]
1064:.\Generated_Source\PSoC4/PWM_1.c **** 
1065:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_CAPTURE_MASK;
 1377              		.loc 1 1065 0
 1378 0014 0A4B     		ldr	r3, .L94
 1379 0016 0A4A     		ldr	r2, .L94
 1380 0018 1268     		ldr	r2, [r2]
 1381 001a 0321     		mov	r1, #3
 1382 001c 8A43     		bic	r2, r1
 1383 001e 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1384              		.loc 1 1066 0
 1385 0020 074B     		ldr	r3, .L94
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 44


 1386 0022 074A     		ldr	r2, .L94
 1387 0024 1168     		ldr	r1, [r2]
 1388 0026 7A68     		ldr	r2, [r7, #4]
 1389 0028 0A43     		orr	r2, r1
 1390 002a 1A60     		str	r2, [r3]
1067:.\Generated_Source\PSoC4/PWM_1.c **** 
1068:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1391              		.loc 1 1068 0
 1392 002c 3B1C     		mov	r3, r7
 1393 002e 0F33     		add	r3, r3, #15
 1394 0030 1B78     		ldrb	r3, [r3]
 1395 0032 181C     		mov	r0, r3
 1396 0034 FFF7FEFF 		bl	CyExitCriticalSection
1069:.\Generated_Source\PSoC4/PWM_1.c **** }
 1397              		.loc 1 1069 0
 1398 0038 BD46     		mov	sp, r7
 1399 003a 05B0     		add	sp, sp, #20
 1400              		@ sp needed
 1401 003c 90BD     		pop	{r4, r7, pc}
 1402              	.L95:
 1403 003e C046     		.align	2
 1404              	.L94:
 1405 0040 64010540 		.word	1074069860
 1406              		.cfi_endproc
 1407              	.LFE28:
 1408              		.size	PWM_1_SetCaptureMode, .-PWM_1_SetCaptureMode
 1409              		.section	.text.PWM_1_SetReloadMode,"ax",%progbits
 1410              		.align	2
 1411              		.global	PWM_1_SetReloadMode
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	PWM_1_SetReloadMode, %function
 1415              	PWM_1_SetReloadMode:
 1416              	.LFB29:
1070:.\Generated_Source\PSoC4/PWM_1.c **** 
1071:.\Generated_Source\PSoC4/PWM_1.c **** 
1072:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM_1.c **** *
1076:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM_1.c **** *
1080:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM_1.c **** *
1088:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1090:.\Generated_Source\PSoC4/PWM_1.c **** *
1091:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetReloadMode(uint32 triggerMode)
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 45


1093:.\Generated_Source\PSoC4/PWM_1.c **** {
 1417              		.loc 1 1093 0
 1418              		.cfi_startproc
 1419 0000 90B5     		push	{r4, r7, lr}
 1420              		.cfi_def_cfa_offset 12
 1421              		.cfi_offset 4, -12
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 85B0     		sub	sp, sp, #20
 1425              		.cfi_def_cfa_offset 32
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
1094:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM_1.c **** 
1096:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1429              		.loc 1 1096 0
 1430 0008 3C1C     		mov	r4, r7
 1431 000a 0F34     		add	r4, r4, #15
 1432 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1433 0010 031C     		mov	r3, r0
 1434 0012 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/PWM_1.c **** 
1098:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_RELOAD_MASK;
 1435              		.loc 1 1098 0
 1436 0014 0A4B     		ldr	r3, .L97
 1437 0016 0A4A     		ldr	r2, .L97
 1438 0018 1268     		ldr	r2, [r2]
 1439 001a 3021     		mov	r1, #48
 1440 001c 8A43     		bic	r2, r1
 1441 001e 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_RELOAD_SHIFT));
 1442              		.loc 1 1099 0
 1443 0020 074B     		ldr	r3, .L97
 1444 0022 074A     		ldr	r2, .L97
 1445 0024 1168     		ldr	r1, [r2]
 1446 0026 7A68     		ldr	r2, [r7, #4]
 1447 0028 1201     		lsl	r2, r2, #4
 1448 002a 0A43     		orr	r2, r1
 1449 002c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/PWM_1.c **** 
1101:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1450              		.loc 1 1101 0
 1451 002e 3B1C     		mov	r3, r7
 1452 0030 0F33     		add	r3, r3, #15
 1453 0032 1B78     		ldrb	r3, [r3]
 1454 0034 181C     		mov	r0, r3
 1455 0036 FFF7FEFF 		bl	CyExitCriticalSection
1102:.\Generated_Source\PSoC4/PWM_1.c **** }
 1456              		.loc 1 1102 0
 1457 003a BD46     		mov	sp, r7
 1458 003c 05B0     		add	sp, sp, #20
 1459              		@ sp needed
 1460 003e 90BD     		pop	{r4, r7, pc}
 1461              	.L98:
 1462              		.align	2
 1463              	.L97:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 46


 1464 0040 64010540 		.word	1074069860
 1465              		.cfi_endproc
 1466              	.LFE29:
 1467              		.size	PWM_1_SetReloadMode, .-PWM_1_SetReloadMode
 1468              		.section	.text.PWM_1_SetStartMode,"ax",%progbits
 1469              		.align	2
 1470              		.global	PWM_1_SetStartMode
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	PWM_1_SetStartMode, %function
 1474              	PWM_1_SetStartMode:
 1475              	.LFB30:
1103:.\Generated_Source\PSoC4/PWM_1.c **** 
1104:.\Generated_Source\PSoC4/PWM_1.c **** 
1105:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStartMode
1107:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM_1.c **** *
1109:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM_1.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM_1.c **** *
1113:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM_1.c **** *
1121:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1123:.\Generated_Source\PSoC4/PWM_1.c **** *
1124:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM_1.c **** {
 1476              		.loc 1 1126 0
 1477              		.cfi_startproc
 1478 0000 90B5     		push	{r4, r7, lr}
 1479              		.cfi_def_cfa_offset 12
 1480              		.cfi_offset 4, -12
 1481              		.cfi_offset 7, -8
 1482              		.cfi_offset 14, -4
 1483 0002 85B0     		sub	sp, sp, #20
 1484              		.cfi_def_cfa_offset 32
 1485 0004 00AF     		add	r7, sp, #0
 1486              		.cfi_def_cfa_register 7
 1487 0006 7860     		str	r0, [r7, #4]
1127:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM_1.c **** 
1129:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1488              		.loc 1 1129 0
 1489 0008 3C1C     		mov	r4, r7
 1490 000a 0F34     		add	r4, r4, #15
 1491 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1492 0010 031C     		mov	r3, r0
 1493 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 47


1130:.\Generated_Source\PSoC4/PWM_1.c **** 
1131:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_START_MASK;
 1494              		.loc 1 1131 0
 1495 0014 0A4B     		ldr	r3, .L100
 1496 0016 0A4A     		ldr	r2, .L100
 1497 0018 1168     		ldr	r1, [r2]
 1498 001a 0A4A     		ldr	r2, .L100+4
 1499 001c 0A40     		and	r2, r1
 1500 001e 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_START_SHIFT));
 1501              		.loc 1 1132 0
 1502 0020 074B     		ldr	r3, .L100
 1503 0022 074A     		ldr	r2, .L100
 1504 0024 1168     		ldr	r1, [r2]
 1505 0026 7A68     		ldr	r2, [r7, #4]
 1506 0028 1202     		lsl	r2, r2, #8
 1507 002a 0A43     		orr	r2, r1
 1508 002c 1A60     		str	r2, [r3]
1133:.\Generated_Source\PSoC4/PWM_1.c **** 
1134:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1509              		.loc 1 1134 0
 1510 002e 3B1C     		mov	r3, r7
 1511 0030 0F33     		add	r3, r3, #15
 1512 0032 1B78     		ldrb	r3, [r3]
 1513 0034 181C     		mov	r0, r3
 1514 0036 FFF7FEFF 		bl	CyExitCriticalSection
1135:.\Generated_Source\PSoC4/PWM_1.c **** }
 1515              		.loc 1 1135 0
 1516 003a BD46     		mov	sp, r7
 1517 003c 05B0     		add	sp, sp, #20
 1518              		@ sp needed
 1519 003e 90BD     		pop	{r4, r7, pc}
 1520              	.L101:
 1521              		.align	2
 1522              	.L100:
 1523 0040 64010540 		.word	1074069860
 1524 0044 FFFCFFFF 		.word	-769
 1525              		.cfi_endproc
 1526              	.LFE30:
 1527              		.size	PWM_1_SetStartMode, .-PWM_1_SetStartMode
 1528              		.section	.text.PWM_1_SetStopMode,"ax",%progbits
 1529              		.align	2
 1530              		.global	PWM_1_SetStopMode
 1531              		.code	16
 1532              		.thumb_func
 1533              		.type	PWM_1_SetStopMode, %function
 1534              	PWM_1_SetStopMode:
 1535              	.LFB31:
1136:.\Generated_Source\PSoC4/PWM_1.c **** 
1137:.\Generated_Source\PSoC4/PWM_1.c **** 
1138:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStopMode
1140:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM_1.c **** *
1142:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 48


1145:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM_1.c **** *
1153:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1155:.\Generated_Source\PSoC4/PWM_1.c **** *
1156:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM_1.c **** {
 1536              		.loc 1 1158 0
 1537              		.cfi_startproc
 1538 0000 90B5     		push	{r4, r7, lr}
 1539              		.cfi_def_cfa_offset 12
 1540              		.cfi_offset 4, -12
 1541              		.cfi_offset 7, -8
 1542              		.cfi_offset 14, -4
 1543 0002 85B0     		sub	sp, sp, #20
 1544              		.cfi_def_cfa_offset 32
 1545 0004 00AF     		add	r7, sp, #0
 1546              		.cfi_def_cfa_register 7
 1547 0006 7860     		str	r0, [r7, #4]
1159:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM_1.c **** 
1161:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1548              		.loc 1 1161 0
 1549 0008 3C1C     		mov	r4, r7
 1550 000a 0F34     		add	r4, r4, #15
 1551 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1552 0010 031C     		mov	r3, r0
 1553 0012 2370     		strb	r3, [r4]
1162:.\Generated_Source\PSoC4/PWM_1.c **** 
1163:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_STOP_MASK;
 1554              		.loc 1 1163 0
 1555 0014 0A4B     		ldr	r3, .L103
 1556 0016 0A4A     		ldr	r2, .L103
 1557 0018 1268     		ldr	r2, [r2]
 1558 001a C021     		mov	r1, #192
 1559 001c 8A43     		bic	r2, r1
 1560 001e 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_STOP_SHIFT));
 1561              		.loc 1 1164 0
 1562 0020 074B     		ldr	r3, .L103
 1563 0022 074A     		ldr	r2, .L103
 1564 0024 1168     		ldr	r1, [r2]
 1565 0026 7A68     		ldr	r2, [r7, #4]
 1566 0028 9201     		lsl	r2, r2, #6
 1567 002a 0A43     		orr	r2, r1
 1568 002c 1A60     		str	r2, [r3]
1165:.\Generated_Source\PSoC4/PWM_1.c **** 
1166:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1569              		.loc 1 1166 0
 1570 002e 3B1C     		mov	r3, r7
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 49


 1571 0030 0F33     		add	r3, r3, #15
 1572 0032 1B78     		ldrb	r3, [r3]
 1573 0034 181C     		mov	r0, r3
 1574 0036 FFF7FEFF 		bl	CyExitCriticalSection
1167:.\Generated_Source\PSoC4/PWM_1.c **** }
 1575              		.loc 1 1167 0
 1576 003a BD46     		mov	sp, r7
 1577 003c 05B0     		add	sp, sp, #20
 1578              		@ sp needed
 1579 003e 90BD     		pop	{r4, r7, pc}
 1580              	.L104:
 1581              		.align	2
 1582              	.L103:
 1583 0040 64010540 		.word	1074069860
 1584              		.cfi_endproc
 1585              	.LFE31:
 1586              		.size	PWM_1_SetStopMode, .-PWM_1_SetStopMode
 1587              		.section	.text.PWM_1_SetCountMode,"ax",%progbits
 1588              		.align	2
 1589              		.global	PWM_1_SetCountMode
 1590              		.code	16
 1591              		.thumb_func
 1592              		.type	PWM_1_SetCountMode, %function
 1593              	PWM_1_SetCountMode:
 1594              	.LFB32:
1168:.\Generated_Source\PSoC4/PWM_1.c **** 
1169:.\Generated_Source\PSoC4/PWM_1.c **** 
1170:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCountMode
1172:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM_1.c **** *
1174:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM_1.c **** *
1178:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM_1.c **** *
1186:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1188:.\Generated_Source\PSoC4/PWM_1.c **** *
1189:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM_1.c **** {
 1595              		.loc 1 1191 0
 1596              		.cfi_startproc
 1597 0000 90B5     		push	{r4, r7, lr}
 1598              		.cfi_def_cfa_offset 12
 1599              		.cfi_offset 4, -12
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 50


 1603              		.cfi_def_cfa_offset 32
 1604 0004 00AF     		add	r7, sp, #0
 1605              		.cfi_def_cfa_register 7
 1606 0006 7860     		str	r0, [r7, #4]
1192:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM_1.c **** 
1194:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1607              		.loc 1 1194 0
 1608 0008 3C1C     		mov	r4, r7
 1609 000a 0F34     		add	r4, r4, #15
 1610 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1611 0010 031C     		mov	r3, r0
 1612 0012 2370     		strb	r3, [r4]
1195:.\Generated_Source\PSoC4/PWM_1.c **** 
1196:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_COUNT_MASK;
 1613              		.loc 1 1196 0
 1614 0014 0A4B     		ldr	r3, .L106
 1615 0016 0A4A     		ldr	r2, .L106
 1616 0018 1268     		ldr	r2, [r2]
 1617 001a 0C21     		mov	r1, #12
 1618 001c 8A43     		bic	r2, r1
 1619 001e 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_COUNT_SHIFT));
 1620              		.loc 1 1197 0
 1621 0020 074B     		ldr	r3, .L106
 1622 0022 074A     		ldr	r2, .L106
 1623 0024 1168     		ldr	r1, [r2]
 1624 0026 7A68     		ldr	r2, [r7, #4]
 1625 0028 9200     		lsl	r2, r2, #2
 1626 002a 0A43     		orr	r2, r1
 1627 002c 1A60     		str	r2, [r3]
1198:.\Generated_Source\PSoC4/PWM_1.c **** 
1199:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1628              		.loc 1 1199 0
 1629 002e 3B1C     		mov	r3, r7
 1630 0030 0F33     		add	r3, r3, #15
 1631 0032 1B78     		ldrb	r3, [r3]
 1632 0034 181C     		mov	r0, r3
 1633 0036 FFF7FEFF 		bl	CyExitCriticalSection
1200:.\Generated_Source\PSoC4/PWM_1.c **** }
 1634              		.loc 1 1200 0
 1635 003a BD46     		mov	sp, r7
 1636 003c 05B0     		add	sp, sp, #20
 1637              		@ sp needed
 1638 003e 90BD     		pop	{r4, r7, pc}
 1639              	.L107:
 1640              		.align	2
 1641              	.L106:
 1642 0040 64010540 		.word	1074069860
 1643              		.cfi_endproc
 1644              	.LFE32:
 1645              		.size	PWM_1_SetCountMode, .-PWM_1_SetCountMode
 1646              		.section	.text.PWM_1_TriggerCommand,"ax",%progbits
 1647              		.align	2
 1648              		.global	PWM_1_TriggerCommand
 1649              		.code	16
 1650              		.thumb_func
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 51


 1651              		.type	PWM_1_TriggerCommand, %function
 1652              	PWM_1_TriggerCommand:
 1653              	.LFB33:
1201:.\Generated_Source\PSoC4/PWM_1.c **** 
1202:.\Generated_Source\PSoC4/PWM_1.c **** 
1203:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM_1.c **** *
1207:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM_1.c **** *
1212:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM_1.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM_1.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM_1.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM_1.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PWM_1.c **** *
1226:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1228:.\Generated_Source\PSoC4/PWM_1.c **** *
1229:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM_1.c **** {
 1654              		.loc 1 1231 0
 1655              		.cfi_startproc
 1656 0000 90B5     		push	{r4, r7, lr}
 1657              		.cfi_def_cfa_offset 12
 1658              		.cfi_offset 4, -12
 1659              		.cfi_offset 7, -8
 1660              		.cfi_offset 14, -4
 1661 0002 85B0     		sub	sp, sp, #20
 1662              		.cfi_def_cfa_offset 32
 1663 0004 00AF     		add	r7, sp, #0
 1664              		.cfi_def_cfa_register 7
 1665 0006 7860     		str	r0, [r7, #4]
 1666 0008 3960     		str	r1, [r7]
1232:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM_1.c **** 
1234:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1667              		.loc 1 1234 0
 1668 000a 3C1C     		mov	r4, r7
 1669 000c 0F34     		add	r4, r4, #15
 1670 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1671 0012 031C     		mov	r3, r0
 1672 0014 2370     		strb	r3, [r4]
1235:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 52


1236:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMMAND_REG = ((uint32)(mask << command));
 1673              		.loc 1 1236 0
 1674 0016 084B     		ldr	r3, .L109
 1675 0018 3A68     		ldr	r2, [r7]
 1676 001a 7968     		ldr	r1, [r7, #4]
 1677 001c 081C     		mov	r0, r1
 1678 001e 9040     		lsl	r0, r0, r2
 1679 0020 021C     		mov	r2, r0
 1680 0022 1A60     		str	r2, [r3]
1237:.\Generated_Source\PSoC4/PWM_1.c **** 
1238:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1681              		.loc 1 1238 0
 1682 0024 3B1C     		mov	r3, r7
 1683 0026 0F33     		add	r3, r3, #15
 1684 0028 1B78     		ldrb	r3, [r3]
 1685 002a 181C     		mov	r0, r3
 1686 002c FFF7FEFF 		bl	CyExitCriticalSection
1239:.\Generated_Source\PSoC4/PWM_1.c **** }
 1687              		.loc 1 1239 0
 1688 0030 BD46     		mov	sp, r7
 1689 0032 05B0     		add	sp, sp, #20
 1690              		@ sp needed
 1691 0034 90BD     		pop	{r4, r7, pc}
 1692              	.L110:
 1693 0036 C046     		.align	2
 1694              	.L109:
 1695 0038 08000540 		.word	1074069512
 1696              		.cfi_endproc
 1697              	.LFE33:
 1698              		.size	PWM_1_TriggerCommand, .-PWM_1_TriggerCommand
 1699              		.section	.text.PWM_1_ReadStatus,"ax",%progbits
 1700              		.align	2
 1701              		.global	PWM_1_ReadStatus
 1702              		.code	16
 1703              		.thumb_func
 1704              		.type	PWM_1_ReadStatus, %function
 1705              	PWM_1_ReadStatus:
 1706              	.LFB34:
1240:.\Generated_Source\PSoC4/PWM_1.c **** 
1241:.\Generated_Source\PSoC4/PWM_1.c **** 
1242:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadStatus
1244:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM_1.c **** *
1246:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the status of the PWM_1.
1248:.\Generated_Source\PSoC4/PWM_1.c **** *
1249:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1251:.\Generated_Source\PSoC4/PWM_1.c **** *
1252:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM_1.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM_1.c **** *
1258:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 53


1259:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM_1.c **** {
 1707              		.loc 1 1260 0
 1708              		.cfi_startproc
 1709 0000 80B5     		push	{r7, lr}
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 7, -8
 1712              		.cfi_offset 14, -4
 1713 0002 00AF     		add	r7, sp, #0
 1714              		.cfi_def_cfa_register 7
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1715              		.loc 1 1261 0
 1716 0004 054B     		ldr	r3, .L113
 1717 0006 1B68     		ldr	r3, [r3]
 1718 0008 9A0F     		lsr	r2, r3, #30
1262:.\Generated_Source\PSoC4/PWM_1.c ****             (PWM_1_STATUS_REG & PWM_1_STATUS_DOWN));
 1719              		.loc 1 1262 0
 1720 000a 044B     		ldr	r3, .L113
 1721 000c 1968     		ldr	r1, [r3]
 1722 000e 0123     		mov	r3, #1
 1723 0010 0B40     		and	r3, r1
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1724              		.loc 1 1261 0
 1725 0012 1343     		orr	r3, r2
1263:.\Generated_Source\PSoC4/PWM_1.c **** }
 1726              		.loc 1 1263 0
 1727 0014 181C     		mov	r0, r3
 1728 0016 BD46     		mov	sp, r7
 1729              		@ sp needed
 1730 0018 80BD     		pop	{r7, pc}
 1731              	.L114:
 1732 001a C046     		.align	2
 1733              	.L113:
 1734 001c 44010540 		.word	1074069828
 1735              		.cfi_endproc
 1736              	.LFE34:
 1737              		.size	PWM_1_ReadStatus, .-PWM_1_ReadStatus
 1738              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 1739              		.align	2
 1740              		.global	PWM_1_SetInterruptMode
 1741              		.code	16
 1742              		.thumb_func
 1743              		.type	PWM_1_SetInterruptMode, %function
 1744              	PWM_1_SetInterruptMode:
 1745              	.LFB35:
1264:.\Generated_Source\PSoC4/PWM_1.c **** 
1265:.\Generated_Source\PSoC4/PWM_1.c **** 
1266:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM_1.c **** *
1270:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM_1.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM_1.c **** *
1274:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of bits to be enabled
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 54


1276:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1277:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM_1.c **** *
1280:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1282:.\Generated_Source\PSoC4/PWM_1.c **** *
1283:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM_1.c **** {
 1746              		.loc 1 1285 0
 1747              		.cfi_startproc
 1748 0000 80B5     		push	{r7, lr}
 1749              		.cfi_def_cfa_offset 8
 1750              		.cfi_offset 7, -8
 1751              		.cfi_offset 14, -4
 1752 0002 82B0     		sub	sp, sp, #8
 1753              		.cfi_def_cfa_offset 16
 1754 0004 00AF     		add	r7, sp, #0
 1755              		.cfi_def_cfa_register 7
 1756 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1757              		.loc 1 1286 0
 1758 0008 024B     		ldr	r3, .L116
 1759 000a 7A68     		ldr	r2, [r7, #4]
 1760 000c 1A60     		str	r2, [r3]
1287:.\Generated_Source\PSoC4/PWM_1.c **** }
 1761              		.loc 1 1287 0
 1762 000e BD46     		mov	sp, r7
 1763 0010 02B0     		add	sp, sp, #8
 1764              		@ sp needed
 1765 0012 80BD     		pop	{r7, pc}
 1766              	.L117:
 1767              		.align	2
 1768              	.L116:
 1769 0014 78010540 		.word	1074069880
 1770              		.cfi_endproc
 1771              	.LFE35:
 1772              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 1773              		.section	.text.PWM_1_GetInterruptSourceMasked,"ax",%progbits
 1774              		.align	2
 1775              		.global	PWM_1_GetInterruptSourceMasked
 1776              		.code	16
 1777              		.thumb_func
 1778              		.type	PWM_1_GetInterruptSourceMasked, %function
 1779              	PWM_1_GetInterruptSourceMasked:
 1780              	.LFB36:
1288:.\Generated_Source\PSoC4/PWM_1.c **** 
1289:.\Generated_Source\PSoC4/PWM_1.c **** 
1290:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM_1.c **** *
1294:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM_1.c **** *
1297:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 55


1298:.\Generated_Source\PSoC4/PWM_1.c **** *   None
1299:.\Generated_Source\PSoC4/PWM_1.c **** *
1300:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM_1.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM_1.c **** *
1306:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM_1.c **** {
 1781              		.loc 1 1308 0
 1782              		.cfi_startproc
 1783 0000 80B5     		push	{r7, lr}
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 7, -8
 1786              		.cfi_offset 14, -4
 1787 0002 00AF     		add	r7, sp, #0
 1788              		.cfi_def_cfa_register 7
1309:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_MASKED_REG);
 1789              		.loc 1 1309 0
 1790 0004 024B     		ldr	r3, .L120
 1791 0006 1B68     		ldr	r3, [r3]
1310:.\Generated_Source\PSoC4/PWM_1.c **** }
 1792              		.loc 1 1310 0
 1793 0008 181C     		mov	r0, r3
 1794 000a BD46     		mov	sp, r7
 1795              		@ sp needed
 1796 000c 80BD     		pop	{r7, pc}
 1797              	.L121:
 1798 000e C046     		.align	2
 1799              	.L120:
 1800 0010 7C010540 		.word	1074069884
 1801              		.cfi_endproc
 1802              	.LFE36:
 1803              		.size	PWM_1_GetInterruptSourceMasked, .-PWM_1_GetInterruptSourceMasked
 1804              		.section	.text.PWM_1_GetInterruptSource,"ax",%progbits
 1805              		.align	2
 1806              		.global	PWM_1_GetInterruptSource
 1807              		.code	16
 1808              		.thumb_func
 1809              		.type	PWM_1_GetInterruptSource, %function
 1810              	PWM_1_GetInterruptSource:
 1811              	.LFB37:
1311:.\Generated_Source\PSoC4/PWM_1.c **** 
1312:.\Generated_Source\PSoC4/PWM_1.c **** 
1313:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM_1.c **** *
1317:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM_1.c **** *
1320:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1322:.\Generated_Source\PSoC4/PWM_1.c **** *
1323:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 56


1324:.\Generated_Source\PSoC4/PWM_1.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM_1.c **** *
1329:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM_1.c **** {
 1812              		.loc 1 1331 0
 1813              		.cfi_startproc
 1814 0000 80B5     		push	{r7, lr}
 1815              		.cfi_def_cfa_offset 8
 1816              		.cfi_offset 7, -8
 1817              		.cfi_offset 14, -4
 1818 0002 00AF     		add	r7, sp, #0
 1819              		.cfi_def_cfa_register 7
1332:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_REQ_REG);
 1820              		.loc 1 1332 0
 1821 0004 024B     		ldr	r3, .L124
 1822 0006 1B68     		ldr	r3, [r3]
1333:.\Generated_Source\PSoC4/PWM_1.c **** }
 1823              		.loc 1 1333 0
 1824 0008 181C     		mov	r0, r3
 1825 000a BD46     		mov	sp, r7
 1826              		@ sp needed
 1827 000c 80BD     		pop	{r7, pc}
 1828              	.L125:
 1829 000e C046     		.align	2
 1830              	.L124:
 1831 0010 70010540 		.word	1074069872
 1832              		.cfi_endproc
 1833              	.LFE37:
 1834              		.size	PWM_1_GetInterruptSource, .-PWM_1_GetInterruptSource
 1835              		.section	.text.PWM_1_ClearInterrupt,"ax",%progbits
 1836              		.align	2
 1837              		.global	PWM_1_ClearInterrupt
 1838              		.code	16
 1839              		.thumb_func
 1840              		.type	PWM_1_ClearInterrupt, %function
 1841              	PWM_1_ClearInterrupt:
 1842              	.LFB38:
1334:.\Generated_Source\PSoC4/PWM_1.c **** 
1335:.\Generated_Source\PSoC4/PWM_1.c **** 
1336:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM_1.c **** *
1340:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM_1.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM_1.c **** *
1343:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM_1.c **** *
1349:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 57


1350:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1351:.\Generated_Source\PSoC4/PWM_1.c **** *
1352:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM_1.c **** {
 1843              		.loc 1 1354 0
 1844              		.cfi_startproc
 1845 0000 80B5     		push	{r7, lr}
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 7, -8
 1848              		.cfi_offset 14, -4
 1849 0002 82B0     		sub	sp, sp, #8
 1850              		.cfi_def_cfa_offset 16
 1851 0004 00AF     		add	r7, sp, #0
 1852              		.cfi_def_cfa_register 7
 1853 0006 7860     		str	r0, [r7, #4]
1355:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_REQ_REG = interruptMask;
 1854              		.loc 1 1355 0
 1855 0008 024B     		ldr	r3, .L127
 1856 000a 7A68     		ldr	r2, [r7, #4]
 1857 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/PWM_1.c **** }
 1858              		.loc 1 1356 0
 1859 000e BD46     		mov	sp, r7
 1860 0010 02B0     		add	sp, sp, #8
 1861              		@ sp needed
 1862 0012 80BD     		pop	{r7, pc}
 1863              	.L128:
 1864              		.align	2
 1865              	.L127:
 1866 0014 70010540 		.word	1074069872
 1867              		.cfi_endproc
 1868              	.LFE38:
 1869              		.size	PWM_1_ClearInterrupt, .-PWM_1_ClearInterrupt
 1870              		.section	.text.PWM_1_SetInterrupt,"ax",%progbits
 1871              		.align	2
 1872              		.global	PWM_1_SetInterrupt
 1873              		.code	16
 1874              		.thumb_func
 1875              		.type	PWM_1_SetInterrupt, %function
 1876              	PWM_1_SetInterrupt:
 1877              	.LFB39:
1357:.\Generated_Source\PSoC4/PWM_1.c **** 
1358:.\Generated_Source\PSoC4/PWM_1.c **** 
1359:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM_1.c **** *
1363:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM_1.c **** *
1366:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 58


1372:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1374:.\Generated_Source\PSoC4/PWM_1.c **** *
1375:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM_1.c **** {
 1878              		.loc 1 1377 0
 1879              		.cfi_startproc
 1880 0000 80B5     		push	{r7, lr}
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 7, -8
 1883              		.cfi_offset 14, -4
 1884 0002 82B0     		sub	sp, sp, #8
 1885              		.cfi_def_cfa_offset 16
 1886 0004 00AF     		add	r7, sp, #0
 1887              		.cfi_def_cfa_register 7
 1888 0006 7860     		str	r0, [r7, #4]
1378:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_SET_REG = interruptMask;
 1889              		.loc 1 1378 0
 1890 0008 024B     		ldr	r3, .L130
 1891 000a 7A68     		ldr	r2, [r7, #4]
 1892 000c 1A60     		str	r2, [r3]
1379:.\Generated_Source\PSoC4/PWM_1.c **** }
 1893              		.loc 1 1379 0
 1894 000e BD46     		mov	sp, r7
 1895 0010 02B0     		add	sp, sp, #8
 1896              		@ sp needed
 1897 0012 80BD     		pop	{r7, pc}
 1898              	.L131:
 1899              		.align	2
 1900              	.L130:
 1901 0014 74010540 		.word	1074069876
 1902              		.cfi_endproc
 1903              	.LFE39:
 1904              		.size	PWM_1_SetInterrupt, .-PWM_1_SetInterrupt
 1905              		.text
 1906              	.Letext0:
 1907              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1908              		.section	.debug_info,"",%progbits
 1909              	.Ldebug_info0:
 1910 0000 EC060000 		.4byte	0x6ec
 1911 0004 0400     		.2byte	0x4
 1912 0006 00000000 		.4byte	.Ldebug_abbrev0
 1913 000a 04       		.byte	0x4
 1914 000b 01       		.uleb128 0x1
 1915 000c F6020000 		.4byte	.LASF76
 1916 0010 01       		.byte	0x1
 1917 0011 6D020000 		.4byte	.LASF77
 1918 0015 97010000 		.4byte	.LASF78
 1919 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1920 001d 00000000 		.4byte	0
 1921 0021 00000000 		.4byte	.Ldebug_line0
 1922 0025 02       		.uleb128 0x2
 1923 0026 01       		.byte	0x1
 1924 0027 06       		.byte	0x6
 1925 0028 BA000000 		.4byte	.LASF0
 1926 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 59


 1927 002d 01       		.byte	0x1
 1928 002e 08       		.byte	0x8
 1929 002f AC030000 		.4byte	.LASF1
 1930 0033 02       		.uleb128 0x2
 1931 0034 02       		.byte	0x2
 1932 0035 05       		.byte	0x5
 1933 0036 F5030000 		.4byte	.LASF2
 1934 003a 02       		.uleb128 0x2
 1935 003b 02       		.byte	0x2
 1936 003c 07       		.byte	0x7
 1937 003d EC010000 		.4byte	.LASF3
 1938 0041 02       		.uleb128 0x2
 1939 0042 04       		.byte	0x4
 1940 0043 05       		.byte	0x5
 1941 0044 EC000000 		.4byte	.LASF4
 1942 0048 02       		.uleb128 0x2
 1943 0049 04       		.byte	0x4
 1944 004a 07       		.byte	0x7
 1945 004b 6B010000 		.4byte	.LASF5
 1946 004f 02       		.uleb128 0x2
 1947 0050 08       		.byte	0x8
 1948 0051 05       		.byte	0x5
 1949 0052 AC000000 		.4byte	.LASF6
 1950 0056 02       		.uleb128 0x2
 1951 0057 08       		.byte	0x8
 1952 0058 07       		.byte	0x7
 1953 0059 58000000 		.4byte	.LASF7
 1954 005d 03       		.uleb128 0x3
 1955 005e 04       		.byte	0x4
 1956 005f 05       		.byte	0x5
 1957 0060 696E7400 		.ascii	"int\000"
 1958 0064 02       		.uleb128 0x2
 1959 0065 04       		.byte	0x4
 1960 0066 07       		.byte	0x7
 1961 0067 48010000 		.4byte	.LASF8
 1962 006b 04       		.uleb128 0x4
 1963 006c F5000000 		.4byte	.LASF9
 1964 0070 02       		.byte	0x2
 1965 0071 C1       		.byte	0xc1
 1966 0072 2C000000 		.4byte	0x2c
 1967 0076 04       		.uleb128 0x4
 1968 0077 27010000 		.4byte	.LASF10
 1969 007b 02       		.byte	0x2
 1970 007c C3       		.byte	0xc3
 1971 007d 48000000 		.4byte	0x48
 1972 0081 02       		.uleb128 0x2
 1973 0082 04       		.byte	0x4
 1974 0083 04       		.byte	0x4
 1975 0084 E6020000 		.4byte	.LASF11
 1976 0088 02       		.uleb128 0x2
 1977 0089 08       		.byte	0x8
 1978 008a 04       		.byte	0x4
 1979 008b FB000000 		.4byte	.LASF12
 1980 008f 02       		.uleb128 0x2
 1981 0090 01       		.byte	0x1
 1982 0091 08       		.byte	0x8
 1983 0092 4A040000 		.4byte	.LASF13
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 60


 1984 0096 05       		.uleb128 0x5
 1985 0097 25020000 		.4byte	.LASF14
 1986 009b 02       		.byte	0x2
 1987 009c 6D01     		.2byte	0x16d
 1988 009e A2000000 		.4byte	0xa2
 1989 00a2 06       		.uleb128 0x6
 1990 00a3 76000000 		.4byte	0x76
 1991 00a7 02       		.uleb128 0x2
 1992 00a8 04       		.byte	0x4
 1993 00a9 07       		.byte	0x7
 1994 00aa 55020000 		.4byte	.LASF15
 1995 00ae 07       		.uleb128 0x7
 1996 00af 1A020000 		.4byte	.LASF16
 1997 00b3 01       		.byte	0x1
 1998 00b4 26       		.byte	0x26
 1999 00b5 00000000 		.4byte	.LFB0
 2000 00b9 60000000 		.4byte	.LFE0-.LFB0
 2001 00bd 01       		.uleb128 0x1
 2002 00be 9C       		.byte	0x9c
 2003 00bf 08       		.uleb128 0x8
 2004 00c0 0D020000 		.4byte	.LASF18
 2005 00c4 01       		.byte	0x1
 2006 00c5 B1       		.byte	0xb1
 2007 00c6 00000000 		.4byte	.LFB1
 2008 00ca 38000000 		.4byte	.LFE1-.LFB1
 2009 00ce 01       		.uleb128 0x1
 2010 00cf 9C       		.byte	0x9c
 2011 00d0 E3000000 		.4byte	0xe3
 2012 00d4 09       		.uleb128 0x9
 2013 00d5 DE040000 		.4byte	.LASF20
 2014 00d9 01       		.byte	0x1
 2015 00da B3       		.byte	0xb3
 2016 00db 6B000000 		.4byte	0x6b
 2017 00df 02       		.uleb128 0x2
 2018 00e0 91       		.byte	0x91
 2019 00e1 6F       		.sleb128 -17
 2020 00e2 00       		.byte	0
 2021 00e3 07       		.uleb128 0x7
 2022 00e4 BE040000 		.4byte	.LASF17
 2023 00e8 01       		.byte	0x1
 2024 00e9 E0       		.byte	0xe0
 2025 00ea 00000000 		.4byte	.LFB2
 2026 00ee 24000000 		.4byte	.LFE2-.LFB2
 2027 00f2 01       		.uleb128 0x1
 2028 00f3 9C       		.byte	0x9c
 2029 00f4 08       		.uleb128 0x8
 2030 00f5 06000000 		.4byte	.LASF19
 2031 00f9 01       		.byte	0x1
 2032 00fa FA       		.byte	0xfa
 2033 00fb 00000000 		.4byte	.LFB3
 2034 00ff 30000000 		.4byte	.LFE3-.LFB3
 2035 0103 01       		.uleb128 0x1
 2036 0104 9C       		.byte	0x9c
 2037 0105 18010000 		.4byte	0x118
 2038 0109 09       		.uleb128 0x9
 2039 010a DE040000 		.4byte	.LASF20
 2040 010e 01       		.byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 61


 2041 010f FC       		.byte	0xfc
 2042 0110 6B000000 		.4byte	0x6b
 2043 0114 02       		.uleb128 0x2
 2044 0115 91       		.byte	0x91
 2045 0116 6F       		.sleb128 -17
 2046 0117 00       		.byte	0
 2047 0118 0A       		.uleb128 0xa
 2048 0119 55010000 		.4byte	.LASF21
 2049 011d 01       		.byte	0x1
 2050 011e 1F01     		.2byte	0x11f
 2051 0120 00000000 		.4byte	.LFB4
 2052 0124 48000000 		.4byte	.LFE4-.LFB4
 2053 0128 01       		.uleb128 0x1
 2054 0129 9C       		.byte	0x9c
 2055 012a 4D010000 		.4byte	0x14d
 2056 012e 0B       		.uleb128 0xb
 2057 012f 4F040000 		.4byte	.LASF23
 2058 0133 01       		.byte	0x1
 2059 0134 1F01     		.2byte	0x11f
 2060 0136 76000000 		.4byte	0x76
 2061 013a 02       		.uleb128 0x2
 2062 013b 91       		.byte	0x91
 2063 013c 64       		.sleb128 -28
 2064 013d 0C       		.uleb128 0xc
 2065 013e DE040000 		.4byte	.LASF20
 2066 0142 01       		.byte	0x1
 2067 0143 2101     		.2byte	0x121
 2068 0145 6B000000 		.4byte	0x6b
 2069 0149 02       		.uleb128 0x2
 2070 014a 91       		.byte	0x91
 2071 014b 6F       		.sleb128 -17
 2072 014c 00       		.byte	0
 2073 014d 0A       		.uleb128 0xa
 2074 014e 24050000 		.4byte	.LASF22
 2075 0152 01       		.byte	0x1
 2076 0153 4001     		.2byte	0x140
 2077 0155 00000000 		.4byte	.LFB5
 2078 0159 48000000 		.4byte	.LFE5-.LFB5
 2079 015d 01       		.uleb128 0x1
 2080 015e 9C       		.byte	0x9c
 2081 015f 82010000 		.4byte	0x182
 2082 0163 0B       		.uleb128 0xb
 2083 0164 6F000000 		.4byte	.LASF24
 2084 0168 01       		.byte	0x1
 2085 0169 4001     		.2byte	0x140
 2086 016b 76000000 		.4byte	0x76
 2087 016f 02       		.uleb128 0x2
 2088 0170 91       		.byte	0x91
 2089 0171 64       		.sleb128 -28
 2090 0172 0C       		.uleb128 0xc
 2091 0173 DE040000 		.4byte	.LASF20
 2092 0177 01       		.byte	0x1
 2093 0178 4201     		.2byte	0x142
 2094 017a 6B000000 		.4byte	0x6b
 2095 017e 02       		.uleb128 0x2
 2096 017f 91       		.byte	0x91
 2097 0180 6F       		.sleb128 -17
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 62


 2098 0181 00       		.byte	0
 2099 0182 0A       		.uleb128 0xa
 2100 0183 69040000 		.4byte	.LASF25
 2101 0187 01       		.byte	0x1
 2102 0188 6501     		.2byte	0x165
 2103 018a 00000000 		.4byte	.LFB6
 2104 018e 48000000 		.4byte	.LFE6-.LFB6
 2105 0192 01       		.uleb128 0x1
 2106 0193 9C       		.byte	0x9c
 2107 0194 B7010000 		.4byte	0x1b7
 2108 0198 0B       		.uleb128 0xb
 2109 0199 EC020000 		.4byte	.LASF26
 2110 019d 01       		.byte	0x1
 2111 019e 6501     		.2byte	0x165
 2112 01a0 76000000 		.4byte	0x76
 2113 01a4 02       		.uleb128 0x2
 2114 01a5 91       		.byte	0x91
 2115 01a6 64       		.sleb128 -28
 2116 01a7 0C       		.uleb128 0xc
 2117 01a8 DE040000 		.4byte	.LASF20
 2118 01ac 01       		.byte	0x1
 2119 01ad 6701     		.2byte	0x167
 2120 01af 6B000000 		.4byte	0x6b
 2121 01b3 02       		.uleb128 0x2
 2122 01b4 91       		.byte	0x91
 2123 01b5 6F       		.sleb128 -17
 2124 01b6 00       		.byte	0
 2125 01b7 0A       		.uleb128 0xa
 2126 01b8 76000000 		.4byte	.LASF27
 2127 01bc 01       		.byte	0x1
 2128 01bd 8501     		.2byte	0x185
 2129 01bf 00000000 		.4byte	.LFB7
 2130 01c3 4C000000 		.4byte	.LFE7-.LFB7
 2131 01c7 01       		.uleb128 0x1
 2132 01c8 9C       		.byte	0x9c
 2133 01c9 EC010000 		.4byte	0x1ec
 2134 01cd 0B       		.uleb128 0xb
 2135 01ce FF010000 		.4byte	.LASF28
 2136 01d2 01       		.byte	0x1
 2137 01d3 8501     		.2byte	0x185
 2138 01d5 76000000 		.4byte	0x76
 2139 01d9 02       		.uleb128 0x2
 2140 01da 91       		.byte	0x91
 2141 01db 64       		.sleb128 -28
 2142 01dc 0C       		.uleb128 0xc
 2143 01dd DE040000 		.4byte	.LASF20
 2144 01e1 01       		.byte	0x1
 2145 01e2 8701     		.2byte	0x187
 2146 01e4 6B000000 		.4byte	0x6b
 2147 01e8 02       		.uleb128 0x2
 2148 01e9 91       		.byte	0x91
 2149 01ea 6F       		.sleb128 -17
 2150 01eb 00       		.byte	0
 2151 01ec 0D       		.uleb128 0xd
 2152 01ed 96020000 		.4byte	.LASF29
 2153 01f1 01       		.byte	0x1
 2154 01f2 BB01     		.2byte	0x1bb
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 63


 2155 01f4 00000000 		.4byte	.LFB8
 2156 01f8 1C000000 		.4byte	.LFE8-.LFB8
 2157 01fc 01       		.uleb128 0x1
 2158 01fd 9C       		.byte	0x9c
 2159 01fe 12020000 		.4byte	0x212
 2160 0202 0B       		.uleb128 0xb
 2161 0203 7D010000 		.4byte	.LASF30
 2162 0207 01       		.byte	0x1
 2163 0208 BB01     		.2byte	0x1bb
 2164 020a 76000000 		.4byte	0x76
 2165 020e 02       		.uleb128 0x2
 2166 020f 91       		.byte	0x91
 2167 0210 74       		.sleb128 -12
 2168 0211 00       		.byte	0
 2169 0212 0A       		.uleb128 0xa
 2170 0213 CF030000 		.4byte	.LASF31
 2171 0217 01       		.byte	0x1
 2172 0218 DF01     		.2byte	0x1df
 2173 021a 00000000 		.4byte	.LFB9
 2174 021e 48000000 		.4byte	.LFE9-.LFB9
 2175 0222 01       		.uleb128 0x1
 2176 0223 9C       		.byte	0x9c
 2177 0224 47020000 		.4byte	0x247
 2178 0228 0B       		.uleb128 0xb
 2179 0229 5E020000 		.4byte	.LASF32
 2180 022d 01       		.byte	0x1
 2181 022e DF01     		.2byte	0x1df
 2182 0230 76000000 		.4byte	0x76
 2183 0234 02       		.uleb128 0x2
 2184 0235 91       		.byte	0x91
 2185 0236 64       		.sleb128 -28
 2186 0237 0C       		.uleb128 0xc
 2187 0238 DE040000 		.4byte	.LASF20
 2188 023c 01       		.byte	0x1
 2189 023d E101     		.2byte	0x1e1
 2190 023f 6B000000 		.4byte	0x6b
 2191 0243 02       		.uleb128 0x2
 2192 0244 91       		.byte	0x91
 2193 0245 6F       		.sleb128 -17
 2194 0246 00       		.byte	0
 2195 0247 0A       		.uleb128 0xa
 2196 0248 3E020000 		.4byte	.LASF33
 2197 024c 01       		.byte	0x1
 2198 024d 0102     		.2byte	0x201
 2199 024f 00000000 		.4byte	.LFB10
 2200 0253 48000000 		.4byte	.LFE10-.LFB10
 2201 0257 01       		.uleb128 0x1
 2202 0258 9C       		.byte	0x9c
 2203 0259 7C020000 		.4byte	0x27c
 2204 025d 0B       		.uleb128 0xb
 2205 025e E4030000 		.4byte	.LASF34
 2206 0262 01       		.byte	0x1
 2207 0263 0102     		.2byte	0x201
 2208 0265 76000000 		.4byte	0x76
 2209 0269 02       		.uleb128 0x2
 2210 026a 91       		.byte	0x91
 2211 026b 64       		.sleb128 -28
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 64


 2212 026c 0C       		.uleb128 0xc
 2213 026d DE040000 		.4byte	.LASF20
 2214 0271 01       		.byte	0x1
 2215 0272 0302     		.2byte	0x203
 2216 0274 6B000000 		.4byte	0x6b
 2217 0278 02       		.uleb128 0x2
 2218 0279 91       		.byte	0x91
 2219 027a 6F       		.sleb128 -17
 2220 027b 00       		.byte	0
 2221 027c 0A       		.uleb128 0xa
 2222 027d BA030000 		.4byte	.LASF35
 2223 0281 01       		.byte	0x1
 2224 0282 2202     		.2byte	0x222
 2225 0284 00000000 		.4byte	.LFB11
 2226 0288 4C000000 		.4byte	.LFE11-.LFB11
 2227 028c 01       		.uleb128 0x1
 2228 028d 9C       		.byte	0x9c
 2229 028e B1020000 		.4byte	0x2b1
 2230 0292 0B       		.uleb128 0xb
 2231 0293 3F010000 		.4byte	.LASF36
 2232 0297 01       		.byte	0x1
 2233 0298 2202     		.2byte	0x222
 2234 029a 76000000 		.4byte	0x76
 2235 029e 02       		.uleb128 0x2
 2236 029f 91       		.byte	0x91
 2237 02a0 64       		.sleb128 -28
 2238 02a1 0C       		.uleb128 0xc
 2239 02a2 DE040000 		.4byte	.LASF20
 2240 02a6 01       		.byte	0x1
 2241 02a7 2402     		.2byte	0x224
 2242 02a9 6B000000 		.4byte	0x6b
 2243 02ad 02       		.uleb128 0x2
 2244 02ae 91       		.byte	0x91
 2245 02af 6F       		.sleb128 -17
 2246 02b0 00       		.byte	0
 2247 02b1 0A       		.uleb128 0xa
 2248 02b2 86030000 		.4byte	.LASF37
 2249 02b6 01       		.byte	0x1
 2250 02b7 4302     		.2byte	0x243
 2251 02b9 00000000 		.4byte	.LFB12
 2252 02bd 48000000 		.4byte	.LFE12-.LFB12
 2253 02c1 01       		.uleb128 0x1
 2254 02c2 9C       		.byte	0x9c
 2255 02c3 E6020000 		.4byte	0x2e6
 2256 02c7 0B       		.uleb128 0xb
 2257 02c8 3A010000 		.4byte	.LASF38
 2258 02cc 01       		.byte	0x1
 2259 02cd 4302     		.2byte	0x243
 2260 02cf 76000000 		.4byte	0x76
 2261 02d3 02       		.uleb128 0x2
 2262 02d4 91       		.byte	0x91
 2263 02d5 64       		.sleb128 -28
 2264 02d6 0C       		.uleb128 0xc
 2265 02d7 DE040000 		.4byte	.LASF20
 2266 02db 01       		.byte	0x1
 2267 02dc 4502     		.2byte	0x245
 2268 02de 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 65


 2269 02e2 02       		.uleb128 0x2
 2270 02e3 91       		.byte	0x91
 2271 02e4 6F       		.sleb128 -17
 2272 02e5 00       		.byte	0
 2273 02e6 0D       		.uleb128 0xd
 2274 02e7 2B020000 		.4byte	.LASF39
 2275 02eb 01       		.byte	0x1
 2276 02ec 6102     		.2byte	0x261
 2277 02ee 00000000 		.4byte	.LFB13
 2278 02f2 1C000000 		.4byte	.LFE13-.LFB13
 2279 02f6 01       		.uleb128 0x1
 2280 02f7 9C       		.byte	0x9c
 2281 02f8 0C030000 		.4byte	0x30c
 2282 02fc 0B       		.uleb128 0xb
 2283 02fd 00000000 		.4byte	.LASF40
 2284 0301 01       		.byte	0x1
 2285 0302 6102     		.2byte	0x261
 2286 0304 76000000 		.4byte	0x76
 2287 0308 02       		.uleb128 0x2
 2288 0309 91       		.byte	0x91
 2289 030a 74       		.sleb128 -12
 2290 030b 00       		.byte	0
 2291 030c 0E       		.uleb128 0xe
 2292 030d 02010000 		.4byte	.LASF45
 2293 0311 01       		.byte	0x1
 2294 0312 7502     		.2byte	0x275
 2295 0314 76000000 		.4byte	0x76
 2296 0318 00000000 		.4byte	.LFB14
 2297 031c 18000000 		.4byte	.LFE14-.LFB14
 2298 0320 01       		.uleb128 0x1
 2299 0321 9C       		.byte	0x9c
 2300 0322 0A       		.uleb128 0xa
 2301 0323 A7020000 		.4byte	.LASF41
 2302 0327 01       		.byte	0x1
 2303 0328 9202     		.2byte	0x292
 2304 032a 00000000 		.4byte	.LFB15
 2305 032e 48000000 		.4byte	.LFE15-.LFB15
 2306 0332 01       		.uleb128 0x1
 2307 0333 9C       		.byte	0x9c
 2308 0334 57030000 		.4byte	0x357
 2309 0338 0B       		.uleb128 0xb
 2310 0339 A7040000 		.4byte	.LASF42
 2311 033d 01       		.byte	0x1
 2312 033e 9202     		.2byte	0x292
 2313 0340 76000000 		.4byte	0x76
 2314 0344 02       		.uleb128 0x2
 2315 0345 91       		.byte	0x91
 2316 0346 64       		.sleb128 -28
 2317 0347 0C       		.uleb128 0xc
 2318 0348 DE040000 		.4byte	.LASF20
 2319 034c 01       		.byte	0x1
 2320 034d 9402     		.2byte	0x294
 2321 034f 6B000000 		.4byte	0x6b
 2322 0353 02       		.uleb128 0x2
 2323 0354 91       		.byte	0x91
 2324 0355 6F       		.sleb128 -17
 2325 0356 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 66


 2326 0357 0D       		.uleb128 0xd
 2327 0358 EF040000 		.4byte	.LASF43
 2328 035c 01       		.byte	0x1
 2329 035d AF02     		.2byte	0x2af
 2330 035f 00000000 		.4byte	.LFB16
 2331 0363 1C000000 		.4byte	.LFE16-.LFB16
 2332 0367 01       		.uleb128 0x1
 2333 0368 9C       		.byte	0x9c
 2334 0369 7D030000 		.4byte	0x37d
 2335 036d 0B       		.uleb128 0xb
 2336 036e 51000000 		.4byte	.LASF44
 2337 0372 01       		.byte	0x1
 2338 0373 AF02     		.2byte	0x2af
 2339 0375 76000000 		.4byte	0x76
 2340 0379 02       		.uleb128 0x2
 2341 037a 91       		.byte	0x91
 2342 037b 74       		.sleb128 -12
 2343 037c 00       		.byte	0
 2344 037d 0E       		.uleb128 0xe
 2345 037e 86010000 		.4byte	.LASF46
 2346 0382 01       		.byte	0x1
 2347 0383 C302     		.2byte	0x2c3
 2348 0385 76000000 		.4byte	0x76
 2349 0389 00000000 		.4byte	.LFB17
 2350 038d 18000000 		.4byte	.LFE17-.LFB17
 2351 0391 01       		.uleb128 0x1
 2352 0392 9C       		.byte	0x9c
 2353 0393 0A       		.uleb128 0xa
 2354 0394 D1020000 		.4byte	.LASF47
 2355 0398 01       		.byte	0x1
 2356 0399 DD02     		.2byte	0x2dd
 2357 039b 00000000 		.4byte	.LFB18
 2358 039f 48000000 		.4byte	.LFE18-.LFB18
 2359 03a3 01       		.uleb128 0x1
 2360 03a4 9C       		.byte	0x9c
 2361 03a5 C8030000 		.4byte	0x3c8
 2362 03a9 0B       		.uleb128 0xb
 2363 03aa 34050000 		.4byte	.LASF48
 2364 03ae 01       		.byte	0x1
 2365 03af DD02     		.2byte	0x2dd
 2366 03b1 76000000 		.4byte	0x76
 2367 03b5 02       		.uleb128 0x2
 2368 03b6 91       		.byte	0x91
 2369 03b7 64       		.sleb128 -28
 2370 03b8 0C       		.uleb128 0xc
 2371 03b9 DE040000 		.4byte	.LASF20
 2372 03bd 01       		.byte	0x1
 2373 03be DF02     		.2byte	0x2df
 2374 03c0 6B000000 		.4byte	0x6b
 2375 03c4 02       		.uleb128 0x2
 2376 03c5 91       		.byte	0x91
 2377 03c6 6F       		.sleb128 -17
 2378 03c7 00       		.byte	0
 2379 03c8 0D       		.uleb128 0xd
 2380 03c9 3C000000 		.4byte	.LASF49
 2381 03cd 01       		.byte	0x1
 2382 03ce F802     		.2byte	0x2f8
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 67


 2383 03d0 00000000 		.4byte	.LFB19
 2384 03d4 1C000000 		.4byte	.LFE19-.LFB19
 2385 03d8 01       		.uleb128 0x1
 2386 03d9 9C       		.byte	0x9c
 2387 03da EE030000 		.4byte	0x3ee
 2388 03de 0B       		.uleb128 0xb
 2389 03df 3F050000 		.4byte	.LASF50
 2390 03e3 01       		.byte	0x1
 2391 03e4 F802     		.2byte	0x2f8
 2392 03e6 76000000 		.4byte	0x76
 2393 03ea 02       		.uleb128 0x2
 2394 03eb 91       		.byte	0x91
 2395 03ec 74       		.sleb128 -12
 2396 03ed 00       		.byte	0
 2397 03ee 0E       		.uleb128 0xe
 2398 03ef 72030000 		.4byte	.LASF51
 2399 03f3 01       		.byte	0x1
 2400 03f4 0C03     		.2byte	0x30c
 2401 03f6 76000000 		.4byte	0x76
 2402 03fa 00000000 		.4byte	.LFB20
 2403 03fe 18000000 		.4byte	.LFE20-.LFB20
 2404 0402 01       		.uleb128 0x1
 2405 0403 9C       		.byte	0x9c
 2406 0404 0A       		.uleb128 0xa
 2407 0405 FF030000 		.4byte	.LASF52
 2408 0409 01       		.byte	0x1
 2409 040a 2603     		.2byte	0x326
 2410 040c 00000000 		.4byte	.LFB21
 2411 0410 48000000 		.4byte	.LFE21-.LFB21
 2412 0414 01       		.uleb128 0x1
 2413 0415 9C       		.byte	0x9c
 2414 0416 39040000 		.4byte	0x439
 2415 041a 0B       		.uleb128 0xb
 2416 041b 34050000 		.4byte	.LASF48
 2417 041f 01       		.byte	0x1
 2418 0420 2603     		.2byte	0x326
 2419 0422 76000000 		.4byte	0x76
 2420 0426 02       		.uleb128 0x2
 2421 0427 91       		.byte	0x91
 2422 0428 64       		.sleb128 -28
 2423 0429 0C       		.uleb128 0xc
 2424 042a DE040000 		.4byte	.LASF20
 2425 042e 01       		.byte	0x1
 2426 042f 2803     		.2byte	0x328
 2427 0431 6B000000 		.4byte	0x6b
 2428 0435 02       		.uleb128 0x2
 2429 0436 91       		.byte	0x91
 2430 0437 6F       		.sleb128 -17
 2431 0438 00       		.byte	0
 2432 0439 0D       		.uleb128 0xd
 2433 043a D9010000 		.4byte	.LASF53
 2434 043e 01       		.byte	0x1
 2435 043f 4303     		.2byte	0x343
 2436 0441 00000000 		.4byte	.LFB22
 2437 0445 1C000000 		.4byte	.LFE22-.LFB22
 2438 0449 01       		.uleb128 0x1
 2439 044a 9C       		.byte	0x9c
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 68


 2440 044b 5F040000 		.4byte	0x45f
 2441 044f 0B       		.uleb128 0xb
 2442 0450 8E020000 		.4byte	.LASF54
 2443 0454 01       		.byte	0x1
 2444 0455 4303     		.2byte	0x343
 2445 0457 76000000 		.4byte	0x76
 2446 045b 02       		.uleb128 0x2
 2447 045c 91       		.byte	0x91
 2448 045d 74       		.sleb128 -12
 2449 045e 00       		.byte	0
 2450 045f 0E       		.uleb128 0xe
 2451 0460 87000000 		.4byte	.LASF55
 2452 0464 01       		.byte	0x1
 2453 0465 6E03     		.2byte	0x36e
 2454 0467 76000000 		.4byte	0x76
 2455 046b 00000000 		.4byte	.LFB23
 2456 046f 18000000 		.4byte	.LFE23-.LFB23
 2457 0473 01       		.uleb128 0x1
 2458 0474 9C       		.byte	0x9c
 2459 0475 0D       		.uleb128 0xd
 2460 0476 91040000 		.4byte	.LASF56
 2461 047a 01       		.byte	0x1
 2462 047b 9C03     		.2byte	0x39c
 2463 047d 00000000 		.4byte	.LFB24
 2464 0481 1C000000 		.4byte	.LFE24-.LFB24
 2465 0485 01       		.uleb128 0x1
 2466 0486 9C       		.byte	0x9c
 2467 0487 9B040000 		.4byte	0x49b
 2468 048b 0B       		.uleb128 0xb
 2469 048c B3040000 		.4byte	.LASF57
 2470 0490 01       		.byte	0x1
 2471 0491 9C03     		.2byte	0x39c
 2472 0493 76000000 		.4byte	0x76
 2473 0497 02       		.uleb128 0x2
 2474 0498 91       		.byte	0x91
 2475 0499 74       		.sleb128 -12
 2476 049a 00       		.byte	0
 2477 049b 0E       		.uleb128 0xe
 2478 049c BC020000 		.4byte	.LASF58
 2479 04a0 01       		.byte	0x1
 2480 04a1 C503     		.2byte	0x3c5
 2481 04a3 76000000 		.4byte	0x76
 2482 04a7 00000000 		.4byte	.LFB25
 2483 04ab 18000000 		.4byte	.LFE25-.LFB25
 2484 04af 01       		.uleb128 0x1
 2485 04b0 9C       		.byte	0x9c
 2486 04b1 0E       		.uleb128 0xe
 2487 04b2 11000000 		.4byte	.LASF59
 2488 04b6 01       		.byte	0x1
 2489 04b7 F303     		.2byte	0x3f3
 2490 04b9 76000000 		.4byte	0x76
 2491 04bd 00000000 		.4byte	.LFB26
 2492 04c1 18000000 		.4byte	.LFE26-.LFB26
 2493 04c5 01       		.uleb128 0x1
 2494 04c6 9C       		.byte	0x9c
 2495 04c7 0E       		.uleb128 0xe
 2496 04c8 C6000000 		.4byte	.LASF60
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 69


 2497 04cc 01       		.byte	0x1
 2498 04cd 0804     		.2byte	0x408
 2499 04cf 76000000 		.4byte	0x76
 2500 04d3 00000000 		.4byte	.LFB27
 2501 04d7 18000000 		.4byte	.LFE27-.LFB27
 2502 04db 01       		.uleb128 0x1
 2503 04dc 9C       		.byte	0x9c
 2504 04dd 0A       		.uleb128 0xa
 2505 04de 01050000 		.4byte	.LASF61
 2506 04e2 01       		.byte	0x1
 2507 04e3 2304     		.2byte	0x423
 2508 04e5 00000000 		.4byte	.LFB28
 2509 04e9 44000000 		.4byte	.LFE28-.LFB28
 2510 04ed 01       		.uleb128 0x1
 2511 04ee 9C       		.byte	0x9c
 2512 04ef 12050000 		.4byte	0x512
 2513 04f3 0B       		.uleb128 0xb
 2514 04f4 2E010000 		.4byte	.LASF62
 2515 04f8 01       		.byte	0x1
 2516 04f9 2304     		.2byte	0x423
 2517 04fb 76000000 		.4byte	0x76
 2518 04ff 02       		.uleb128 0x2
 2519 0500 91       		.byte	0x91
 2520 0501 64       		.sleb128 -28
 2521 0502 0C       		.uleb128 0xc
 2522 0503 DE040000 		.4byte	.LASF20
 2523 0507 01       		.byte	0x1
 2524 0508 2504     		.2byte	0x425
 2525 050a 6B000000 		.4byte	0x6b
 2526 050e 02       		.uleb128 0x2
 2527 050f 91       		.byte	0x91
 2528 0510 6F       		.sleb128 -17
 2529 0511 00       		.byte	0
 2530 0512 0A       		.uleb128 0xa
 2531 0513 CA040000 		.4byte	.LASF63
 2532 0517 01       		.byte	0x1
 2533 0518 4404     		.2byte	0x444
 2534 051a 00000000 		.4byte	.LFB29
 2535 051e 44000000 		.4byte	.LFE29-.LFB29
 2536 0522 01       		.uleb128 0x1
 2537 0523 9C       		.byte	0x9c
 2538 0524 47050000 		.4byte	0x547
 2539 0528 0B       		.uleb128 0xb
 2540 0529 2E010000 		.4byte	.LASF62
 2541 052d 01       		.byte	0x1
 2542 052e 4404     		.2byte	0x444
 2543 0530 76000000 		.4byte	0x76
 2544 0534 02       		.uleb128 0x2
 2545 0535 91       		.byte	0x91
 2546 0536 64       		.sleb128 -28
 2547 0537 0C       		.uleb128 0xc
 2548 0538 DE040000 		.4byte	.LASF20
 2549 053c 01       		.byte	0x1
 2550 053d 4604     		.2byte	0x446
 2551 053f 6B000000 		.4byte	0x6b
 2552 0543 02       		.uleb128 0x2
 2553 0544 91       		.byte	0x91
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 70


 2554 0545 6F       		.sleb128 -17
 2555 0546 00       		.byte	0
 2556 0547 0A       		.uleb128 0xa
 2557 0548 99030000 		.4byte	.LASF64
 2558 054c 01       		.byte	0x1
 2559 054d 6504     		.2byte	0x465
 2560 054f 00000000 		.4byte	.LFB30
 2561 0553 48000000 		.4byte	.LFE30-.LFB30
 2562 0557 01       		.uleb128 0x1
 2563 0558 9C       		.byte	0x9c
 2564 0559 7C050000 		.4byte	0x57c
 2565 055d 0B       		.uleb128 0xb
 2566 055e 2E010000 		.4byte	.LASF62
 2567 0562 01       		.byte	0x1
 2568 0563 6504     		.2byte	0x465
 2569 0565 76000000 		.4byte	0x76
 2570 0569 02       		.uleb128 0x2
 2571 056a 91       		.byte	0x91
 2572 056b 64       		.sleb128 -28
 2573 056c 0C       		.uleb128 0xc
 2574 056d DE040000 		.4byte	.LASF20
 2575 0571 01       		.byte	0x1
 2576 0572 6704     		.2byte	0x467
 2577 0574 6B000000 		.4byte	0x6b
 2578 0578 02       		.uleb128 0x2
 2579 0579 91       		.byte	0x91
 2580 057a 6F       		.sleb128 -17
 2581 057b 00       		.byte	0
 2582 057c 0A       		.uleb128 0xa
 2583 057d 38040000 		.4byte	.LASF65
 2584 0581 01       		.byte	0x1
 2585 0582 8504     		.2byte	0x485
 2586 0584 00000000 		.4byte	.LFB31
 2587 0588 44000000 		.4byte	.LFE31-.LFB31
 2588 058c 01       		.uleb128 0x1
 2589 058d 9C       		.byte	0x9c
 2590 058e B1050000 		.4byte	0x5b1
 2591 0592 0B       		.uleb128 0xb
 2592 0593 2E010000 		.4byte	.LASF62
 2593 0597 01       		.byte	0x1
 2594 0598 8504     		.2byte	0x485
 2595 059a 76000000 		.4byte	0x76
 2596 059e 02       		.uleb128 0x2
 2597 059f 91       		.byte	0x91
 2598 05a0 64       		.sleb128 -28
 2599 05a1 0C       		.uleb128 0xc
 2600 05a2 DE040000 		.4byte	.LASF20
 2601 05a6 01       		.byte	0x1
 2602 05a7 8704     		.2byte	0x487
 2603 05a9 6B000000 		.4byte	0x6b
 2604 05ad 02       		.uleb128 0x2
 2605 05ae 91       		.byte	0x91
 2606 05af 6F       		.sleb128 -17
 2607 05b0 00       		.byte	0
 2608 05b1 0A       		.uleb128 0xa
 2609 05b2 14010000 		.4byte	.LASF66
 2610 05b6 01       		.byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 71


 2611 05b7 A604     		.2byte	0x4a6
 2612 05b9 00000000 		.4byte	.LFB32
 2613 05bd 44000000 		.4byte	.LFE32-.LFB32
 2614 05c1 01       		.uleb128 0x1
 2615 05c2 9C       		.byte	0x9c
 2616 05c3 E6050000 		.4byte	0x5e6
 2617 05c7 0B       		.uleb128 0xb
 2618 05c8 2E010000 		.4byte	.LASF62
 2619 05cc 01       		.byte	0x1
 2620 05cd A604     		.2byte	0x4a6
 2621 05cf 76000000 		.4byte	0x76
 2622 05d3 02       		.uleb128 0x2
 2623 05d4 91       		.byte	0x91
 2624 05d5 64       		.sleb128 -28
 2625 05d6 0C       		.uleb128 0xc
 2626 05d7 DE040000 		.4byte	.LASF20
 2627 05db 01       		.byte	0x1
 2628 05dc A804     		.2byte	0x4a8
 2629 05de 6B000000 		.4byte	0x6b
 2630 05e2 02       		.uleb128 0x2
 2631 05e3 91       		.byte	0x91
 2632 05e4 6F       		.sleb128 -17
 2633 05e5 00       		.byte	0
 2634 05e6 0A       		.uleb128 0xa
 2635 05e7 54040000 		.4byte	.LASF67
 2636 05eb 01       		.byte	0x1
 2637 05ec CE04     		.2byte	0x4ce
 2638 05ee 00000000 		.4byte	.LFB33
 2639 05f2 3C000000 		.4byte	.LFE33-.LFB33
 2640 05f6 01       		.uleb128 0x1
 2641 05f7 9C       		.byte	0x9c
 2642 05f8 2A060000 		.4byte	0x62a
 2643 05fc 0B       		.uleb128 0xb
 2644 05fd 3A010000 		.4byte	.LASF38
 2645 0601 01       		.byte	0x1
 2646 0602 CE04     		.2byte	0x4ce
 2647 0604 76000000 		.4byte	0x76
 2648 0608 02       		.uleb128 0x2
 2649 0609 91       		.byte	0x91
 2650 060a 64       		.sleb128 -28
 2651 060b 0B       		.uleb128 0xb
 2652 060c 63010000 		.4byte	.LASF68
 2653 0610 01       		.byte	0x1
 2654 0611 CE04     		.2byte	0x4ce
 2655 0613 76000000 		.4byte	0x76
 2656 0617 02       		.uleb128 0x2
 2657 0618 91       		.byte	0x91
 2658 0619 60       		.sleb128 -32
 2659 061a 0C       		.uleb128 0xc
 2660 061b DE040000 		.4byte	.LASF20
 2661 061f 01       		.byte	0x1
 2662 0620 D004     		.2byte	0x4d0
 2663 0622 6B000000 		.4byte	0x6b
 2664 0626 02       		.uleb128 0x2
 2665 0627 91       		.byte	0x91
 2666 0628 6F       		.sleb128 -17
 2667 0629 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 72


 2668 062a 0E       		.uleb128 0xe
 2669 062b DB000000 		.4byte	.LASF69
 2670 062f 01       		.byte	0x1
 2671 0630 EB04     		.2byte	0x4eb
 2672 0632 76000000 		.4byte	0x76
 2673 0636 00000000 		.4byte	.LFB34
 2674 063a 20000000 		.4byte	.LFE34-.LFB34
 2675 063e 01       		.uleb128 0x1
 2676 063f 9C       		.byte	0x9c
 2677 0640 0D       		.uleb128 0xd
 2678 0641 21040000 		.4byte	.LASF70
 2679 0645 01       		.byte	0x1
 2680 0646 0405     		.2byte	0x504
 2681 0648 00000000 		.4byte	.LFB35
 2682 064c 18000000 		.4byte	.LFE35-.LFB35
 2683 0650 01       		.uleb128 0x1
 2684 0651 9C       		.byte	0x9c
 2685 0652 66060000 		.4byte	0x666
 2686 0656 0B       		.uleb128 0xb
 2687 0657 13040000 		.4byte	.LASF71
 2688 065b 01       		.byte	0x1
 2689 065c 0405     		.2byte	0x504
 2690 065e 76000000 		.4byte	0x76
 2691 0662 02       		.uleb128 0x2
 2692 0663 91       		.byte	0x91
 2693 0664 74       		.sleb128 -12
 2694 0665 00       		.byte	0
 2695 0666 0E       		.uleb128 0xe
 2696 0667 49050000 		.4byte	.LASF72
 2697 066b 01       		.byte	0x1
 2698 066c 1B05     		.2byte	0x51b
 2699 066e 76000000 		.4byte	0x76
 2700 0672 00000000 		.4byte	.LFB36
 2701 0676 14000000 		.4byte	.LFE36-.LFB36
 2702 067a 01       		.uleb128 0x1
 2703 067b 9C       		.byte	0x9c
 2704 067c 0E       		.uleb128 0xe
 2705 067d 23000000 		.4byte	.LASF73
 2706 0681 01       		.byte	0x1
 2707 0682 3205     		.2byte	0x532
 2708 0684 76000000 		.4byte	0x76
 2709 0688 00000000 		.4byte	.LFB37
 2710 068c 14000000 		.4byte	.LFE37-.LFB37
 2711 0690 01       		.uleb128 0x1
 2712 0691 9C       		.byte	0x9c
 2713 0692 0D       		.uleb128 0xd
 2714 0693 7C040000 		.4byte	.LASF74
 2715 0697 01       		.byte	0x1
 2716 0698 4905     		.2byte	0x549
 2717 069a 00000000 		.4byte	.LFB38
 2718 069e 18000000 		.4byte	.LFE38-.LFB38
 2719 06a2 01       		.uleb128 0x1
 2720 06a3 9C       		.byte	0x9c
 2721 06a4 B8060000 		.4byte	0x6b8
 2722 06a8 0B       		.uleb128 0xb
 2723 06a9 13040000 		.4byte	.LASF71
 2724 06ad 01       		.byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 73


 2725 06ae 4905     		.2byte	0x549
 2726 06b0 76000000 		.4byte	0x76
 2727 06b4 02       		.uleb128 0x2
 2728 06b5 91       		.byte	0x91
 2729 06b6 74       		.sleb128 -12
 2730 06b7 00       		.byte	0
 2731 06b8 0D       		.uleb128 0xd
 2732 06b9 99000000 		.4byte	.LASF75
 2733 06bd 01       		.byte	0x1
 2734 06be 6005     		.2byte	0x560
 2735 06c0 00000000 		.4byte	.LFB39
 2736 06c4 18000000 		.4byte	.LFE39-.LFB39
 2737 06c8 01       		.uleb128 0x1
 2738 06c9 9C       		.byte	0x9c
 2739 06ca DE060000 		.4byte	0x6de
 2740 06ce 0B       		.uleb128 0xb
 2741 06cf 13040000 		.4byte	.LASF71
 2742 06d3 01       		.byte	0x1
 2743 06d4 6005     		.2byte	0x560
 2744 06d6 76000000 		.4byte	0x76
 2745 06da 02       		.uleb128 0x2
 2746 06db 91       		.byte	0x91
 2747 06dc 74       		.sleb128 -12
 2748 06dd 00       		.byte	0
 2749 06de 0F       		.uleb128 0xf
 2750 06df 16050000 		.4byte	.LASF79
 2751 06e3 01       		.byte	0x1
 2752 06e4 15       		.byte	0x15
 2753 06e5 6B000000 		.4byte	0x6b
 2754 06e9 05       		.uleb128 0x5
 2755 06ea 03       		.byte	0x3
 2756 06eb 00000000 		.4byte	PWM_1_initVar
 2757 06ef 00       		.byte	0
 2758              		.section	.debug_abbrev,"",%progbits
 2759              	.Ldebug_abbrev0:
 2760 0000 01       		.uleb128 0x1
 2761 0001 11       		.uleb128 0x11
 2762 0002 01       		.byte	0x1
 2763 0003 25       		.uleb128 0x25
 2764 0004 0E       		.uleb128 0xe
 2765 0005 13       		.uleb128 0x13
 2766 0006 0B       		.uleb128 0xb
 2767 0007 03       		.uleb128 0x3
 2768 0008 0E       		.uleb128 0xe
 2769 0009 1B       		.uleb128 0x1b
 2770 000a 0E       		.uleb128 0xe
 2771 000b 55       		.uleb128 0x55
 2772 000c 17       		.uleb128 0x17
 2773 000d 11       		.uleb128 0x11
 2774 000e 01       		.uleb128 0x1
 2775 000f 10       		.uleb128 0x10
 2776 0010 17       		.uleb128 0x17
 2777 0011 00       		.byte	0
 2778 0012 00       		.byte	0
 2779 0013 02       		.uleb128 0x2
 2780 0014 24       		.uleb128 0x24
 2781 0015 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 74


 2782 0016 0B       		.uleb128 0xb
 2783 0017 0B       		.uleb128 0xb
 2784 0018 3E       		.uleb128 0x3e
 2785 0019 0B       		.uleb128 0xb
 2786 001a 03       		.uleb128 0x3
 2787 001b 0E       		.uleb128 0xe
 2788 001c 00       		.byte	0
 2789 001d 00       		.byte	0
 2790 001e 03       		.uleb128 0x3
 2791 001f 24       		.uleb128 0x24
 2792 0020 00       		.byte	0
 2793 0021 0B       		.uleb128 0xb
 2794 0022 0B       		.uleb128 0xb
 2795 0023 3E       		.uleb128 0x3e
 2796 0024 0B       		.uleb128 0xb
 2797 0025 03       		.uleb128 0x3
 2798 0026 08       		.uleb128 0x8
 2799 0027 00       		.byte	0
 2800 0028 00       		.byte	0
 2801 0029 04       		.uleb128 0x4
 2802 002a 16       		.uleb128 0x16
 2803 002b 00       		.byte	0
 2804 002c 03       		.uleb128 0x3
 2805 002d 0E       		.uleb128 0xe
 2806 002e 3A       		.uleb128 0x3a
 2807 002f 0B       		.uleb128 0xb
 2808 0030 3B       		.uleb128 0x3b
 2809 0031 0B       		.uleb128 0xb
 2810 0032 49       		.uleb128 0x49
 2811 0033 13       		.uleb128 0x13
 2812 0034 00       		.byte	0
 2813 0035 00       		.byte	0
 2814 0036 05       		.uleb128 0x5
 2815 0037 16       		.uleb128 0x16
 2816 0038 00       		.byte	0
 2817 0039 03       		.uleb128 0x3
 2818 003a 0E       		.uleb128 0xe
 2819 003b 3A       		.uleb128 0x3a
 2820 003c 0B       		.uleb128 0xb
 2821 003d 3B       		.uleb128 0x3b
 2822 003e 05       		.uleb128 0x5
 2823 003f 49       		.uleb128 0x49
 2824 0040 13       		.uleb128 0x13
 2825 0041 00       		.byte	0
 2826 0042 00       		.byte	0
 2827 0043 06       		.uleb128 0x6
 2828 0044 35       		.uleb128 0x35
 2829 0045 00       		.byte	0
 2830 0046 49       		.uleb128 0x49
 2831 0047 13       		.uleb128 0x13
 2832 0048 00       		.byte	0
 2833 0049 00       		.byte	0
 2834 004a 07       		.uleb128 0x7
 2835 004b 2E       		.uleb128 0x2e
 2836 004c 00       		.byte	0
 2837 004d 3F       		.uleb128 0x3f
 2838 004e 19       		.uleb128 0x19
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 75


 2839 004f 03       		.uleb128 0x3
 2840 0050 0E       		.uleb128 0xe
 2841 0051 3A       		.uleb128 0x3a
 2842 0052 0B       		.uleb128 0xb
 2843 0053 3B       		.uleb128 0x3b
 2844 0054 0B       		.uleb128 0xb
 2845 0055 27       		.uleb128 0x27
 2846 0056 19       		.uleb128 0x19
 2847 0057 11       		.uleb128 0x11
 2848 0058 01       		.uleb128 0x1
 2849 0059 12       		.uleb128 0x12
 2850 005a 06       		.uleb128 0x6
 2851 005b 40       		.uleb128 0x40
 2852 005c 18       		.uleb128 0x18
 2853 005d 9642     		.uleb128 0x2116
 2854 005f 19       		.uleb128 0x19
 2855 0060 00       		.byte	0
 2856 0061 00       		.byte	0
 2857 0062 08       		.uleb128 0x8
 2858 0063 2E       		.uleb128 0x2e
 2859 0064 01       		.byte	0x1
 2860 0065 3F       		.uleb128 0x3f
 2861 0066 19       		.uleb128 0x19
 2862 0067 03       		.uleb128 0x3
 2863 0068 0E       		.uleb128 0xe
 2864 0069 3A       		.uleb128 0x3a
 2865 006a 0B       		.uleb128 0xb
 2866 006b 3B       		.uleb128 0x3b
 2867 006c 0B       		.uleb128 0xb
 2868 006d 27       		.uleb128 0x27
 2869 006e 19       		.uleb128 0x19
 2870 006f 11       		.uleb128 0x11
 2871 0070 01       		.uleb128 0x1
 2872 0071 12       		.uleb128 0x12
 2873 0072 06       		.uleb128 0x6
 2874 0073 40       		.uleb128 0x40
 2875 0074 18       		.uleb128 0x18
 2876 0075 9642     		.uleb128 0x2116
 2877 0077 19       		.uleb128 0x19
 2878 0078 01       		.uleb128 0x1
 2879 0079 13       		.uleb128 0x13
 2880 007a 00       		.byte	0
 2881 007b 00       		.byte	0
 2882 007c 09       		.uleb128 0x9
 2883 007d 34       		.uleb128 0x34
 2884 007e 00       		.byte	0
 2885 007f 03       		.uleb128 0x3
 2886 0080 0E       		.uleb128 0xe
 2887 0081 3A       		.uleb128 0x3a
 2888 0082 0B       		.uleb128 0xb
 2889 0083 3B       		.uleb128 0x3b
 2890 0084 0B       		.uleb128 0xb
 2891 0085 49       		.uleb128 0x49
 2892 0086 13       		.uleb128 0x13
 2893 0087 02       		.uleb128 0x2
 2894 0088 18       		.uleb128 0x18
 2895 0089 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 76


 2896 008a 00       		.byte	0
 2897 008b 0A       		.uleb128 0xa
 2898 008c 2E       		.uleb128 0x2e
 2899 008d 01       		.byte	0x1
 2900 008e 3F       		.uleb128 0x3f
 2901 008f 19       		.uleb128 0x19
 2902 0090 03       		.uleb128 0x3
 2903 0091 0E       		.uleb128 0xe
 2904 0092 3A       		.uleb128 0x3a
 2905 0093 0B       		.uleb128 0xb
 2906 0094 3B       		.uleb128 0x3b
 2907 0095 05       		.uleb128 0x5
 2908 0096 27       		.uleb128 0x27
 2909 0097 19       		.uleb128 0x19
 2910 0098 11       		.uleb128 0x11
 2911 0099 01       		.uleb128 0x1
 2912 009a 12       		.uleb128 0x12
 2913 009b 06       		.uleb128 0x6
 2914 009c 40       		.uleb128 0x40
 2915 009d 18       		.uleb128 0x18
 2916 009e 9642     		.uleb128 0x2116
 2917 00a0 19       		.uleb128 0x19
 2918 00a1 01       		.uleb128 0x1
 2919 00a2 13       		.uleb128 0x13
 2920 00a3 00       		.byte	0
 2921 00a4 00       		.byte	0
 2922 00a5 0B       		.uleb128 0xb
 2923 00a6 05       		.uleb128 0x5
 2924 00a7 00       		.byte	0
 2925 00a8 03       		.uleb128 0x3
 2926 00a9 0E       		.uleb128 0xe
 2927 00aa 3A       		.uleb128 0x3a
 2928 00ab 0B       		.uleb128 0xb
 2929 00ac 3B       		.uleb128 0x3b
 2930 00ad 05       		.uleb128 0x5
 2931 00ae 49       		.uleb128 0x49
 2932 00af 13       		.uleb128 0x13
 2933 00b0 02       		.uleb128 0x2
 2934 00b1 18       		.uleb128 0x18
 2935 00b2 00       		.byte	0
 2936 00b3 00       		.byte	0
 2937 00b4 0C       		.uleb128 0xc
 2938 00b5 34       		.uleb128 0x34
 2939 00b6 00       		.byte	0
 2940 00b7 03       		.uleb128 0x3
 2941 00b8 0E       		.uleb128 0xe
 2942 00b9 3A       		.uleb128 0x3a
 2943 00ba 0B       		.uleb128 0xb
 2944 00bb 3B       		.uleb128 0x3b
 2945 00bc 05       		.uleb128 0x5
 2946 00bd 49       		.uleb128 0x49
 2947 00be 13       		.uleb128 0x13
 2948 00bf 02       		.uleb128 0x2
 2949 00c0 18       		.uleb128 0x18
 2950 00c1 00       		.byte	0
 2951 00c2 00       		.byte	0
 2952 00c3 0D       		.uleb128 0xd
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 77


 2953 00c4 2E       		.uleb128 0x2e
 2954 00c5 01       		.byte	0x1
 2955 00c6 3F       		.uleb128 0x3f
 2956 00c7 19       		.uleb128 0x19
 2957 00c8 03       		.uleb128 0x3
 2958 00c9 0E       		.uleb128 0xe
 2959 00ca 3A       		.uleb128 0x3a
 2960 00cb 0B       		.uleb128 0xb
 2961 00cc 3B       		.uleb128 0x3b
 2962 00cd 05       		.uleb128 0x5
 2963 00ce 27       		.uleb128 0x27
 2964 00cf 19       		.uleb128 0x19
 2965 00d0 11       		.uleb128 0x11
 2966 00d1 01       		.uleb128 0x1
 2967 00d2 12       		.uleb128 0x12
 2968 00d3 06       		.uleb128 0x6
 2969 00d4 40       		.uleb128 0x40
 2970 00d5 18       		.uleb128 0x18
 2971 00d6 9742     		.uleb128 0x2117
 2972 00d8 19       		.uleb128 0x19
 2973 00d9 01       		.uleb128 0x1
 2974 00da 13       		.uleb128 0x13
 2975 00db 00       		.byte	0
 2976 00dc 00       		.byte	0
 2977 00dd 0E       		.uleb128 0xe
 2978 00de 2E       		.uleb128 0x2e
 2979 00df 00       		.byte	0
 2980 00e0 3F       		.uleb128 0x3f
 2981 00e1 19       		.uleb128 0x19
 2982 00e2 03       		.uleb128 0x3
 2983 00e3 0E       		.uleb128 0xe
 2984 00e4 3A       		.uleb128 0x3a
 2985 00e5 0B       		.uleb128 0xb
 2986 00e6 3B       		.uleb128 0x3b
 2987 00e7 05       		.uleb128 0x5
 2988 00e8 27       		.uleb128 0x27
 2989 00e9 19       		.uleb128 0x19
 2990 00ea 49       		.uleb128 0x49
 2991 00eb 13       		.uleb128 0x13
 2992 00ec 11       		.uleb128 0x11
 2993 00ed 01       		.uleb128 0x1
 2994 00ee 12       		.uleb128 0x12
 2995 00ef 06       		.uleb128 0x6
 2996 00f0 40       		.uleb128 0x40
 2997 00f1 18       		.uleb128 0x18
 2998 00f2 9742     		.uleb128 0x2117
 2999 00f4 19       		.uleb128 0x19
 3000 00f5 00       		.byte	0
 3001 00f6 00       		.byte	0
 3002 00f7 0F       		.uleb128 0xf
 3003 00f8 34       		.uleb128 0x34
 3004 00f9 00       		.byte	0
 3005 00fa 03       		.uleb128 0x3
 3006 00fb 0E       		.uleb128 0xe
 3007 00fc 3A       		.uleb128 0x3a
 3008 00fd 0B       		.uleb128 0xb
 3009 00fe 3B       		.uleb128 0x3b
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 78


 3010 00ff 0B       		.uleb128 0xb
 3011 0100 49       		.uleb128 0x49
 3012 0101 13       		.uleb128 0x13
 3013 0102 3F       		.uleb128 0x3f
 3014 0103 19       		.uleb128 0x19
 3015 0104 02       		.uleb128 0x2
 3016 0105 18       		.uleb128 0x18
 3017 0106 00       		.byte	0
 3018 0107 00       		.byte	0
 3019 0108 00       		.byte	0
 3020              		.section	.debug_aranges,"",%progbits
 3021 0000 54010000 		.4byte	0x154
 3022 0004 0200     		.2byte	0x2
 3023 0006 00000000 		.4byte	.Ldebug_info0
 3024 000a 04       		.byte	0x4
 3025 000b 00       		.byte	0
 3026 000c 0000     		.2byte	0
 3027 000e 0000     		.2byte	0
 3028 0010 00000000 		.4byte	.LFB0
 3029 0014 60000000 		.4byte	.LFE0-.LFB0
 3030 0018 00000000 		.4byte	.LFB1
 3031 001c 38000000 		.4byte	.LFE1-.LFB1
 3032 0020 00000000 		.4byte	.LFB2
 3033 0024 24000000 		.4byte	.LFE2-.LFB2
 3034 0028 00000000 		.4byte	.LFB3
 3035 002c 30000000 		.4byte	.LFE3-.LFB3
 3036 0030 00000000 		.4byte	.LFB4
 3037 0034 48000000 		.4byte	.LFE4-.LFB4
 3038 0038 00000000 		.4byte	.LFB5
 3039 003c 48000000 		.4byte	.LFE5-.LFB5
 3040 0040 00000000 		.4byte	.LFB6
 3041 0044 48000000 		.4byte	.LFE6-.LFB6
 3042 0048 00000000 		.4byte	.LFB7
 3043 004c 4C000000 		.4byte	.LFE7-.LFB7
 3044 0050 00000000 		.4byte	.LFB8
 3045 0054 1C000000 		.4byte	.LFE8-.LFB8
 3046 0058 00000000 		.4byte	.LFB9
 3047 005c 48000000 		.4byte	.LFE9-.LFB9
 3048 0060 00000000 		.4byte	.LFB10
 3049 0064 48000000 		.4byte	.LFE10-.LFB10
 3050 0068 00000000 		.4byte	.LFB11
 3051 006c 4C000000 		.4byte	.LFE11-.LFB11
 3052 0070 00000000 		.4byte	.LFB12
 3053 0074 48000000 		.4byte	.LFE12-.LFB12
 3054 0078 00000000 		.4byte	.LFB13
 3055 007c 1C000000 		.4byte	.LFE13-.LFB13
 3056 0080 00000000 		.4byte	.LFB14
 3057 0084 18000000 		.4byte	.LFE14-.LFB14
 3058 0088 00000000 		.4byte	.LFB15
 3059 008c 48000000 		.4byte	.LFE15-.LFB15
 3060 0090 00000000 		.4byte	.LFB16
 3061 0094 1C000000 		.4byte	.LFE16-.LFB16
 3062 0098 00000000 		.4byte	.LFB17
 3063 009c 18000000 		.4byte	.LFE17-.LFB17
 3064 00a0 00000000 		.4byte	.LFB18
 3065 00a4 48000000 		.4byte	.LFE18-.LFB18
 3066 00a8 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 79


 3067 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3068 00b0 00000000 		.4byte	.LFB20
 3069 00b4 18000000 		.4byte	.LFE20-.LFB20
 3070 00b8 00000000 		.4byte	.LFB21
 3071 00bc 48000000 		.4byte	.LFE21-.LFB21
 3072 00c0 00000000 		.4byte	.LFB22
 3073 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3074 00c8 00000000 		.4byte	.LFB23
 3075 00cc 18000000 		.4byte	.LFE23-.LFB23
 3076 00d0 00000000 		.4byte	.LFB24
 3077 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3078 00d8 00000000 		.4byte	.LFB25
 3079 00dc 18000000 		.4byte	.LFE25-.LFB25
 3080 00e0 00000000 		.4byte	.LFB26
 3081 00e4 18000000 		.4byte	.LFE26-.LFB26
 3082 00e8 00000000 		.4byte	.LFB27
 3083 00ec 18000000 		.4byte	.LFE27-.LFB27
 3084 00f0 00000000 		.4byte	.LFB28
 3085 00f4 44000000 		.4byte	.LFE28-.LFB28
 3086 00f8 00000000 		.4byte	.LFB29
 3087 00fc 44000000 		.4byte	.LFE29-.LFB29
 3088 0100 00000000 		.4byte	.LFB30
 3089 0104 48000000 		.4byte	.LFE30-.LFB30
 3090 0108 00000000 		.4byte	.LFB31
 3091 010c 44000000 		.4byte	.LFE31-.LFB31
 3092 0110 00000000 		.4byte	.LFB32
 3093 0114 44000000 		.4byte	.LFE32-.LFB32
 3094 0118 00000000 		.4byte	.LFB33
 3095 011c 3C000000 		.4byte	.LFE33-.LFB33
 3096 0120 00000000 		.4byte	.LFB34
 3097 0124 20000000 		.4byte	.LFE34-.LFB34
 3098 0128 00000000 		.4byte	.LFB35
 3099 012c 18000000 		.4byte	.LFE35-.LFB35
 3100 0130 00000000 		.4byte	.LFB36
 3101 0134 14000000 		.4byte	.LFE36-.LFB36
 3102 0138 00000000 		.4byte	.LFB37
 3103 013c 14000000 		.4byte	.LFE37-.LFB37
 3104 0140 00000000 		.4byte	.LFB38
 3105 0144 18000000 		.4byte	.LFE38-.LFB38
 3106 0148 00000000 		.4byte	.LFB39
 3107 014c 18000000 		.4byte	.LFE39-.LFB39
 3108 0150 00000000 		.4byte	0
 3109 0154 00000000 		.4byte	0
 3110              		.section	.debug_ranges,"",%progbits
 3111              	.Ldebug_ranges0:
 3112 0000 00000000 		.4byte	.LFB0
 3113 0004 60000000 		.4byte	.LFE0
 3114 0008 00000000 		.4byte	.LFB1
 3115 000c 38000000 		.4byte	.LFE1
 3116 0010 00000000 		.4byte	.LFB2
 3117 0014 24000000 		.4byte	.LFE2
 3118 0018 00000000 		.4byte	.LFB3
 3119 001c 30000000 		.4byte	.LFE3
 3120 0020 00000000 		.4byte	.LFB4
 3121 0024 48000000 		.4byte	.LFE4
 3122 0028 00000000 		.4byte	.LFB5
 3123 002c 48000000 		.4byte	.LFE5
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 80


 3124 0030 00000000 		.4byte	.LFB6
 3125 0034 48000000 		.4byte	.LFE6
 3126 0038 00000000 		.4byte	.LFB7
 3127 003c 4C000000 		.4byte	.LFE7
 3128 0040 00000000 		.4byte	.LFB8
 3129 0044 1C000000 		.4byte	.LFE8
 3130 0048 00000000 		.4byte	.LFB9
 3131 004c 48000000 		.4byte	.LFE9
 3132 0050 00000000 		.4byte	.LFB10
 3133 0054 48000000 		.4byte	.LFE10
 3134 0058 00000000 		.4byte	.LFB11
 3135 005c 4C000000 		.4byte	.LFE11
 3136 0060 00000000 		.4byte	.LFB12
 3137 0064 48000000 		.4byte	.LFE12
 3138 0068 00000000 		.4byte	.LFB13
 3139 006c 1C000000 		.4byte	.LFE13
 3140 0070 00000000 		.4byte	.LFB14
 3141 0074 18000000 		.4byte	.LFE14
 3142 0078 00000000 		.4byte	.LFB15
 3143 007c 48000000 		.4byte	.LFE15
 3144 0080 00000000 		.4byte	.LFB16
 3145 0084 1C000000 		.4byte	.LFE16
 3146 0088 00000000 		.4byte	.LFB17
 3147 008c 18000000 		.4byte	.LFE17
 3148 0090 00000000 		.4byte	.LFB18
 3149 0094 48000000 		.4byte	.LFE18
 3150 0098 00000000 		.4byte	.LFB19
 3151 009c 1C000000 		.4byte	.LFE19
 3152 00a0 00000000 		.4byte	.LFB20
 3153 00a4 18000000 		.4byte	.LFE20
 3154 00a8 00000000 		.4byte	.LFB21
 3155 00ac 48000000 		.4byte	.LFE21
 3156 00b0 00000000 		.4byte	.LFB22
 3157 00b4 1C000000 		.4byte	.LFE22
 3158 00b8 00000000 		.4byte	.LFB23
 3159 00bc 18000000 		.4byte	.LFE23
 3160 00c0 00000000 		.4byte	.LFB24
 3161 00c4 1C000000 		.4byte	.LFE24
 3162 00c8 00000000 		.4byte	.LFB25
 3163 00cc 18000000 		.4byte	.LFE25
 3164 00d0 00000000 		.4byte	.LFB26
 3165 00d4 18000000 		.4byte	.LFE26
 3166 00d8 00000000 		.4byte	.LFB27
 3167 00dc 18000000 		.4byte	.LFE27
 3168 00e0 00000000 		.4byte	.LFB28
 3169 00e4 44000000 		.4byte	.LFE28
 3170 00e8 00000000 		.4byte	.LFB29
 3171 00ec 44000000 		.4byte	.LFE29
 3172 00f0 00000000 		.4byte	.LFB30
 3173 00f4 48000000 		.4byte	.LFE30
 3174 00f8 00000000 		.4byte	.LFB31
 3175 00fc 44000000 		.4byte	.LFE31
 3176 0100 00000000 		.4byte	.LFB32
 3177 0104 44000000 		.4byte	.LFE32
 3178 0108 00000000 		.4byte	.LFB33
 3179 010c 3C000000 		.4byte	.LFE33
 3180 0110 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 81


 3181 0114 20000000 		.4byte	.LFE34
 3182 0118 00000000 		.4byte	.LFB35
 3183 011c 18000000 		.4byte	.LFE35
 3184 0120 00000000 		.4byte	.LFB36
 3185 0124 14000000 		.4byte	.LFE36
 3186 0128 00000000 		.4byte	.LFB37
 3187 012c 14000000 		.4byte	.LFE37
 3188 0130 00000000 		.4byte	.LFB38
 3189 0134 18000000 		.4byte	.LFE38
 3190 0138 00000000 		.4byte	.LFB39
 3191 013c 18000000 		.4byte	.LFE39
 3192 0140 00000000 		.4byte	0
 3193 0144 00000000 		.4byte	0
 3194              		.section	.debug_line,"",%progbits
 3195              	.Ldebug_line0:
 3196 0000 71030000 		.section	.debug_str,"MS",%progbits,1
 3196      02004400 
 3196      00000201 
 3196      FB0E0D00 
 3196      01010101 
 3197              	.LASF40:
 3198 0000 636F756E 		.ascii	"count\000"
 3198      7400
 3199              	.LASF19:
 3200 0006 50574D5F 		.ascii	"PWM_1_Stop\000"
 3200      315F5374 
 3200      6F7000
 3201              	.LASF59:
 3202 0011 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 3202      315F5265 
 3202      61644361 
 3202      70747572 
 3202      6500
 3203              	.LASF73:
 3204 0023 50574D5F 		.ascii	"PWM_1_GetInterruptSource\000"
 3204      315F4765 
 3204      74496E74 
 3204      65727275 
 3204      7074536F 
 3205              	.LASF49:
 3206 003c 50574D5F 		.ascii	"PWM_1_WritePeriodBuf\000"
 3206      315F5772 
 3206      69746550 
 3206      6572696F 
 3206      64427566 
 3207              	.LASF44:
 3208 0051 70657269 		.ascii	"period\000"
 3208      6F6400
 3209              	.LASF7:
 3210 0058 6C6F6E67 		.ascii	"long long unsigned int\000"
 3210      206C6F6E 
 3210      6720756E 
 3210      7369676E 
 3210      65642069 
 3211              	.LASF24:
 3212 006f 71644D6F 		.ascii	"qdMode\000"
 3212      646500
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 82


 3213              	.LASF27:
 3214 0076 50574D5F 		.ascii	"PWM_1_SetOneShot\000"
 3214      315F5365 
 3214      744F6E65 
 3214      53686F74 
 3214      00
 3215              	.LASF55:
 3216 0087 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 3216      315F5265 
 3216      6164436F 
 3216      6D706172 
 3216      6500
 3217              	.LASF75:
 3218 0099 50574D5F 		.ascii	"PWM_1_SetInterrupt\000"
 3218      315F5365 
 3218      74496E74 
 3218      65727275 
 3218      707400
 3219              	.LASF6:
 3220 00ac 6C6F6E67 		.ascii	"long long int\000"
 3220      206C6F6E 
 3220      6720696E 
 3220      7400
 3221              	.LASF0:
 3222 00ba 7369676E 		.ascii	"signed char\000"
 3222      65642063 
 3222      68617200 
 3223              	.LASF60:
 3224 00c6 50574D5F 		.ascii	"PWM_1_ReadCaptureBuf\000"
 3224      315F5265 
 3224      61644361 
 3224      70747572 
 3224      65427566 
 3225              	.LASF69:
 3226 00db 50574D5F 		.ascii	"PWM_1_ReadStatus\000"
 3226      315F5265 
 3226      61645374 
 3226      61747573 
 3226      00
 3227              	.LASF4:
 3228 00ec 6C6F6E67 		.ascii	"long int\000"
 3228      20696E74 
 3228      00
 3229              	.LASF9:
 3230 00f5 75696E74 		.ascii	"uint8\000"
 3230      3800
 3231              	.LASF12:
 3232 00fb 646F7562 		.ascii	"double\000"
 3232      6C6500
 3233              	.LASF45:
 3234 0102 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 3234      315F5265 
 3234      6164436F 
 3234      756E7465 
 3234      7200
 3235              	.LASF66:
 3236 0114 50574D5F 		.ascii	"PWM_1_SetCountMode\000"
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 83


 3236      315F5365 
 3236      74436F75 
 3236      6E744D6F 
 3236      646500
 3237              	.LASF10:
 3238 0127 75696E74 		.ascii	"uint32\000"
 3238      333200
 3239              	.LASF62:
 3240 012e 74726967 		.ascii	"triggerMode\000"
 3240      6765724D 
 3240      6F646500 
 3241              	.LASF38:
 3242 013a 6D61736B 		.ascii	"mask\000"
 3242      00
 3243              	.LASF36:
 3244 013f 64656164 		.ascii	"deadTime\000"
 3244      54696D65 
 3244      00
 3245              	.LASF8:
 3246 0148 756E7369 		.ascii	"unsigned int\000"
 3246      676E6564 
 3246      20696E74 
 3246      00
 3247              	.LASF21:
 3248 0155 50574D5F 		.ascii	"PWM_1_SetMode\000"
 3248      315F5365 
 3248      744D6F64 
 3248      6500
 3249              	.LASF68:
 3250 0163 636F6D6D 		.ascii	"command\000"
 3250      616E6400 
 3251              	.LASF5:
 3252 016b 6C6F6E67 		.ascii	"long unsigned int\000"
 3252      20756E73 
 3252      69676E65 
 3252      6420696E 
 3252      7400
 3253              	.LASF30:
 3254 017d 6D6F6465 		.ascii	"modeMask\000"
 3254      4D61736B 
 3254      00
 3255              	.LASF46:
 3256 0186 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 3256      315F5265 
 3256      61645065 
 3256      72696F64 
 3256      00
 3257              	.LASF78:
 3258 0197 443A5C70 		.ascii	"D:\\patternagents\\PSoC_Workshop\\projects\\LAB_THR"
 3258      61747465 
 3258      726E6167 
 3258      656E7473 
 3258      5C50536F 
 3259 01c6 45455C4C 		.ascii	"EE\\LAB_THREE.cydsn\000"
 3259      41425F54 
 3259      48524545 
 3259      2E637964 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 84


 3259      736E00
 3260              	.LASF53:
 3261 01d9 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 3261      315F5772 
 3261      69746543 
 3261      6F6D7061 
 3261      726500
 3262              	.LASF3:
 3263 01ec 73686F72 		.ascii	"short unsigned int\000"
 3263      7420756E 
 3263      7369676E 
 3263      65642069 
 3263      6E7400
 3264              	.LASF28:
 3265 01ff 6F6E6553 		.ascii	"oneShotEnable\000"
 3265      686F7445 
 3265      6E61626C 
 3265      6500
 3266              	.LASF18:
 3267 020d 50574D5F 		.ascii	"PWM_1_Enable\000"
 3267      315F456E 
 3267      61626C65 
 3267      00
 3268              	.LASF16:
 3269 021a 50574D5F 		.ascii	"PWM_1_Init\000"
 3269      315F496E 
 3269      697400
 3270              	.LASF14:
 3271 0225 72656733 		.ascii	"reg32\000"
 3271      3200
 3272              	.LASF39:
 3273 022b 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 3273      315F5772 
 3273      69746543 
 3273      6F756E74 
 3273      657200
 3274              	.LASF33:
 3275 023e 50574D5F 		.ascii	"PWM_1_SetPWMStopOnKill\000"
 3275      315F5365 
 3275      7450574D 
 3275      53746F70 
 3275      4F6E4B69 
 3276              	.LASF15:
 3277 0255 73697A65 		.ascii	"sizetype\000"
 3277      74797065 
 3277      00
 3278              	.LASF32:
 3279 025e 73796E63 		.ascii	"syncKillEnable\000"
 3279      4B696C6C 
 3279      456E6162 
 3279      6C6500
 3280              	.LASF77:
 3281 026d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 3281      6E657261 
 3281      7465645F 
 3281      536F7572 
 3281      63655C50 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 85


 3282              	.LASF54:
 3283 028e 636F6D70 		.ascii	"compare\000"
 3283      61726500 
 3284              	.LASF29:
 3285 0296 50574D5F 		.ascii	"PWM_1_SetPWMMode\000"
 3285      315F5365 
 3285      7450574D 
 3285      4D6F6465 
 3285      00
 3286              	.LASF41:
 3287 02a7 50574D5F 		.ascii	"PWM_1_SetCounterMode\000"
 3287      315F5365 
 3287      74436F75 
 3287      6E746572 
 3287      4D6F6465 
 3288              	.LASF58:
 3289 02bc 50574D5F 		.ascii	"PWM_1_ReadCompareBuf\000"
 3289      315F5265 
 3289      6164436F 
 3289      6D706172 
 3289      65427566 
 3290              	.LASF47:
 3291 02d1 50574D5F 		.ascii	"PWM_1_SetCompareSwap\000"
 3291      315F5365 
 3291      74436F6D 
 3291      70617265 
 3291      53776170 
 3292              	.LASF11:
 3293 02e6 666C6F61 		.ascii	"float\000"
 3293      7400
 3294              	.LASF26:
 3295 02ec 70726573 		.ascii	"prescaler\000"
 3295      63616C65 
 3295      7200
 3296              	.LASF76:
 3297 02f6 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3297      4320342E 
 3297      382E3420 
 3297      32303134 
 3297      30353236 
 3298 0329 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3298      20726576 
 3298      6973696F 
 3298      6E203231 
 3298      31333538 
 3299 035c 30202D66 		.ascii	"0 -ffunction-sections\000"
 3299      66756E63 
 3299      74696F6E 
 3299      2D736563 
 3299      74696F6E 
 3300              	.LASF51:
 3301 0372 50574D5F 		.ascii	"PWM_1_ReadPeriodBuf\000"
 3301      315F5265 
 3301      61645065 
 3301      72696F64 
 3301      42756600 
 3302              	.LASF37:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 86


 3303 0386 50574D5F 		.ascii	"PWM_1_SetPWMInvert\000"
 3303      315F5365 
 3303      7450574D 
 3303      496E7665 
 3303      727400
 3304              	.LASF64:
 3305 0399 50574D5F 		.ascii	"PWM_1_SetStartMode\000"
 3305      315F5365 
 3305      74537461 
 3305      72744D6F 
 3305      646500
 3306              	.LASF1:
 3307 03ac 756E7369 		.ascii	"unsigned char\000"
 3307      676E6564 
 3307      20636861 
 3307      7200
 3308              	.LASF35:
 3309 03ba 50574D5F 		.ascii	"PWM_1_SetPWMDeadTime\000"
 3309      315F5365 
 3309      7450574D 
 3309      44656164 
 3309      54696D65 
 3310              	.LASF31:
 3311 03cf 50574D5F 		.ascii	"PWM_1_SetPWMSyncKill\000"
 3311      315F5365 
 3311      7450574D 
 3311      53796E63 
 3311      4B696C6C 
 3312              	.LASF34:
 3313 03e4 73746F70 		.ascii	"stopOnKillEnable\000"
 3313      4F6E4B69 
 3313      6C6C456E 
 3313      61626C65 
 3313      00
 3314              	.LASF2:
 3315 03f5 73686F72 		.ascii	"short int\000"
 3315      7420696E 
 3315      7400
 3316              	.LASF52:
 3317 03ff 50574D5F 		.ascii	"PWM_1_SetPeriodSwap\000"
 3317      315F5365 
 3317      74506572 
 3317      696F6453 
 3317      77617000 
 3318              	.LASF71:
 3319 0413 696E7465 		.ascii	"interruptMask\000"
 3319      72727570 
 3319      744D6173 
 3319      6B00
 3320              	.LASF70:
 3321 0421 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 3321      315F5365 
 3321      74496E74 
 3321      65727275 
 3321      70744D6F 
 3322              	.LASF65:
 3323 0438 50574D5F 		.ascii	"PWM_1_SetStopMode\000"
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 87


 3323      315F5365 
 3323      7453746F 
 3323      704D6F64 
 3323      6500
 3324              	.LASF13:
 3325 044a 63686172 		.ascii	"char\000"
 3325      00
 3326              	.LASF23:
 3327 044f 6D6F6465 		.ascii	"mode\000"
 3327      00
 3328              	.LASF67:
 3329 0454 50574D5F 		.ascii	"PWM_1_TriggerCommand\000"
 3329      315F5472 
 3329      69676765 
 3329      72436F6D 
 3329      6D616E64 
 3330              	.LASF25:
 3331 0469 50574D5F 		.ascii	"PWM_1_SetPrescaler\000"
 3331      315F5365 
 3331      74507265 
 3331      7363616C 
 3331      657200
 3332              	.LASF74:
 3333 047c 50574D5F 		.ascii	"PWM_1_ClearInterrupt\000"
 3333      315F436C 
 3333      65617249 
 3333      6E746572 
 3333      72757074 
 3334              	.LASF56:
 3335 0491 50574D5F 		.ascii	"PWM_1_WriteCompareBuf\000"
 3335      315F5772 
 3335      69746543 
 3335      6F6D7061 
 3335      72654275 
 3336              	.LASF42:
 3337 04a7 636F756E 		.ascii	"counterMode\000"
 3337      7465724D 
 3337      6F646500 
 3338              	.LASF57:
 3339 04b3 636F6D70 		.ascii	"compareBuf\000"
 3339      61726542 
 3339      756600
 3340              	.LASF17:
 3341 04be 50574D5F 		.ascii	"PWM_1_Start\000"
 3341      315F5374 
 3341      61727400 
 3342              	.LASF63:
 3343 04ca 50574D5F 		.ascii	"PWM_1_SetReloadMode\000"
 3343      315F5365 
 3343      7452656C 
 3343      6F61644D 
 3343      6F646500 
 3344              	.LASF20:
 3345 04de 656E6162 		.ascii	"enableInterrupts\000"
 3345      6C65496E 
 3345      74657272 
 3345      75707473 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccAAf327.s 			page 88


 3345      00
 3346              	.LASF43:
 3347 04ef 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 3347      315F5772 
 3347      69746550 
 3347      6572696F 
 3347      6400
 3348              	.LASF61:
 3349 0501 50574D5F 		.ascii	"PWM_1_SetCaptureMode\000"
 3349      315F5365 
 3349      74436170 
 3349      74757265 
 3349      4D6F6465 
 3350              	.LASF79:
 3351 0516 50574D5F 		.ascii	"PWM_1_initVar\000"
 3351      315F696E 
 3351      69745661 
 3351      7200
 3352              	.LASF22:
 3353 0524 50574D5F 		.ascii	"PWM_1_SetQDMode\000"
 3353      315F5365 
 3353      7451444D 
 3353      6F646500 
 3354              	.LASF48:
 3355 0534 73776170 		.ascii	"swapEnable\000"
 3355      456E6162 
 3355      6C6500
 3356              	.LASF50:
 3357 053f 70657269 		.ascii	"periodBuf\000"
 3357      6F644275 
 3357      6600
 3358              	.LASF72:
 3359 0549 50574D5F 		.ascii	"PWM_1_GetInterruptSourceMasked\000"
 3359      315F4765 
 3359      74496E74 
 3359      65727275 
 3359      7074536F 
 3360              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
