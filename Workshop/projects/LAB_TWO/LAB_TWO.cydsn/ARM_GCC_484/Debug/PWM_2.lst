ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_2_initVar
  18              		.bss
  19              		.type	PWM_2_initVar, %object
  20              		.size	PWM_2_initVar, 1
  21              	PWM_2_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_2_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_2_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_2_Start, %function
  29              	PWM_2_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_2.c"
   1:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_2.c **** * File Name: PWM_2.c
   3:.\Generated_Source\PSoC4/PWM_2.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_2.c **** *
   5:.\Generated_Source\PSoC4/PWM_2.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_2.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_2.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_2.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_2.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_2.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_2.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_2.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_2.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_2.c **** *
  15:.\Generated_Source\PSoC4/PWM_2.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_2.c **** *
  17:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_2.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_2.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_2.c **** 
  24:.\Generated_Source\PSoC4/PWM_2.c **** #include "PWM_2.h"
  25:.\Generated_Source\PSoC4/PWM_2.c **** 
  26:.\Generated_Source\PSoC4/PWM_2.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_2.c **** #ifdef PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_2.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_2.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_2.c **** 
  32:.\Generated_Source\PSoC4/PWM_2.c **** uint8 PWM_2_initVar = 0u;
  33:.\Generated_Source\PSoC4/PWM_2.c **** 
  34:.\Generated_Source\PSoC4/PWM_2.c **** 
  35:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Start
  37:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_2.c **** *
  39:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_2.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_2.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_2.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_2.c **** *
  44:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_2.c **** *
  47:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_2.c **** *
  50:.\Generated_Source\PSoC4/PWM_2.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_2.c **** *  PWM_2_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_2.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_2.c **** *
  54:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_2.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/PWM_2.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_2.c ****     if(PWM_2_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/PWM_2.c ****     {
  60:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_2_Init
  61:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/PWM_2.c ****     }
  63:.\Generated_Source\PSoC4/PWM_2.c ****     PWM_2_Enable();
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_2_Enable
  64:.\Generated_Source\PSoC4/PWM_2.c **** 
  65:.\Generated_Source\PSoC4/PWM_2.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_2_initVar
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	PWM_2_Start, .-PWM_2_Start
  65              		.section	.text.PWM_2_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_2_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_2_Init, %function
  71              	PWM_2_Init:
  72              	.LFB1:
  66:.\Generated_Source\PSoC4/PWM_2.c **** 
  67:.\Generated_Source\PSoC4/PWM_2.c **** 
  68:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Init
  70:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_2.c **** *
  72:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_2.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_2.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_2.c **** *  PWM_2_Start().
  76:.\Generated_Source\PSoC4/PWM_2.c **** *
  77:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_2.c **** *
  80:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_2.c **** *
  83:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_2.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction || PWM_2_UseControl)
  87:.\Generated_Source\PSoC4/PWM_2.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction || PWM_2_UseControl) */
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 4


  89:.\Generated_Source\PSoC4/PWM_2.c **** 
  90:.\Generated_Source\PSoC4/PWM_2.c ****     #if(!PWM_2_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_2.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_2.c ****             uint8 PWM_2_interruptState;
  94:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_2.c **** 
  97:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_2.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL |= PWM_2_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_2.c **** 
 104:.\Generated_Source\PSoC4/PWM_2.c ****         ctrl = PWM_2_CONTROL3 & ((uint8 )(~PWM_2_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL3 = ctrl | PWM_2_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_2.c **** 
 107:.\Generated_Source\PSoC4/PWM_2.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNC;
 110:.\Generated_Source\PSoC4/PWM_2.c **** 
 111:.\Generated_Source\PSoC4/PWM_2.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_2.c **** 
 115:.\Generated_Source\PSoC4/PWM_2.c ****     #elif (PWM_2_UseControl)
 116:.\Generated_Source\PSoC4/PWM_2.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_2.c ****         ctrl = PWM_2_CONTROL & ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM_2.c ****                 ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL = ctrl | PWM_2_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM_2.c ****                                    PWM_2_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_2.c **** 
 123:.\Generated_Source\PSoC4/PWM_2.c ****     #if (!PWM_2_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
  84              		.loc 1 126 0
  85 0006 154B     		ldr	r3, .L6
  86 0008 144A     		ldr	r2, .L6
  87 000a 1278     		ldrb	r2, [r2]
  88 000c D2B2     		uxtb	r2, r2
  89 000e 0121     		mov	r1, #1
  90 0010 0A43     		orr	r2, r1
  91 0012 D2B2     		uxtb	r2, r2
  92 0014 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/PWM_2.c ****         #else /* (PWM_2_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_AUX_CONTROLDP1 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_2.c **** 
 133:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_WriteCounter(PWM_2_INIT_PERIOD_VALUE);
  93              		.loc 1 133 0
  94 0016 FA20     		mov	r0, #250
  95 0018 FFF7FEFF 		bl	PWM_2_WriteCounter
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 5


 134:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_2.c **** 
 136:.\Generated_Source\PSoC4/PWM_2.c ****     PWM_2_WritePeriod(PWM_2_INIT_PERIOD_VALUE);
  96              		.loc 1 136 0
  97 001c FA20     		mov	r0, #250
  98 001e FFF7FEFF 		bl	PWM_2_WritePeriod
 137:.\Generated_Source\PSoC4/PWM_2.c **** 
 138:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompare(PWM_2_INIT_COMPARE_VALUE1);
  99              		.loc 1 139 0
 100 0022 7D20     		mov	r0, #125
 101 0024 FFF7FEFF 		bl	PWM_2_WriteCompare
 140:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompare1(PWM_2_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompare2(PWM_2_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_2.c **** 
 145:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteKillTime(PWM_2_MinimumKillTime);
 147:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_2.c **** 
 149:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteDeadTime(PWM_2_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_2.c **** 
 153:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_INIT_INTERRUPTS_MODE);
 102              		.loc 1 154 0
 103 0028 0020     		mov	r0, #0
 104 002a FFF7FEFF 		bl	PWM_2_SetInterruptMode
 155:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_2.c **** 
 157:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_2.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_2.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL2 |= PWM_2_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_2.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_2.c **** 
 165:.\Generated_Source\PSoC4/PWM_2.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_2.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_interruptState = CyEnterCriticalSection();
 105              		.loc 1 167 0
 106 002e FC1D     		add	r4, r7, #7
 107 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 108 0034 031C     		mov	r3, r0
 109 0036 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/PWM_2.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_STATUS_AUX_CTRL |= PWM_2_STATUS_ACTL_INT_EN_MASK;
 110              		.loc 1 169 0
 111 0038 084B     		ldr	r3, .L6
 112 003a 084A     		ldr	r2, .L6
 113 003c 1278     		ldrb	r2, [r2]
 114 003e D2B2     		uxtb	r2, r2
 115 0040 1021     		mov	r1, #16
 116 0042 0A43     		orr	r2, r1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 6


 117 0044 D2B2     		uxtb	r2, r2
 118 0046 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC4/PWM_2.c **** 
 171:.\Generated_Source\PSoC4/PWM_2.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_2.c ****             CyExitCriticalSection(PWM_2_interruptState);
 119              		.loc 1 172 0
 120 0048 FB1D     		add	r3, r7, #7
 121 004a 1B78     		ldrb	r3, [r3]
 122 004c 181C     		mov	r0, r3
 123 004e FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/PWM_2.c **** 
 174:.\Generated_Source\PSoC4/PWM_2.c ****             /* Clear the FIFO to enable the PWM_2_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_2.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_ClearFIFO();
 124              		.loc 1 176 0
 125 0052 FFF7FEFF 		bl	PWM_2_ClearFIFO
 177:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_2.c **** }
 126              		.loc 1 179 0
 127 0056 BD46     		mov	sp, r7
 128 0058 03B0     		add	sp, sp, #12
 129              		@ sp needed
 130 005a 90BD     		pop	{r4, r7, pc}
 131              	.L7:
 132              		.align	2
 133              	.L6:
 134 005c 92000F40 		.word	1074725010
 135              		.cfi_endproc
 136              	.LFE1:
 137              		.size	PWM_2_Init, .-PWM_2_Init
 138              		.section	.text.PWM_2_Enable,"ax",%progbits
 139              		.align	2
 140              		.global	PWM_2_Enable
 141              		.code	16
 142              		.thumb_func
 143              		.type	PWM_2_Enable, %function
 144              	PWM_2_Enable:
 145              	.LFB2:
 180:.\Generated_Source\PSoC4/PWM_2.c **** 
 181:.\Generated_Source\PSoC4/PWM_2.c **** 
 182:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Enable
 184:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_2.c **** *
 186:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_2.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_2.c **** *
 189:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_2.c **** *
 192:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_2.c **** *
 195:.\Generated_Source\PSoC4/PWM_2.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_2.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_2.c **** *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 7


 198:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_2.c **** {
 146              		.loc 1 200 0
 147              		.cfi_startproc
 148 0000 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/PWM_2.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE |= PWM_2_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_2.c **** 
 207:.\Generated_Source\PSoC4/PWM_2.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CTRL_ENABLE;
 210:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_2.c **** }
 154              		.loc 1 211 0
 155 0004 BD46     		mov	sp, r7
 156              		@ sp needed
 157 0006 80BD     		pop	{r7, pc}
 158              		.cfi_endproc
 159              	.LFE2:
 160              		.size	PWM_2_Enable, .-PWM_2_Enable
 161              		.section	.text.PWM_2_Stop,"ax",%progbits
 162              		.align	2
 163              		.global	PWM_2_Stop
 164              		.code	16
 165              		.thumb_func
 166              		.type	PWM_2_Stop, %function
 167              	PWM_2_Stop:
 168              	.LFB3:
 212:.\Generated_Source\PSoC4/PWM_2.c **** 
 213:.\Generated_Source\PSoC4/PWM_2.c **** 
 214:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Stop
 216:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_2.c **** *
 218:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_2.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_2.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_2.c **** *
 222:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_2.c **** *
 225:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_2.c **** *
 228:.\Generated_Source\PSoC4/PWM_2.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_2.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_2.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_2.c **** *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 8


 232:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_2.c **** {
 169              		.loc 1 234 0
 170              		.cfi_startproc
 171 0000 80B5     		push	{r7, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_ENABLE));
 237:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_2.c **** 
 239:.\Generated_Source\PSoC4/PWM_2.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_ENABLE &= ((uint8)(~PWM_2_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_2_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_2.c **** }
 177              		.loc 1 244 0
 178 0004 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0006 80BD     		pop	{r7, pc}
 181              		.cfi_endproc
 182              	.LFE3:
 183              		.size	PWM_2_Stop, .-PWM_2_Stop
 184              		.section	.text.PWM_2_WriteCounter,"ax",%progbits
 185              		.align	2
 186              		.global	PWM_2_WriteCounter
 187              		.code	16
 188              		.thumb_func
 189              		.type	PWM_2_WriteCounter, %function
 190              	PWM_2_WriteCounter:
 191              	.LFB4:
 245:.\Generated_Source\PSoC4/PWM_2.c **** 
 246:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_2.c **** 
 249:.\Generated_Source\PSoC4/PWM_2.c **** 
 250:.\Generated_Source\PSoC4/PWM_2.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_2.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_2.c ****         *
 254:.\Generated_Source\PSoC4/PWM_2.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_2.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_2.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_2.c ****         *
 258:.\Generated_Source\PSoC4/PWM_2.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_2.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_2.c ****         *
 262:.\Generated_Source\PSoC4/PWM_2.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_2.c ****         *
 265:.\Generated_Source\PSoC4/PWM_2.c ****         *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 9


 266:.\Generated_Source\PSoC4/PWM_2.c ****         void PWM_2_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_2.c ****         {
 268:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_2.c **** 
 270:.\Generated_Source\PSoC4/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_2.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_2.c **** 
 276:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL3 &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_2.c **** 
 279:.\Generated_Source\PSoC4/PWM_2.c ****             #elif (PWM_2_UseControl)
 280:.\Generated_Source\PSoC4/PWM_2.c **** 
 281:.\Generated_Source\PSoC4/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_2.c ****                                                 PWM_2_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_2.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode1masked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_2.c **** 
 288:.\Generated_Source\PSoC4/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_2.c ****                                                PWM_2_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_2.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode2masked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_2.c **** 
 295:.\Generated_Source\PSoC4/PWM_2.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~(PWM_2_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_2.c ****                                             PWM_2_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_2.c **** 
 300:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_2.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_2.c ****         }
 304:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_2.c **** 
 306:.\Generated_Source\PSoC4/PWM_2.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_2.c **** 
 308:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_2.c **** 
 310:.\Generated_Source\PSoC4/PWM_2.c **** 
 311:.\Generated_Source\PSoC4/PWM_2.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_2.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_2.c ****         *
 315:.\Generated_Source\PSoC4/PWM_2.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_2.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_2.c ****         *
 318:.\Generated_Source\PSoC4/PWM_2.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_2.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_2.c ****         *
 322:.\Generated_Source\PSoC4/PWM_2.c ****         * Return:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 10


 323:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_2.c ****         *
 325:.\Generated_Source\PSoC4/PWM_2.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_2.c ****         void PWM_2_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_2.c ****         {
 328:.\Generated_Source\PSoC4/PWM_2.c ****             #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_2.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_2.c ****                                            PWM_2_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_2.c ****                 uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_2.c **** 
 335:.\Generated_Source\PSoC4/PWM_2.c ****             #if (PWM_2_UseControl)
 336:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_2.c ****         }
 340:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_2.c **** 
 342:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_2.c **** 
 344:.\Generated_Source\PSoC4/PWM_2.c **** 
 345:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_2.c ****     *
 349:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_2.c ****     *
 352:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_2.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_2.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_2.c ****     *
 356:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_2.c ****     *
 359:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_2.c ****     {
 362:.\Generated_Source\PSoC4/PWM_2.c **** 
 363:.\Generated_Source\PSoC4/PWM_2.c ****         #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_2.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_2.c ****                                                  PWM_2_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_2.c ****             uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_2.c **** 
 370:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_UseControl)
 371:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_2.c ****     }
 375:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /*PWM_2_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_2.c **** 
 377:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_2.c **** 
 379:.\Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 11


 380:.\Generated_Source\PSoC4/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_2.c **** 
 382:.\Generated_Source\PSoC4/PWM_2.c **** 
 383:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_2.c ****     *
 387:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_2.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_2.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_2.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_2.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_2.c ****     *
 393:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_2.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_2.c ****     *
 396:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_2.c ****     *
 399:.\Generated_Source\PSoC4/PWM_2.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_2.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_2.c ****     *
 402:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWM_2.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_2.c ****     {
 192              		.loc 1 405 0
 193              		.cfi_startproc
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 82B0     		sub	sp, sp, #8
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 202 0006 021C     		mov	r2, r0
 203 0008 FB1D     		add	r3, r7, #7
 204 000a 1A70     		strb	r2, [r3]
 406:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_COUNTER_LSB_PTR, counter);
 205              		.loc 1 406 0
 206 000c 034B     		ldr	r3, .L11
 207 000e FA1D     		add	r2, r7, #7
 208 0010 1278     		ldrb	r2, [r2]
 209 0012 1A70     		strb	r2, [r3]
 407:.\Generated_Source\PSoC4/PWM_2.c ****     }
 210              		.loc 1 407 0
 211 0014 BD46     		mov	sp, r7
 212 0016 02B0     		add	sp, sp, #8
 213              		@ sp needed
 214 0018 80BD     		pop	{r7, pc}
 215              	.L12:
 216 001a C046     		.align	2
 217              	.L11:
 218 001c 02000F40 		.word	1074724866
 219              		.cfi_endproc
 220              	.LFE4:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 12


 221              		.size	PWM_2_WriteCounter, .-PWM_2_WriteCounter
 222              		.section	.text.PWM_2_ReadCounter,"ax",%progbits
 223              		.align	2
 224              		.global	PWM_2_ReadCounter
 225              		.code	16
 226              		.thumb_func
 227              		.type	PWM_2_ReadCounter, %function
 228              	PWM_2_ReadCounter:
 229              	.LFB5:
 408:.\Generated_Source\PSoC4/PWM_2.c **** 
 409:.\Generated_Source\PSoC4/PWM_2.c **** 
 410:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/PWM_2.c ****     *
 414:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_2.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_2.c ****     *
 418:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_2.c ****     *
 421:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_2.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_2.c ****     *
 424:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_2.c ****     {
 230              		.loc 1 426 0
 231              		.cfi_startproc
 232 0000 80B5     		push	{r7, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/PWM_2.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_2.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_2.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_2.c ****           (void)CY_GET_REG8(PWM_2_COUNTERCAP_LSB_PTR_8BIT);
 238              		.loc 1 430 0
 239 0004 034B     		ldr	r3, .L15
 240 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_2.c **** 
 432:.\Generated_Source\PSoC4/PWM_2.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_CAPTURE_LSB_PTR));
 241              		.loc 1 433 0
 242 0008 034B     		ldr	r3, .L15+4
 243 000a 1B78     		ldrb	r3, [r3]
 244 000c DBB2     		uxtb	r3, r3
 434:.\Generated_Source\PSoC4/PWM_2.c ****     }
 245              		.loc 1 434 0
 246 000e 181C     		mov	r0, r3
 247 0010 BD46     		mov	sp, r7
 248              		@ sp needed
 249 0012 80BD     		pop	{r7, pc}
 250              	.L16:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 13


 251              		.align	2
 252              	.L15:
 253 0014 12000F40 		.word	1074724882
 254 0018 52000F40 		.word	1074724946
 255              		.cfi_endproc
 256              	.LFE5:
 257              		.size	PWM_2_ReadCounter, .-PWM_2_ReadCounter
 258              		.section	.text.PWM_2_ClearFIFO,"ax",%progbits
 259              		.align	2
 260              		.global	PWM_2_ClearFIFO
 261              		.code	16
 262              		.thumb_func
 263              		.type	PWM_2_ClearFIFO, %function
 264              	PWM_2_ClearFIFO:
 265              	.LFB6:
 435:.\Generated_Source\PSoC4/PWM_2.c **** 
 436:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_2.c **** 
 438:.\Generated_Source\PSoC4/PWM_2.c **** 
 439:.\Generated_Source\PSoC4/PWM_2.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_2.c ****         * Function Name: PWM_2_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_2.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/PWM_2.c ****         *
 443:.\Generated_Source\PSoC4/PWM_2.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_2.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_2.c ****         *
 446:.\Generated_Source\PSoC4/PWM_2.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_2.c ****         *
 449:.\Generated_Source\PSoC4/PWM_2.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_2.c ****         *
 452:.\Generated_Source\PSoC4/PWM_2.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_2.c ****         void PWM_2_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_2.c ****         {
 266              		.loc 1 454 0
 267              		.cfi_startproc
 268 0000 80B5     		push	{r7, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 00AF     		add	r7, sp, #0
 273              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/PWM_2.c ****             while(0u != (PWM_2_ReadStatusRegister() & PWM_2_STATUS_FIFONEMPTY))
 274              		.loc 1 455 0
 275 0004 01E0     		b	.L18
 276              	.L19:
 456:.\Generated_Source\PSoC4/PWM_2.c ****             {
 457:.\Generated_Source\PSoC4/PWM_2.c ****                 (void)PWM_2_ReadCapture();
 277              		.loc 1 457 0
 278 0006 FFF7FEFF 		bl	PWM_2_ReadCapture
 279              	.L18:
 455:.\Generated_Source\PSoC4/PWM_2.c ****             while(0u != (PWM_2_ReadStatusRegister() & PWM_2_STATUS_FIFONEMPTY))
 280              		.loc 1 455 0 discriminator 1
 281 000a FFF7FEFF 		bl	PWM_2_ReadStatusRegister
 282 000e 031C     		mov	r3, r0
 283 0010 1A1C     		mov	r2, r3
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 14


 284 0012 1023     		mov	r3, #16
 285 0014 1340     		and	r3, r2
 286 0016 F6D1     		bne	.L19
 458:.\Generated_Source\PSoC4/PWM_2.c ****             }
 459:.\Generated_Source\PSoC4/PWM_2.c ****         }
 287              		.loc 1 459 0
 288 0018 BD46     		mov	sp, r7
 289              		@ sp needed
 290 001a 80BD     		pop	{r7, pc}
 291              		.cfi_endproc
 292              	.LFE6:
 293              		.size	PWM_2_ClearFIFO, .-PWM_2_ClearFIFO
 294              		.section	.text.PWM_2_WritePeriod,"ax",%progbits
 295              		.align	2
 296              		.global	PWM_2_WritePeriod
 297              		.code	16
 298              		.thumb_func
 299              		.type	PWM_2_WritePeriod, %function
 300              	PWM_2_WritePeriod:
 301              	.LFB7:
 460:.\Generated_Source\PSoC4/PWM_2.c **** 
 461:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* PWM_2_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_2.c **** 
 463:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* !PWM_2_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_2.c **** 
 465:.\Generated_Source\PSoC4/PWM_2.c **** 
 466:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_2.c **** *
 470:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_2.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_2.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_2.c **** *
 474:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_2.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_2.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_2.c **** *
 478:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_2.c **** *
 481:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWM_2.c **** {
 302              		.loc 1 483 0
 303              		.cfi_startproc
 304 0000 80B5     		push	{r7, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 0002 82B0     		sub	sp, sp, #8
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 312 0006 021C     		mov	r2, r0
 313 0008 FB1D     		add	r3, r7, #7
 314 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 15


 484:.\Generated_Source\PSoC4/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG16(PWM_2_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_2.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_PERIOD_LSB_PTR, period);
 315              		.loc 1 487 0
 316 000c 034B     		ldr	r3, .L21
 317 000e FA1D     		add	r2, r7, #7
 318 0010 1278     		ldrb	r2, [r2]
 319 0012 1A70     		strb	r2, [r3]
 488:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_2.c **** }
 320              		.loc 1 489 0
 321 0014 BD46     		mov	sp, r7
 322 0016 02B0     		add	sp, sp, #8
 323              		@ sp needed
 324 0018 80BD     		pop	{r7, pc}
 325              	.L22:
 326 001a C046     		.align	2
 327              	.L21:
 328 001c 42000F40 		.word	1074724930
 329              		.cfi_endproc
 330              	.LFE7:
 331              		.size	PWM_2_WritePeriod, .-PWM_2_WritePeriod
 332              		.section	.text.PWM_2_WriteCompare,"ax",%progbits
 333              		.align	2
 334              		.global	PWM_2_WriteCompare
 335              		.code	16
 336              		.thumb_func
 337              		.type	PWM_2_WriteCompare, %function
 338              	PWM_2_WriteCompare:
 339              	.LFB8:
 490:.\Generated_Source\PSoC4/PWM_2.c **** 
 491:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_2.c **** 
 493:.\Generated_Source\PSoC4/PWM_2.c **** 
 494:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_2.c ****     *
 498:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_2.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_2.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_2.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_2.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_2.c ****     *
 505:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_2.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_2.c ****     *
 508:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_2.c ****     *
 511:.\Generated_Source\PSoC4/PWM_2.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_2.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_2.c ****     *
 515:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 16


 516:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWM_2.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_2.c ****     {
 340              		.loc 1 518 0
 341              		.cfi_startproc
 342 0000 80B5     		push	{r7, lr}
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 7, -8
 345              		.cfi_offset 14, -4
 346 0002 82B0     		sub	sp, sp, #8
 347              		.cfi_def_cfa_offset 16
 348 0004 00AF     		add	r7, sp, #0
 349              		.cfi_def_cfa_register 7
 350 0006 021C     		mov	r2, r0
 351 0008 FB1D     		add	r3, r7, #7
 352 000a 1A70     		strb	r2, [r3]
 519:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE1_LSB_PTR, compare);
 353              		.loc 1 522 0
 354 000c 034B     		ldr	r3, .L24
 355 000e FA1D     		add	r2, r7, #7
 356 0010 1278     		ldrb	r2, [r2]
 357 0012 1A70     		strb	r2, [r3]
 523:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_2.c **** 
 525:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_PWMMode == PWM_2__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_2.c ****                 CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_2.c ****                 CY_SET_REG8(PWM_2_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_PWMMode == PWM_2__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_2.c ****     }
 358              		.loc 1 532 0
 359 0014 BD46     		mov	sp, r7
 360 0016 02B0     		add	sp, sp, #8
 361              		@ sp needed
 362 0018 80BD     		pop	{r7, pc}
 363              	.L25:
 364 001a C046     		.align	2
 365              	.L24:
 366 001c 22000F40 		.word	1074724898
 367              		.cfi_endproc
 368              	.LFE8:
 369              		.size	PWM_2_WriteCompare, .-PWM_2_WriteCompare
 370              		.section	.text.PWM_2_SetInterruptMode,"ax",%progbits
 371              		.align	2
 372              		.global	PWM_2_SetInterruptMode
 373              		.code	16
 374              		.thumb_func
 375              		.type	PWM_2_SetInterruptMode, %function
 376              	PWM_2_SetInterruptMode:
 377              	.LFB9:
 533:.\Generated_Source\PSoC4/PWM_2.c **** 
 534:.\Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 17


 535:.\Generated_Source\PSoC4/PWM_2.c **** #else
 536:.\Generated_Source\PSoC4/PWM_2.c **** 
 537:.\Generated_Source\PSoC4/PWM_2.c **** 
 538:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_2.c ****     *
 542:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_2.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_2.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_2.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_2.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_2.c ****     *
 548:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_2.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_2.c ****     *
 551:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_2.c ****     *
 554:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWM_2.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_2.c ****     {
 558:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_2.c ****     }
 564:.\Generated_Source\PSoC4/PWM_2.c **** 
 565:.\Generated_Source\PSoC4/PWM_2.c **** 
 566:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_2.c ****     *
 570:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_2.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_2.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_2.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_2.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_2.c ****     *
 577:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_2.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_2.c ****     *
 580:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_2.c ****     *
 583:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWM_2.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_2.c ****     {
 587:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 18


 592:.\Generated_Source\PSoC4/PWM_2.c ****     }
 593:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_2.c **** 
 595:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_2.c **** 
 597:.\Generated_Source\PSoC4/PWM_2.c **** 
 598:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_2.c ****     *
 602:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_2.c ****     *
 605:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_2.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_2.c ****     *
 608:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_2.c ****     *
 611:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_2.c ****     {
 614:.\Generated_Source\PSoC4/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_2.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_DEADBAND_COUNT &= ((uint8)(~PWM_2_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_2.c **** 
 622:.\Generated_Source\PSoC4/PWM_2.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_2_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_2.c ****                                                     PWM_2_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= deadtime & PWM_2_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_2.c **** 
 630:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_2.c ****     }
 632:.\Generated_Source\PSoC4/PWM_2.c **** 
 633:.\Generated_Source\PSoC4/PWM_2.c **** 
 634:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_2.c ****     *
 638:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_2.c ****     *
 641:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_2.c ****     *
 644:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_2.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_2.c ****     *
 647:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadDeadTime(void) 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 19


 649:.\Generated_Source\PSoC4/PWM_2.c ****     {
 650:.\Generated_Source\PSoC4/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_2.c ****             return (CY_GET_REG8(PWM_2_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_2.c **** 
 655:.\Generated_Source\PSoC4/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_2.c ****                 return ((uint8)(((uint8)(PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_2.c ****                                                                            PWM_2_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_2.c ****                 return (PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_2.c ****     }
 664:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_2.c **** 
 666:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_2.c **** 
 668:.\Generated_Source\PSoC4/PWM_2.c **** 
 669:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_2.c ****     *
 673:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_2.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_2.c ****     *
 677:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_2.c ****     *
 680:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_2.c ****     *
 683:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_2.c ****     {
 378              		.loc 1 685 0
 379              		.cfi_startproc
 380 0000 80B5     		push	{r7, lr}
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 7, -8
 383              		.cfi_offset 14, -4
 384 0002 82B0     		sub	sp, sp, #8
 385              		.cfi_def_cfa_offset 16
 386 0004 00AF     		add	r7, sp, #0
 387              		.cfi_def_cfa_register 7
 388 0006 021C     		mov	r2, r0
 389 0008 FB1D     		add	r3, r7, #7
 390 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_STATUS_MASK_PTR, interruptMode);
 391              		.loc 1 686 0
 392 000c 034B     		ldr	r3, .L27
 393 000e FA1D     		add	r2, r7, #7
 394 0010 1278     		ldrb	r2, [r2]
 395 0012 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/PWM_2.c ****     }
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 20


 396              		.loc 1 687 0
 397 0014 BD46     		mov	sp, r7
 398 0016 02B0     		add	sp, sp, #8
 399              		@ sp needed
 400 0018 80BD     		pop	{r7, pc}
 401              	.L28:
 402 001a C046     		.align	2
 403              	.L27:
 404 001c 82000F40 		.word	1074724994
 405              		.cfi_endproc
 406              	.LFE9:
 407              		.size	PWM_2_SetInterruptMode, .-PWM_2_SetInterruptMode
 408              		.section	.text.PWM_2_ReadStatusRegister,"ax",%progbits
 409              		.align	2
 410              		.global	PWM_2_ReadStatusRegister
 411              		.code	16
 412              		.thumb_func
 413              		.type	PWM_2_ReadStatusRegister, %function
 414              	PWM_2_ReadStatusRegister:
 415              	.LFB10:
 688:.\Generated_Source\PSoC4/PWM_2.c **** 
 689:.\Generated_Source\PSoC4/PWM_2.c **** 
 690:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_2.c ****     *
 694:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_2.c ****     *
 697:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_2.c ****     *
 700:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_2.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_2.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_2.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_2.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_2.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_2.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_2.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_2.c ****     *
 710:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_2.c ****     {
 416              		.loc 1 712 0
 417              		.cfi_startproc
 418 0000 80B5     		push	{r7, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 0002 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_STATUS_PTR));
 424              		.loc 1 713 0
 425 0004 024B     		ldr	r3, .L31
 426 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 21


 427 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/PWM_2.c ****     }
 428              		.loc 1 714 0
 429 000a 181C     		mov	r0, r3
 430 000c BD46     		mov	sp, r7
 431              		@ sp needed
 432 000e 80BD     		pop	{r7, pc}
 433              	.L32:
 434              		.align	2
 435              	.L31:
 436 0010 62000F40 		.word	1074724962
 437              		.cfi_endproc
 438              	.LFE10:
 439              		.size	PWM_2_ReadStatusRegister, .-PWM_2_ReadStatusRegister
 440              		.section	.text.PWM_2_ReadCapture,"ax",%progbits
 441              		.align	2
 442              		.global	PWM_2_ReadCapture
 443              		.code	16
 444              		.thumb_func
 445              		.type	PWM_2_ReadCapture, %function
 446              	PWM_2_ReadCapture:
 447              	.LFB11:
 715:.\Generated_Source\PSoC4/PWM_2.c **** 
 716:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_2.c **** 
 718:.\Generated_Source\PSoC4/PWM_2.c **** 
 719:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseControl)
 720:.\Generated_Source\PSoC4/PWM_2.c **** 
 721:.\Generated_Source\PSoC4/PWM_2.c **** 
 722:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_2.c ****     *
 726:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_2.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_2.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_2.c ****     *
 730:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_2.c ****     *
 733:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_2.c ****     *
 736:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_2.c ****     {
 739:.\Generated_Source\PSoC4/PWM_2.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_2.c **** 
 741:.\Generated_Source\PSoC4/PWM_2.c ****         result = CY_GET_REG8(PWM_2_CONTROL_PTR);
 742:.\Generated_Source\PSoC4/PWM_2.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM_2.c ****     }
 744:.\Generated_Source\PSoC4/PWM_2.c **** 
 745:.\Generated_Source\PSoC4/PWM_2.c **** 
 746:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_2.c ****     *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 22


 750:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_2.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_2.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_2.c ****     *
 754:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_2.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_2.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_2.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_2.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_2.c ****     *
 761:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_2.c ****     *
 764:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_2.c ****     {
 767:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_CONTROL_PTR, control);
 768:.\Generated_Source\PSoC4/PWM_2.c ****     }
 769:.\Generated_Source\PSoC4/PWM_2.c **** 
 770:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (PWM_2_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_2.c **** 
 772:.\Generated_Source\PSoC4/PWM_2.c **** 
 773:.\Generated_Source\PSoC4/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_2.c **** 
 775:.\Generated_Source\PSoC4/PWM_2.c **** 
 776:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_2.c ****     *
 780:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_2.c ****     *
 783:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_2.c ****     *
 786:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_2.c ****     *
 789:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_2.c ****     {
 448              		.loc 1 791 0
 449              		.cfi_startproc
 450 0000 80B5     		push	{r7, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_CAPTURE_LSB_PTR));
 456              		.loc 1 792 0
 457 0004 024B     		ldr	r3, .L35
 458 0006 1B78     		ldrb	r3, [r3]
 459 0008 DBB2     		uxtb	r3, r3
 793:.\Generated_Source\PSoC4/PWM_2.c ****     }
 460              		.loc 1 793 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 23


 461 000a 181C     		mov	r0, r3
 462 000c BD46     		mov	sp, r7
 463              		@ sp needed
 464 000e 80BD     		pop	{r7, pc}
 465              	.L36:
 466              		.align	2
 467              	.L35:
 468 0010 52000F40 		.word	1074724946
 469              		.cfi_endproc
 470              	.LFE11:
 471              		.size	PWM_2_ReadCapture, .-PWM_2_ReadCapture
 472              		.section	.text.PWM_2_ReadCompare,"ax",%progbits
 473              		.align	2
 474              		.global	PWM_2_ReadCompare
 475              		.code	16
 476              		.thumb_func
 477              		.type	PWM_2_ReadCompare, %function
 478              	PWM_2_ReadCompare:
 479              	.LFB12:
 794:.\Generated_Source\PSoC4/PWM_2.c **** 
 795:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (!PWM_2_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_2.c **** 
 797:.\Generated_Source\PSoC4/PWM_2.c **** 
 798:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_2.c **** 
 800:.\Generated_Source\PSoC4/PWM_2.c **** 
 801:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_2.c ****     *
 805:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_2.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_2.c ****     *
 809:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_2.c ****     *
 812:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_2.c ****     *
 815:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_2.c ****     {
 480              		.loc 1 817 0
 481              		.cfi_startproc
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_2.c ****             return ((uint8)CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_2.c ****             return (CY_GET_REG8(PWM_2_COMPARE1_LSB_PTR));
 488              		.loc 1 821 0
 489 0004 024B     		ldr	r3, .L39
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 24


 490 0006 1B78     		ldrb	r3, [r3]
 491 0008 DBB2     		uxtb	r3, r3
 822:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_2.c ****     }
 492              		.loc 1 823 0
 493 000a 181C     		mov	r0, r3
 494 000c BD46     		mov	sp, r7
 495              		@ sp needed
 496 000e 80BD     		pop	{r7, pc}
 497              	.L40:
 498              		.align	2
 499              	.L39:
 500 0010 22000F40 		.word	1074724898
 501              		.cfi_endproc
 502              	.LFE12:
 503              		.size	PWM_2_ReadCompare, .-PWM_2_ReadCompare
 504              		.section	.text.PWM_2_ReadPeriod,"ax",%progbits
 505              		.align	2
 506              		.global	PWM_2_ReadPeriod
 507              		.code	16
 508              		.thumb_func
 509              		.type	PWM_2_ReadPeriod, %function
 510              	PWM_2_ReadPeriod:
 511              	.LFB13:
 824:.\Generated_Source\PSoC4/PWM_2.c **** 
 825:.\Generated_Source\PSoC4/PWM_2.c **** #else
 826:.\Generated_Source\PSoC4/PWM_2.c **** 
 827:.\Generated_Source\PSoC4/PWM_2.c **** 
 828:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_2.c ****     *
 832:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_2.c ****     *
 835:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_2.c ****     *
 838:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_2.c ****     *
 841:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_2.c ****     {
 844:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_2.c ****     }
 846:.\Generated_Source\PSoC4/PWM_2.c **** 
 847:.\Generated_Source\PSoC4/PWM_2.c **** 
 848:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_2.c ****     *
 852:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_2.c ****     *
 855:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 25


 857:.\Generated_Source\PSoC4/PWM_2.c ****     *
 858:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_2.c ****     *
 861:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_2.c ****     {
 864:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_2.c ****     }
 866:.\Generated_Source\PSoC4/PWM_2.c **** 
 867:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (PWM_2_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_2.c **** 
 869:.\Generated_Source\PSoC4/PWM_2.c **** 
 870:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_2.c **** *
 874:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_2.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_2.c **** *
 877:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_2.c **** *
 880:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_2.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_2.c **** *
 883:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_2.c **** uint8 PWM_2_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_2.c **** {
 512              		.loc 1 885 0
 513              		.cfi_startproc
 514 0000 80B5     		push	{r7, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_2.c ****         return ((uint8)CY_GET_REG16(PWM_2_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_2.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_PERIOD_LSB_PTR));
 520              		.loc 1 889 0
 521 0004 024B     		ldr	r3, .L43
 522 0006 1B78     		ldrb	r3, [r3]
 523 0008 DBB2     		uxtb	r3, r3
 890:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_2.c **** }
 524              		.loc 1 891 0
 525 000a 181C     		mov	r0, r3
 526 000c BD46     		mov	sp, r7
 527              		@ sp needed
 528 000e 80BD     		pop	{r7, pc}
 529              	.L44:
 530              		.align	2
 531              	.L43:
 532 0010 42000F40 		.word	1074724930
 533              		.cfi_endproc
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 26


 534              	.LFE13:
 535              		.size	PWM_2_ReadPeriod, .-PWM_2_ReadPeriod
 536              		.text
 537              	.Letext0:
 538              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 539              		.section	.debug_info,"",%progbits
 540              	.Ldebug_info0:
 541 0000 20020000 		.4byte	0x220
 542 0004 0400     		.2byte	0x4
 543 0006 00000000 		.4byte	.Ldebug_abbrev0
 544 000a 04       		.byte	0x4
 545 000b 01       		.uleb128 0x1
 546 000c 83000000 		.4byte	.LASF33
 547 0010 01       		.byte	0x1
 548 0011 25000000 		.4byte	.LASF34
 549 0015 D3010000 		.4byte	.LASF35
 550 0019 00000000 		.4byte	.Ldebug_ranges0+0
 551 001d 00000000 		.4byte	0
 552 0021 00000000 		.4byte	.Ldebug_line0
 553 0025 02       		.uleb128 0x2
 554 0026 01       		.byte	0x1
 555 0027 06       		.byte	0x6
 556 0028 99020000 		.4byte	.LASF0
 557 002c 02       		.uleb128 0x2
 558 002d 01       		.byte	0x1
 559 002e 08       		.byte	0x8
 560 002f 0F010000 		.4byte	.LASF1
 561 0033 02       		.uleb128 0x2
 562 0034 02       		.byte	0x2
 563 0035 05       		.byte	0x5
 564 0036 5D020000 		.4byte	.LASF2
 565 003a 02       		.uleb128 0x2
 566 003b 02       		.byte	0x2
 567 003c 07       		.byte	0x7
 568 003d 4D000000 		.4byte	.LASF3
 569 0041 02       		.uleb128 0x2
 570 0042 04       		.byte	0x4
 571 0043 05       		.byte	0x5
 572 0044 74020000 		.4byte	.LASF4
 573 0048 02       		.uleb128 0x2
 574 0049 04       		.byte	0x4
 575 004a 07       		.byte	0x7
 576 004b 22010000 		.4byte	.LASF5
 577 004f 02       		.uleb128 0x2
 578 0050 08       		.byte	0x8
 579 0051 05       		.byte	0x5
 580 0052 00000000 		.4byte	.LASF6
 581 0056 02       		.uleb128 0x2
 582 0057 08       		.byte	0x8
 583 0058 07       		.byte	0x7
 584 0059 9A010000 		.4byte	.LASF7
 585 005d 03       		.uleb128 0x3
 586 005e 04       		.byte	0x4
 587 005f 05       		.byte	0x5
 588 0060 696E7400 		.ascii	"int\000"
 589 0064 02       		.uleb128 0x2
 590 0065 04       		.byte	0x4
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 27


 591 0066 07       		.byte	0x7
 592 0067 7A010000 		.4byte	.LASF8
 593 006b 04       		.uleb128 0x4
 594 006c 34010000 		.4byte	.LASF12
 595 0070 02       		.byte	0x2
 596 0071 C1       		.byte	0xc1
 597 0072 2C000000 		.4byte	0x2c
 598 0076 02       		.uleb128 0x2
 599 0077 04       		.byte	0x4
 600 0078 04       		.byte	0x4
 601 0079 7D000000 		.4byte	.LASF9
 602 007d 02       		.uleb128 0x2
 603 007e 08       		.byte	0x8
 604 007f 04       		.byte	0x4
 605 0080 54010000 		.4byte	.LASF10
 606 0084 02       		.uleb128 0x2
 607 0085 01       		.byte	0x1
 608 0086 08       		.byte	0x8
 609 0087 0E000000 		.4byte	.LASF11
 610 008b 05       		.uleb128 0x5
 611 008c 1D010000 		.4byte	.LASF13
 612 0090 02       		.byte	0x2
 613 0091 6B01     		.2byte	0x16b
 614 0093 97000000 		.4byte	0x97
 615 0097 06       		.uleb128 0x6
 616 0098 6B000000 		.4byte	0x6b
 617 009c 02       		.uleb128 0x2
 618 009d 04       		.byte	0x4
 619 009e 07       		.byte	0x7
 620 009f CA010000 		.4byte	.LASF14
 621 00a3 07       		.uleb128 0x7
 622 00a4 5B010000 		.4byte	.LASF15
 623 00a8 01       		.byte	0x1
 624 00a9 37       		.byte	0x37
 625 00aa 00000000 		.4byte	.LFB0
 626 00ae 24000000 		.4byte	.LFE0-.LFB0
 627 00b2 01       		.uleb128 0x1
 628 00b3 9C       		.byte	0x9c
 629 00b4 08       		.uleb128 0x8
 630 00b5 8E020000 		.4byte	.LASF18
 631 00b9 01       		.byte	0x1
 632 00ba 54       		.byte	0x54
 633 00bb 00000000 		.4byte	.LFB1
 634 00bf 60000000 		.4byte	.LFE1-.LFB1
 635 00c3 01       		.uleb128 0x1
 636 00c4 9C       		.byte	0x9c
 637 00c5 D8000000 		.4byte	0xd8
 638 00c9 09       		.uleb128 0x9
 639 00ca 31020000 		.4byte	.LASF36
 640 00ce 01       		.byte	0x1
 641 00cf 5D       		.byte	0x5d
 642 00d0 6B000000 		.4byte	0x6b
 643 00d4 02       		.uleb128 0x2
 644 00d5 91       		.byte	0x91
 645 00d6 6F       		.sleb128 -17
 646 00d7 00       		.byte	0
 647 00d8 0A       		.uleb128 0xa
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 28


 648 00d9 67020000 		.4byte	.LASF16
 649 00dd 01       		.byte	0x1
 650 00de C7       		.byte	0xc7
 651 00df 00000000 		.4byte	.LFB2
 652 00e3 08000000 		.4byte	.LFE2-.LFB2
 653 00e7 01       		.uleb128 0x1
 654 00e8 9C       		.byte	0x9c
 655 00e9 0A       		.uleb128 0xa
 656 00ea 60000000 		.4byte	.LASF17
 657 00ee 01       		.byte	0x1
 658 00ef E9       		.byte	0xe9
 659 00f0 00000000 		.4byte	.LFB3
 660 00f4 08000000 		.4byte	.LFE3-.LFB3
 661 00f8 01       		.uleb128 0x1
 662 00f9 9C       		.byte	0x9c
 663 00fa 0B       		.uleb128 0xb
 664 00fb 87010000 		.4byte	.LASF19
 665 00ff 01       		.byte	0x1
 666 0100 9301     		.2byte	0x193
 667 0102 00000000 		.4byte	.LFB4
 668 0106 20000000 		.4byte	.LFE4-.LFB4
 669 010a 01       		.uleb128 0x1
 670 010b 9C       		.byte	0x9c
 671 010c 20010000 		.4byte	0x120
 672 0110 0C       		.uleb128 0xc
 673 0111 4C010000 		.4byte	.LASF22
 674 0115 01       		.byte	0x1
 675 0116 9301     		.2byte	0x193
 676 0118 6B000000 		.4byte	0x6b
 677 011c 02       		.uleb128 0x2
 678 011d 91       		.byte	0x91
 679 011e 77       		.sleb128 -9
 680 011f 00       		.byte	0
 681 0120 0D       		.uleb128 0xd
 682 0121 3A010000 		.4byte	.LASF28
 683 0125 01       		.byte	0x1
 684 0126 A901     		.2byte	0x1a9
 685 0128 6B000000 		.4byte	0x6b
 686 012c 00000000 		.4byte	.LFB5
 687 0130 1C000000 		.4byte	.LFE5-.LFB5
 688 0134 01       		.uleb128 0x1
 689 0135 9C       		.byte	0x9c
 690 0136 0E       		.uleb128 0xe
 691 0137 FF000000 		.4byte	.LASF20
 692 013b 01       		.byte	0x1
 693 013c C501     		.2byte	0x1c5
 694 013e 00000000 		.4byte	.LFB6
 695 0142 1C000000 		.4byte	.LFE6-.LFB6
 696 0146 01       		.uleb128 0x1
 697 0147 9C       		.byte	0x9c
 698 0148 0B       		.uleb128 0xb
 699 0149 11020000 		.4byte	.LASF21
 700 014d 01       		.byte	0x1
 701 014e E201     		.2byte	0x1e2
 702 0150 00000000 		.4byte	.LFB7
 703 0154 20000000 		.4byte	.LFE7-.LFB7
 704 0158 01       		.uleb128 0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 29


 705 0159 9C       		.byte	0x9c
 706 015a 6E010000 		.4byte	0x16e
 707 015e 0C       		.uleb128 0xc
 708 015f 46000000 		.4byte	.LASF23
 709 0163 01       		.byte	0x1
 710 0164 E201     		.2byte	0x1e2
 711 0166 6B000000 		.4byte	0x6b
 712 016a 02       		.uleb128 0x2
 713 016b 91       		.byte	0x91
 714 016c 77       		.sleb128 -9
 715 016d 00       		.byte	0
 716 016e 0B       		.uleb128 0xb
 717 016f 67010000 		.4byte	.LASF24
 718 0173 01       		.byte	0x1
 719 0174 0402     		.2byte	0x204
 720 0176 00000000 		.4byte	.LFB8
 721 017a 20000000 		.4byte	.LFE8-.LFB8
 722 017e 01       		.uleb128 0x1
 723 017f 9C       		.byte	0x9c
 724 0180 94010000 		.4byte	0x194
 725 0184 0C       		.uleb128 0xc
 726 0185 A5020000 		.4byte	.LASF25
 727 0189 01       		.byte	0x1
 728 018a 0402     		.2byte	0x204
 729 018c 6B000000 		.4byte	0x6b
 730 0190 02       		.uleb128 0x2
 731 0191 91       		.byte	0x91
 732 0192 77       		.sleb128 -9
 733 0193 00       		.byte	0
 734 0194 0B       		.uleb128 0xb
 735 0195 46020000 		.4byte	.LASF26
 736 0199 01       		.byte	0x1
 737 019a AC02     		.2byte	0x2ac
 738 019c 00000000 		.4byte	.LFB9
 739 01a0 20000000 		.4byte	.LFE9-.LFB9
 740 01a4 01       		.uleb128 0x1
 741 01a5 9C       		.byte	0x9c
 742 01a6 BA010000 		.4byte	0x1ba
 743 01aa 0C       		.uleb128 0xc
 744 01ab 23020000 		.4byte	.LASF27
 745 01af 01       		.byte	0x1
 746 01b0 AC02     		.2byte	0x2ac
 747 01b2 6B000000 		.4byte	0x6b
 748 01b6 02       		.uleb128 0x2
 749 01b7 91       		.byte	0x91
 750 01b8 77       		.sleb128 -9
 751 01b9 00       		.byte	0
 752 01ba 0D       		.uleb128 0xd
 753 01bb B1010000 		.4byte	.LASF29
 754 01bf 01       		.byte	0x1
 755 01c0 C702     		.2byte	0x2c7
 756 01c2 6B000000 		.4byte	0x6b
 757 01c6 00000000 		.4byte	.LFB10
 758 01ca 14000000 		.4byte	.LFE10-.LFB10
 759 01ce 01       		.uleb128 0x1
 760 01cf 9C       		.byte	0x9c
 761 01d0 0D       		.uleb128 0xd
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 30


 762 01d1 6B000000 		.4byte	.LASF30
 763 01d5 01       		.byte	0x1
 764 01d6 1603     		.2byte	0x316
 765 01d8 6B000000 		.4byte	0x6b
 766 01dc 00000000 		.4byte	.LFB11
 767 01e0 14000000 		.4byte	.LFE11-.LFB11
 768 01e4 01       		.uleb128 0x1
 769 01e5 9C       		.byte	0x9c
 770 01e6 0D       		.uleb128 0xd
 771 01e7 13000000 		.4byte	.LASF31
 772 01eb 01       		.byte	0x1
 773 01ec 3003     		.2byte	0x330
 774 01ee 6B000000 		.4byte	0x6b
 775 01f2 00000000 		.4byte	.LFB12
 776 01f6 14000000 		.4byte	.LFE12-.LFB12
 777 01fa 01       		.uleb128 0x1
 778 01fb 9C       		.byte	0x9c
 779 01fc 0D       		.uleb128 0xd
 780 01fd 7D020000 		.4byte	.LASF32
 781 0201 01       		.byte	0x1
 782 0202 7403     		.2byte	0x374
 783 0204 6B000000 		.4byte	0x6b
 784 0208 00000000 		.4byte	.LFB13
 785 020c 14000000 		.4byte	.LFE13-.LFB13
 786 0210 01       		.uleb128 0x1
 787 0211 9C       		.byte	0x9c
 788 0212 0F       		.uleb128 0xf
 789 0213 AD020000 		.4byte	.LASF37
 790 0217 01       		.byte	0x1
 791 0218 20       		.byte	0x20
 792 0219 6B000000 		.4byte	0x6b
 793 021d 05       		.uleb128 0x5
 794 021e 03       		.byte	0x3
 795 021f 00000000 		.4byte	PWM_2_initVar
 796 0223 00       		.byte	0
 797              		.section	.debug_abbrev,"",%progbits
 798              	.Ldebug_abbrev0:
 799 0000 01       		.uleb128 0x1
 800 0001 11       		.uleb128 0x11
 801 0002 01       		.byte	0x1
 802 0003 25       		.uleb128 0x25
 803 0004 0E       		.uleb128 0xe
 804 0005 13       		.uleb128 0x13
 805 0006 0B       		.uleb128 0xb
 806 0007 03       		.uleb128 0x3
 807 0008 0E       		.uleb128 0xe
 808 0009 1B       		.uleb128 0x1b
 809 000a 0E       		.uleb128 0xe
 810 000b 55       		.uleb128 0x55
 811 000c 17       		.uleb128 0x17
 812 000d 11       		.uleb128 0x11
 813 000e 01       		.uleb128 0x1
 814 000f 10       		.uleb128 0x10
 815 0010 17       		.uleb128 0x17
 816 0011 00       		.byte	0
 817 0012 00       		.byte	0
 818 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 31


 819 0014 24       		.uleb128 0x24
 820 0015 00       		.byte	0
 821 0016 0B       		.uleb128 0xb
 822 0017 0B       		.uleb128 0xb
 823 0018 3E       		.uleb128 0x3e
 824 0019 0B       		.uleb128 0xb
 825 001a 03       		.uleb128 0x3
 826 001b 0E       		.uleb128 0xe
 827 001c 00       		.byte	0
 828 001d 00       		.byte	0
 829 001e 03       		.uleb128 0x3
 830 001f 24       		.uleb128 0x24
 831 0020 00       		.byte	0
 832 0021 0B       		.uleb128 0xb
 833 0022 0B       		.uleb128 0xb
 834 0023 3E       		.uleb128 0x3e
 835 0024 0B       		.uleb128 0xb
 836 0025 03       		.uleb128 0x3
 837 0026 08       		.uleb128 0x8
 838 0027 00       		.byte	0
 839 0028 00       		.byte	0
 840 0029 04       		.uleb128 0x4
 841 002a 16       		.uleb128 0x16
 842 002b 00       		.byte	0
 843 002c 03       		.uleb128 0x3
 844 002d 0E       		.uleb128 0xe
 845 002e 3A       		.uleb128 0x3a
 846 002f 0B       		.uleb128 0xb
 847 0030 3B       		.uleb128 0x3b
 848 0031 0B       		.uleb128 0xb
 849 0032 49       		.uleb128 0x49
 850 0033 13       		.uleb128 0x13
 851 0034 00       		.byte	0
 852 0035 00       		.byte	0
 853 0036 05       		.uleb128 0x5
 854 0037 16       		.uleb128 0x16
 855 0038 00       		.byte	0
 856 0039 03       		.uleb128 0x3
 857 003a 0E       		.uleb128 0xe
 858 003b 3A       		.uleb128 0x3a
 859 003c 0B       		.uleb128 0xb
 860 003d 3B       		.uleb128 0x3b
 861 003e 05       		.uleb128 0x5
 862 003f 49       		.uleb128 0x49
 863 0040 13       		.uleb128 0x13
 864 0041 00       		.byte	0
 865 0042 00       		.byte	0
 866 0043 06       		.uleb128 0x6
 867 0044 35       		.uleb128 0x35
 868 0045 00       		.byte	0
 869 0046 49       		.uleb128 0x49
 870 0047 13       		.uleb128 0x13
 871 0048 00       		.byte	0
 872 0049 00       		.byte	0
 873 004a 07       		.uleb128 0x7
 874 004b 2E       		.uleb128 0x2e
 875 004c 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 32


 876 004d 3F       		.uleb128 0x3f
 877 004e 19       		.uleb128 0x19
 878 004f 03       		.uleb128 0x3
 879 0050 0E       		.uleb128 0xe
 880 0051 3A       		.uleb128 0x3a
 881 0052 0B       		.uleb128 0xb
 882 0053 3B       		.uleb128 0x3b
 883 0054 0B       		.uleb128 0xb
 884 0055 27       		.uleb128 0x27
 885 0056 19       		.uleb128 0x19
 886 0057 11       		.uleb128 0x11
 887 0058 01       		.uleb128 0x1
 888 0059 12       		.uleb128 0x12
 889 005a 06       		.uleb128 0x6
 890 005b 40       		.uleb128 0x40
 891 005c 18       		.uleb128 0x18
 892 005d 9642     		.uleb128 0x2116
 893 005f 19       		.uleb128 0x19
 894 0060 00       		.byte	0
 895 0061 00       		.byte	0
 896 0062 08       		.uleb128 0x8
 897 0063 2E       		.uleb128 0x2e
 898 0064 01       		.byte	0x1
 899 0065 3F       		.uleb128 0x3f
 900 0066 19       		.uleb128 0x19
 901 0067 03       		.uleb128 0x3
 902 0068 0E       		.uleb128 0xe
 903 0069 3A       		.uleb128 0x3a
 904 006a 0B       		.uleb128 0xb
 905 006b 3B       		.uleb128 0x3b
 906 006c 0B       		.uleb128 0xb
 907 006d 27       		.uleb128 0x27
 908 006e 19       		.uleb128 0x19
 909 006f 11       		.uleb128 0x11
 910 0070 01       		.uleb128 0x1
 911 0071 12       		.uleb128 0x12
 912 0072 06       		.uleb128 0x6
 913 0073 40       		.uleb128 0x40
 914 0074 18       		.uleb128 0x18
 915 0075 9642     		.uleb128 0x2116
 916 0077 19       		.uleb128 0x19
 917 0078 01       		.uleb128 0x1
 918 0079 13       		.uleb128 0x13
 919 007a 00       		.byte	0
 920 007b 00       		.byte	0
 921 007c 09       		.uleb128 0x9
 922 007d 34       		.uleb128 0x34
 923 007e 00       		.byte	0
 924 007f 03       		.uleb128 0x3
 925 0080 0E       		.uleb128 0xe
 926 0081 3A       		.uleb128 0x3a
 927 0082 0B       		.uleb128 0xb
 928 0083 3B       		.uleb128 0x3b
 929 0084 0B       		.uleb128 0xb
 930 0085 49       		.uleb128 0x49
 931 0086 13       		.uleb128 0x13
 932 0087 02       		.uleb128 0x2
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 33


 933 0088 18       		.uleb128 0x18
 934 0089 00       		.byte	0
 935 008a 00       		.byte	0
 936 008b 0A       		.uleb128 0xa
 937 008c 2E       		.uleb128 0x2e
 938 008d 00       		.byte	0
 939 008e 3F       		.uleb128 0x3f
 940 008f 19       		.uleb128 0x19
 941 0090 03       		.uleb128 0x3
 942 0091 0E       		.uleb128 0xe
 943 0092 3A       		.uleb128 0x3a
 944 0093 0B       		.uleb128 0xb
 945 0094 3B       		.uleb128 0x3b
 946 0095 0B       		.uleb128 0xb
 947 0096 27       		.uleb128 0x27
 948 0097 19       		.uleb128 0x19
 949 0098 11       		.uleb128 0x11
 950 0099 01       		.uleb128 0x1
 951 009a 12       		.uleb128 0x12
 952 009b 06       		.uleb128 0x6
 953 009c 40       		.uleb128 0x40
 954 009d 18       		.uleb128 0x18
 955 009e 9742     		.uleb128 0x2117
 956 00a0 19       		.uleb128 0x19
 957 00a1 00       		.byte	0
 958 00a2 00       		.byte	0
 959 00a3 0B       		.uleb128 0xb
 960 00a4 2E       		.uleb128 0x2e
 961 00a5 01       		.byte	0x1
 962 00a6 3F       		.uleb128 0x3f
 963 00a7 19       		.uleb128 0x19
 964 00a8 03       		.uleb128 0x3
 965 00a9 0E       		.uleb128 0xe
 966 00aa 3A       		.uleb128 0x3a
 967 00ab 0B       		.uleb128 0xb
 968 00ac 3B       		.uleb128 0x3b
 969 00ad 05       		.uleb128 0x5
 970 00ae 27       		.uleb128 0x27
 971 00af 19       		.uleb128 0x19
 972 00b0 11       		.uleb128 0x11
 973 00b1 01       		.uleb128 0x1
 974 00b2 12       		.uleb128 0x12
 975 00b3 06       		.uleb128 0x6
 976 00b4 40       		.uleb128 0x40
 977 00b5 18       		.uleb128 0x18
 978 00b6 9742     		.uleb128 0x2117
 979 00b8 19       		.uleb128 0x19
 980 00b9 01       		.uleb128 0x1
 981 00ba 13       		.uleb128 0x13
 982 00bb 00       		.byte	0
 983 00bc 00       		.byte	0
 984 00bd 0C       		.uleb128 0xc
 985 00be 05       		.uleb128 0x5
 986 00bf 00       		.byte	0
 987 00c0 03       		.uleb128 0x3
 988 00c1 0E       		.uleb128 0xe
 989 00c2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 34


 990 00c3 0B       		.uleb128 0xb
 991 00c4 3B       		.uleb128 0x3b
 992 00c5 05       		.uleb128 0x5
 993 00c6 49       		.uleb128 0x49
 994 00c7 13       		.uleb128 0x13
 995 00c8 02       		.uleb128 0x2
 996 00c9 18       		.uleb128 0x18
 997 00ca 00       		.byte	0
 998 00cb 00       		.byte	0
 999 00cc 0D       		.uleb128 0xd
 1000 00cd 2E       		.uleb128 0x2e
 1001 00ce 00       		.byte	0
 1002 00cf 3F       		.uleb128 0x3f
 1003 00d0 19       		.uleb128 0x19
 1004 00d1 03       		.uleb128 0x3
 1005 00d2 0E       		.uleb128 0xe
 1006 00d3 3A       		.uleb128 0x3a
 1007 00d4 0B       		.uleb128 0xb
 1008 00d5 3B       		.uleb128 0x3b
 1009 00d6 05       		.uleb128 0x5
 1010 00d7 27       		.uleb128 0x27
 1011 00d8 19       		.uleb128 0x19
 1012 00d9 49       		.uleb128 0x49
 1013 00da 13       		.uleb128 0x13
 1014 00db 11       		.uleb128 0x11
 1015 00dc 01       		.uleb128 0x1
 1016 00dd 12       		.uleb128 0x12
 1017 00de 06       		.uleb128 0x6
 1018 00df 40       		.uleb128 0x40
 1019 00e0 18       		.uleb128 0x18
 1020 00e1 9742     		.uleb128 0x2117
 1021 00e3 19       		.uleb128 0x19
 1022 00e4 00       		.byte	0
 1023 00e5 00       		.byte	0
 1024 00e6 0E       		.uleb128 0xe
 1025 00e7 2E       		.uleb128 0x2e
 1026 00e8 00       		.byte	0
 1027 00e9 3F       		.uleb128 0x3f
 1028 00ea 19       		.uleb128 0x19
 1029 00eb 03       		.uleb128 0x3
 1030 00ec 0E       		.uleb128 0xe
 1031 00ed 3A       		.uleb128 0x3a
 1032 00ee 0B       		.uleb128 0xb
 1033 00ef 3B       		.uleb128 0x3b
 1034 00f0 05       		.uleb128 0x5
 1035 00f1 27       		.uleb128 0x27
 1036 00f2 19       		.uleb128 0x19
 1037 00f3 11       		.uleb128 0x11
 1038 00f4 01       		.uleb128 0x1
 1039 00f5 12       		.uleb128 0x12
 1040 00f6 06       		.uleb128 0x6
 1041 00f7 40       		.uleb128 0x40
 1042 00f8 18       		.uleb128 0x18
 1043 00f9 9642     		.uleb128 0x2116
 1044 00fb 19       		.uleb128 0x19
 1045 00fc 00       		.byte	0
 1046 00fd 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 35


 1047 00fe 0F       		.uleb128 0xf
 1048 00ff 34       		.uleb128 0x34
 1049 0100 00       		.byte	0
 1050 0101 03       		.uleb128 0x3
 1051 0102 0E       		.uleb128 0xe
 1052 0103 3A       		.uleb128 0x3a
 1053 0104 0B       		.uleb128 0xb
 1054 0105 3B       		.uleb128 0x3b
 1055 0106 0B       		.uleb128 0xb
 1056 0107 49       		.uleb128 0x49
 1057 0108 13       		.uleb128 0x13
 1058 0109 3F       		.uleb128 0x3f
 1059 010a 19       		.uleb128 0x19
 1060 010b 02       		.uleb128 0x2
 1061 010c 18       		.uleb128 0x18
 1062 010d 00       		.byte	0
 1063 010e 00       		.byte	0
 1064 010f 00       		.byte	0
 1065              		.section	.debug_aranges,"",%progbits
 1066 0000 84000000 		.4byte	0x84
 1067 0004 0200     		.2byte	0x2
 1068 0006 00000000 		.4byte	.Ldebug_info0
 1069 000a 04       		.byte	0x4
 1070 000b 00       		.byte	0
 1071 000c 0000     		.2byte	0
 1072 000e 0000     		.2byte	0
 1073 0010 00000000 		.4byte	.LFB0
 1074 0014 24000000 		.4byte	.LFE0-.LFB0
 1075 0018 00000000 		.4byte	.LFB1
 1076 001c 60000000 		.4byte	.LFE1-.LFB1
 1077 0020 00000000 		.4byte	.LFB2
 1078 0024 08000000 		.4byte	.LFE2-.LFB2
 1079 0028 00000000 		.4byte	.LFB3
 1080 002c 08000000 		.4byte	.LFE3-.LFB3
 1081 0030 00000000 		.4byte	.LFB4
 1082 0034 20000000 		.4byte	.LFE4-.LFB4
 1083 0038 00000000 		.4byte	.LFB5
 1084 003c 1C000000 		.4byte	.LFE5-.LFB5
 1085 0040 00000000 		.4byte	.LFB6
 1086 0044 1C000000 		.4byte	.LFE6-.LFB6
 1087 0048 00000000 		.4byte	.LFB7
 1088 004c 20000000 		.4byte	.LFE7-.LFB7
 1089 0050 00000000 		.4byte	.LFB8
 1090 0054 20000000 		.4byte	.LFE8-.LFB8
 1091 0058 00000000 		.4byte	.LFB9
 1092 005c 20000000 		.4byte	.LFE9-.LFB9
 1093 0060 00000000 		.4byte	.LFB10
 1094 0064 14000000 		.4byte	.LFE10-.LFB10
 1095 0068 00000000 		.4byte	.LFB11
 1096 006c 14000000 		.4byte	.LFE11-.LFB11
 1097 0070 00000000 		.4byte	.LFB12
 1098 0074 14000000 		.4byte	.LFE12-.LFB12
 1099 0078 00000000 		.4byte	.LFB13
 1100 007c 14000000 		.4byte	.LFE13-.LFB13
 1101 0080 00000000 		.4byte	0
 1102 0084 00000000 		.4byte	0
 1103              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 36


 1104              	.Ldebug_ranges0:
 1105 0000 00000000 		.4byte	.LFB0
 1106 0004 24000000 		.4byte	.LFE0
 1107 0008 00000000 		.4byte	.LFB1
 1108 000c 60000000 		.4byte	.LFE1
 1109 0010 00000000 		.4byte	.LFB2
 1110 0014 08000000 		.4byte	.LFE2
 1111 0018 00000000 		.4byte	.LFB3
 1112 001c 08000000 		.4byte	.LFE3
 1113 0020 00000000 		.4byte	.LFB4
 1114 0024 20000000 		.4byte	.LFE4
 1115 0028 00000000 		.4byte	.LFB5
 1116 002c 1C000000 		.4byte	.LFE5
 1117 0030 00000000 		.4byte	.LFB6
 1118 0034 1C000000 		.4byte	.LFE6
 1119 0038 00000000 		.4byte	.LFB7
 1120 003c 20000000 		.4byte	.LFE7
 1121 0040 00000000 		.4byte	.LFB8
 1122 0044 20000000 		.4byte	.LFE8
 1123 0048 00000000 		.4byte	.LFB9
 1124 004c 20000000 		.4byte	.LFE9
 1125 0050 00000000 		.4byte	.LFB10
 1126 0054 14000000 		.4byte	.LFE10
 1127 0058 00000000 		.4byte	.LFB11
 1128 005c 14000000 		.4byte	.LFE11
 1129 0060 00000000 		.4byte	.LFB12
 1130 0064 14000000 		.4byte	.LFE12
 1131 0068 00000000 		.4byte	.LFB13
 1132 006c 14000000 		.4byte	.LFE13
 1133 0070 00000000 		.4byte	0
 1134 0074 00000000 		.4byte	0
 1135              		.section	.debug_line,"",%progbits
 1136              	.Ldebug_line0:
 1137 0000 61010000 		.section	.debug_str,"MS",%progbits,1
 1137      02004400 
 1137      00000201 
 1137      FB0E0D00 
 1137      01010101 
 1138              	.LASF6:
 1139 0000 6C6F6E67 		.ascii	"long long int\000"
 1139      206C6F6E 
 1139      6720696E 
 1139      7400
 1140              	.LASF11:
 1141 000e 63686172 		.ascii	"char\000"
 1141      00
 1142              	.LASF31:
 1143 0013 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 1143      325F5265 
 1143      6164436F 
 1143      6D706172 
 1143      6500
 1144              	.LASF34:
 1145 0025 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_2.c\000"
 1145      6E657261 
 1145      7465645F 
 1145      536F7572 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 37


 1145      63655C50 
 1146              	.LASF23:
 1147 0046 70657269 		.ascii	"period\000"
 1147      6F6400
 1148              	.LASF3:
 1149 004d 73686F72 		.ascii	"short unsigned int\000"
 1149      7420756E 
 1149      7369676E 
 1149      65642069 
 1149      6E7400
 1150              	.LASF17:
 1151 0060 50574D5F 		.ascii	"PWM_2_Stop\000"
 1151      325F5374 
 1151      6F7000
 1152              	.LASF30:
 1153 006b 50574D5F 		.ascii	"PWM_2_ReadCapture\000"
 1153      325F5265 
 1153      61644361 
 1153      70747572 
 1153      6500
 1154              	.LASF9:
 1155 007d 666C6F61 		.ascii	"float\000"
 1155      7400
 1156              	.LASF33:
 1157 0083 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1157      4320342E 
 1157      382E3420 
 1157      32303134 
 1157      30353236 
 1158 00b6 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1158      20726576 
 1158      6973696F 
 1158      6E203231 
 1158      31333538 
 1159 00e9 30202D66 		.ascii	"0 -ffunction-sections\000"
 1159      66756E63 
 1159      74696F6E 
 1159      2D736563 
 1159      74696F6E 
 1160              	.LASF20:
 1161 00ff 50574D5F 		.ascii	"PWM_2_ClearFIFO\000"
 1161      325F436C 
 1161      65617246 
 1161      49464F00 
 1162              	.LASF1:
 1163 010f 756E7369 		.ascii	"unsigned char\000"
 1163      676E6564 
 1163      20636861 
 1163      7200
 1164              	.LASF13:
 1165 011d 72656738 		.ascii	"reg8\000"
 1165      00
 1166              	.LASF5:
 1167 0122 6C6F6E67 		.ascii	"long unsigned int\000"
 1167      20756E73 
 1167      69676E65 
 1167      6420696E 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 38


 1167      7400
 1168              	.LASF12:
 1169 0134 75696E74 		.ascii	"uint8\000"
 1169      3800
 1170              	.LASF28:
 1171 013a 50574D5F 		.ascii	"PWM_2_ReadCounter\000"
 1171      325F5265 
 1171      6164436F 
 1171      756E7465 
 1171      7200
 1172              	.LASF22:
 1173 014c 636F756E 		.ascii	"counter\000"
 1173      74657200 
 1174              	.LASF10:
 1175 0154 646F7562 		.ascii	"double\000"
 1175      6C6500
 1176              	.LASF15:
 1177 015b 50574D5F 		.ascii	"PWM_2_Start\000"
 1177      325F5374 
 1177      61727400 
 1178              	.LASF24:
 1179 0167 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
 1179      325F5772 
 1179      69746543 
 1179      6F6D7061 
 1179      726500
 1180              	.LASF8:
 1181 017a 756E7369 		.ascii	"unsigned int\000"
 1181      676E6564 
 1181      20696E74 
 1181      00
 1182              	.LASF19:
 1183 0187 50574D5F 		.ascii	"PWM_2_WriteCounter\000"
 1183      325F5772 
 1183      69746543 
 1183      6F756E74 
 1183      657200
 1184              	.LASF7:
 1185 019a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1185      206C6F6E 
 1185      6720756E 
 1185      7369676E 
 1185      65642069 
 1186              	.LASF29:
 1187 01b1 50574D5F 		.ascii	"PWM_2_ReadStatusRegister\000"
 1187      325F5265 
 1187      61645374 
 1187      61747573 
 1187      52656769 
 1188              	.LASF14:
 1189 01ca 73697A65 		.ascii	"sizetype\000"
 1189      74797065 
 1189      00
 1190              	.LASF35:
 1191 01d3 443A5C70 		.ascii	"D:\\patternagents\\PSoC_Workshop\\projects\\LAB_TWO"
 1191      61747465 
 1191      726E6167 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 39


 1191      656E7473 
 1191      5C50536F 
 1192 0202 5C4C4142 		.ascii	"\\LAB_TWO.cydsn\000"
 1192      5F54574F 
 1192      2E637964 
 1192      736E00
 1193              	.LASF21:
 1194 0211 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 1194      325F5772 
 1194      69746550 
 1194      6572696F 
 1194      6400
 1195              	.LASF27:
 1196 0223 696E7465 		.ascii	"interruptMode\000"
 1196      72727570 
 1196      744D6F64 
 1196      6500
 1197              	.LASF36:
 1198 0231 50574D5F 		.ascii	"PWM_2_interruptState\000"
 1198      325F696E 
 1198      74657272 
 1198      75707453 
 1198      74617465 
 1199              	.LASF26:
 1200 0246 50574D5F 		.ascii	"PWM_2_SetInterruptMode\000"
 1200      325F5365 
 1200      74496E74 
 1200      65727275 
 1200      70744D6F 
 1201              	.LASF2:
 1202 025d 73686F72 		.ascii	"short int\000"
 1202      7420696E 
 1202      7400
 1203              	.LASF16:
 1204 0267 50574D5F 		.ascii	"PWM_2_Enable\000"
 1204      325F456E 
 1204      61626C65 
 1204      00
 1205              	.LASF4:
 1206 0274 6C6F6E67 		.ascii	"long int\000"
 1206      20696E74 
 1206      00
 1207              	.LASF32:
 1208 027d 50574D5F 		.ascii	"PWM_2_ReadPeriod\000"
 1208      325F5265 
 1208      61645065 
 1208      72696F64 
 1208      00
 1209              	.LASF18:
 1210 028e 50574D5F 		.ascii	"PWM_2_Init\000"
 1210      325F496E 
 1210      697400
 1211              	.LASF0:
 1212 0299 7369676E 		.ascii	"signed char\000"
 1212      65642063 
 1212      68617200 
 1213              	.LASF25:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccY5TNE7.s 			page 40


 1214 02a5 636F6D70 		.ascii	"compare\000"
 1214      61726500 
 1215              	.LASF37:
 1216 02ad 50574D5F 		.ascii	"PWM_2_initVar\000"
 1216      325F696E 
 1216      69745661 
 1216      7200
 1217              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
