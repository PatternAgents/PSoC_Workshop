ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	1
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.10
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the clocking, interrupts, and watchdog timer.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/CyLib.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/CyLib.c **** *
  12:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2 && CY_IP_FMLT)
  22:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  24:.\Generated_Source\PSoC4/CyLib.c **** 
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void);
  38:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  39:.\Generated_Source\PSoC4/CyLib.c **** 
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  42:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  43:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  44:.\Generated_Source\PSoC4/CyLib.c **** *
  45:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  46:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  47:.\Generated_Source\PSoC4/CyLib.c **** *
  48:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  49:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  51:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  52:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  53:.\Generated_Source\PSoC4/CyLib.c **** 
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  56:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  57:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  58:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  70:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  71:.\Generated_Source\PSoC4/CyLib.c **** 
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  74:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  75:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  76:.\Generated_Source\PSoC4/CyLib.c **** *
  77:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  78:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  79:.\Generated_Source\PSoC4/CyLib.c **** *
  80:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  81:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
  82:.\Generated_Source\PSoC4/CyLib.c **** *
  83:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
  84:.\Generated_Source\PSoC4/CyLib.c **** *  None
  85:.\Generated_Source\PSoC4/CyLib.c **** *
  86:.\Generated_Source\PSoC4/CyLib.c **** * Return:
  87:.\Generated_Source\PSoC4/CyLib.c **** *  None
  88:.\Generated_Source\PSoC4/CyLib.c **** *
  89:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  91:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 91 0
  27              		.cfi_startproc
  92:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 92 0
  29 0000 034B     		ldr	r3, .L2
  30 0002 8022     		mov	r2, #128
  31 0004 1968     		ldr	r1, [r3]
  32 0006 1206     		lsl	r2, r2, #24
  33 0008 0A43     		orr	r2, r1
  34 000a 1A60     		str	r2, [r3]
  93:.\Generated_Source\PSoC4/CyLib.c **** 
  94:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  95:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
  96:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
  97:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
  98:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  99:.\Generated_Source\PSoC4/CyLib.c **** 
 100:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 100 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	1
  47              		.global	CySysClkImoStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
  51              	CySysClkImoStop:
  52              	.LFB1:
 101:.\Generated_Source\PSoC4/CyLib.c **** 
 102:.\Generated_Source\PSoC4/CyLib.c **** 
 103:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 105:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices , this function will also disable WCO lock
 111:.\Generated_Source\PSoC4/CyLib.c **** *  if already enabled.
 112:.\Generated_Source\PSoC4/CyLib.c **** *
 113:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 114:.\Generated_Source\PSoC4/CyLib.c **** *  None
 115:.\Generated_Source\PSoC4/CyLib.c **** *
 116:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 117:.\Generated_Source\PSoC4/CyLib.c **** *  None
 118:.\Generated_Source\PSoC4/CyLib.c **** *
 119:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 4


 120:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 121:.\Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 121 0
  54              		.cfi_startproc
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 123:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 124:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 125:.\Generated_Source\PSoC4/CyLib.c **** 
 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 126 0
  56 0000 024B     		ldr	r3, .L5
 127:.\Generated_Source\PSoC4/CyLib.c **** }
  57              		.loc 1 127 0
  58              		@ sp needed
 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  59              		.loc 1 126 0
  60 0002 1A68     		ldr	r2, [r3]
  61 0004 5200     		lsl	r2, r2, #1
  62 0006 5208     		lsr	r2, r2, #1
  63 0008 1A60     		str	r2, [r3]
  64              		.loc 1 127 0
  65 000a 7047     		bx	lr
  66              	.L6:
  67              		.align	2
  68              	.L5:
  69 000c 08010B40 		.word	1074462984
  70              		.cfi_endproc
  71              	.LFE1:
  72              		.size	CySysClkImoStop, .-CySysClkImoStop
  73              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  74              		.align	1
  75              		.global	CySysClkWriteHfclkDirect
  76              		.code	16
  77              		.thumb_func
  78              		.type	CySysClkWriteHfclkDirect, %function
  79              	CySysClkWriteHfclkDirect:
  80              	.LFB2:
 128:.\Generated_Source\PSoC4/CyLib.c **** 
 129:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 133:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c ****     *
 135:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 137:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 138:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 139:.\Generated_Source\PSoC4/CyLib.c ****     *
 140:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 141:.\Generated_Source\PSoC4/CyLib.c ****     *
 142:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 144:.\Generated_Source\PSoC4/CyLib.c ****     *
 145:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 146:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 147:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 5


 148:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 150:.\Generated_Source\PSoC4/CyLib.c ****     {
 151:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 153:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 154:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 155:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 156:.\Generated_Source\PSoC4/CyLib.c **** 
 157:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 158:.\Generated_Source\PSoC4/CyLib.c ****         {
 159:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 160:.\Generated_Source\PSoC4/CyLib.c **** 
 161:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 163:.\Generated_Source\PSoC4/CyLib.c ****             {
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 165:.\Generated_Source\PSoC4/CyLib.c ****                 {
 166:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 167:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 168:.\Generated_Source\PSoC4/CyLib.c ****                 }
 169:.\Generated_Source\PSoC4/CyLib.c ****             }
 170:.\Generated_Source\PSoC4/CyLib.c **** 
 171:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 172:.\Generated_Source\PSoC4/CyLib.c ****             {
 173:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 174:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_GAIN;
 175:.\Generated_Source\PSoC4/CyLib.c ****             }
 176:.\Generated_Source\PSoC4/CyLib.c **** 
 177:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 178:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 179:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK);
 180:.\Generated_Source\PSoC4/CyLib.c **** 
 181:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 182:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 185:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 187:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 188:.\Generated_Source\PSoC4/CyLib.c **** 
 189:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 190:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 191:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 192:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(320u);
 193:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 196:.\Generated_Source\PSoC4/CyLib.c ****         }
 197:.\Generated_Source\PSoC4/CyLib.c ****     }
 198:.\Generated_Source\PSoC4/CyLib.c **** 
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 201:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 202:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 203:.\Generated_Source\PSoC4/CyLib.c ****     *
 204:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 6


 205:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 206:.\Generated_Source\PSoC4/CyLib.c ****     *
 207:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 208:.\Generated_Source\PSoC4/CyLib.c ****     *
 209:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 210:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 211:.\Generated_Source\PSoC4/CyLib.c ****     *
 212:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 213:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 214:.\Generated_Source\PSoC4/CyLib.c ****     *
 215:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 216:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 217:.\Generated_Source\PSoC4/CyLib.c ****     {
 218:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 219:.\Generated_Source\PSoC4/CyLib.c ****     }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c **** 
 222:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 224:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/CyLib.c ****     *
 226:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 227:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 228:.\Generated_Source\PSoC4/CyLib.c ****     *
 229:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 230:.\Generated_Source\PSoC4/CyLib.c ****     *
 231:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 232:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 233:.\Generated_Source\PSoC4/CyLib.c ****     *
 234:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 236:.\Generated_Source\PSoC4/CyLib.c ****     *
 237:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void)
 239:.\Generated_Source\PSoC4/CyLib.c ****     {
 240:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 241:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 242:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 243:.\Generated_Source\PSoC4/CyLib.c ****     }
 244:.\Generated_Source\PSoC4/CyLib.c **** 
 245:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 246:.\Generated_Source\PSoC4/CyLib.c **** 
 247:.\Generated_Source\PSoC4/CyLib.c **** 
 248:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 250:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CyLib.c **** *
 252:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 253:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 254:.\Generated_Source\PSoC4/CyLib.c **** *
 255:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 256:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 257:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 258:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 259:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 260:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 261:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 7


 262:.\Generated_Source\PSoC4/CyLib.c **** *
 263:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 264:.\Generated_Source\PSoC4/CyLib.c **** *  None
 265:.\Generated_Source\PSoC4/CyLib.c **** *
 266:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 267:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 268:.\Generated_Source\PSoC4/CyLib.c **** *
 269:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 270:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 271:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 272:.\Generated_Source\PSoC4/CyLib.c **** *
 273:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 274:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 275:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 276:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 277:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 278:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 279:.\Generated_Source\PSoC4/CyLib.c **** *
 280:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 282:.\Generated_Source\PSoC4/CyLib.c **** {
  81              		.loc 1 282 0
  82              		.cfi_startproc
  83              	.LVL0:
  84 0000 10B5     		push	{r4, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
  88              		.loc 1 282 0
  89 0002 041C     		mov	r4, r0
 283:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 284:.\Generated_Source\PSoC4/CyLib.c **** 
 285:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  90              		.loc 1 285 0
  91 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  92              	.LVL1:
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
  93              		.loc 1 287 0
  94 0008 054B     		ldr	r3, .L8
 288:.\Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
  95              		.loc 1 288 0
  96 000a 0121     		mov	r1, #1
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
  97              		.loc 1 287 0
  98 000c 1A68     		ldr	r2, [r3]
  99              		.loc 1 288 0
 100 000e 0C40     		and	r4, r1
 101              	.LVL2:
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 102              		.loc 1 287 0
 103 0010 0721     		mov	r1, #7
 104 0012 8A43     		bic	r2, r1
 105 0014 1443     		orr	r4, r2
 106 0016 1C60     		str	r4, [r3]
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 8


 107              		.loc 1 290 0
 108 0018 FFF7FEFF 		bl	CyExitCriticalSection
 109              	.LVL3:
 291:.\Generated_Source\PSoC4/CyLib.c **** }
 110              		.loc 1 291 0
 111              		@ sp needed
 112 001c 10BD     		pop	{r4, pc}
 113              	.L9:
 114 001e C046     		.align	2
 115              	.L8:
 116 0020 00010B40 		.word	1074462976
 117              		.cfi_endproc
 118              	.LFE2:
 119              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 120              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 121              		.align	1
 122              		.global	CySysClkWriteSysclkDiv
 123              		.code	16
 124              		.thumb_func
 125              		.type	CySysClkWriteSysclkDiv, %function
 126              	CySysClkWriteSysclkDiv:
 127              	.LFB3:
 292:.\Generated_Source\PSoC4/CyLib.c **** 
 293:.\Generated_Source\PSoC4/CyLib.c **** 
 294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 296:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 297:.\Generated_Source\PSoC4/CyLib.c **** *
 298:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 299:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 300:.\Generated_Source\PSoC4/CyLib.c **** *
 301:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 302:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 303:.\Generated_Source\PSoC4/CyLib.c **** *
 304:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 305:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 306:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 307:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 308:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 309:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 310:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 311:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 312:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 313:.\Generated_Source\PSoC4/CyLib.c **** *
 314:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 315:.\Generated_Source\PSoC4/CyLib.c **** *  None
 316:.\Generated_Source\PSoC4/CyLib.c **** *
 317:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 318:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 319:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 320:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 321:.\Generated_Source\PSoC4/CyLib.c **** *
 322:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 323:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 324:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 325:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 326:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 9


 327:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 328:.\Generated_Source\PSoC4/CyLib.c **** *
 329:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 331:.\Generated_Source\PSoC4/CyLib.c **** {
 128              		.loc 1 331 0
 129              		.cfi_startproc
 130              	.LVL4:
 131 0000 38B5     		push	{r3, r4, r5, lr}
 132              		.cfi_def_cfa_offset 16
 133              		.cfi_offset 3, -16
 134              		.cfi_offset 4, -12
 135              		.cfi_offset 5, -8
 136              		.cfi_offset 14, -4
 137              		.loc 1 331 0
 138 0002 041C     		mov	r4, r0
 332:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 333:.\Generated_Source\PSoC4/CyLib.c **** 
 334:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 139              		.loc 1 334 0
 140 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 141              	.LVL5:
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 338:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 142              		.loc 1 338 0
 143 0008 064B     		ldr	r3, .L11
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 144              		.loc 1 336 0
 145 000a 0722     		mov	r2, #7
 146              		.loc 1 338 0
 147 000c 1D68     		ldr	r5, [r3]
 148 000e 0649     		ldr	r1, .L11+4
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 149              		.loc 1 336 0
 150 0010 1440     		and	r4, r2
 151              	.LVL6:
 152 0012 E204     		lsl	r2, r4, #19
 153              		.loc 1 338 0
 154 0014 2C1C     		mov	r4, r5
 155 0016 0C40     		and	r4, r1
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 156              		.loc 1 337 0
 157 0018 1443     		orr	r4, r2
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 158              		.loc 1 336 0
 159 001a 1C60     		str	r4, [r3]
 339:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 340:.\Generated_Source\PSoC4/CyLib.c **** 
 341:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 160              		.loc 1 341 0
 161 001c FFF7FEFF 		bl	CyExitCriticalSection
 162              	.LVL7:
 342:.\Generated_Source\PSoC4/CyLib.c **** }
 163              		.loc 1 342 0
 164              		@ sp needed
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 10


 165 0020 38BD     		pop	{r3, r4, r5, pc}
 166              	.L12:
 167 0022 C046     		.align	2
 168              	.L11:
 169 0024 00010B40 		.word	1074462976
 170 0028 FFFFC7FF 		.word	-3670017
 171              		.cfi_endproc
 172              	.LFE3:
 173              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 174              		.section	.text.CySysLvdDisable,"ax",%progbits
 175              		.align	1
 176              		.global	CySysLvdDisable
 177              		.code	16
 178              		.thumb_func
 179              		.type	CySysLvdDisable, %function
 180              	CySysLvdDisable:
 181              	.LFB6:
 343:.\Generated_Source\PSoC4/CyLib.c **** 
 344:.\Generated_Source\PSoC4/CyLib.c **** 
 345:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 347:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c **** *
 349:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 350:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 351:.\Generated_Source\PSoC4/CyLib.c **** *
 352:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 353:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 354:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 355:.\Generated_Source\PSoC4/CyLib.c **** *
 356:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 357:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 358:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 359:.\Generated_Source\PSoC4/CyLib.c **** *
 360:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, if WCO lock feature is enabled then this
 361:.\Generated_Source\PSoC4/CyLib.c **** *  API will disable the lock, write the new IMO frequency and then re-enable the
 362:.\Generated_Source\PSoC4/CyLib.c **** *  lock.
 363:.\Generated_Source\PSoC4/CyLib.c **** *
 364:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 365:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 366:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 367:.\Generated_Source\PSoC4/CyLib.c **** *
 368:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 369:.\Generated_Source\PSoC4/CyLib.c **** *
 370:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 371:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 372:.\Generated_Source\PSoC4/CyLib.c **** *
 373:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 374:.\Generated_Source\PSoC4/CyLib.c **** *  None
 375:.\Generated_Source\PSoC4/CyLib.c **** *
 376:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 377:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 378:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 379:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 380:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 381:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 382:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 11


 383:.\Generated_Source\PSoC4/CyLib.c **** *
 384:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 385:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 386:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 387:.\Generated_Source\PSoC4/CyLib.c **** *
 388:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 390:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 392:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 393:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 394:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 395:.\Generated_Source\PSoC4/CyLib.c ****         #else
 396:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 397:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 398:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 399:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 400:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 401:.\Generated_Source\PSoC4/CyLib.c **** 
 402:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 403:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 404:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 405:.\Generated_Source\PSoC4/CyLib.c **** 
 406:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 407:.\Generated_Source\PSoC4/CyLib.c **** 
 408:.\Generated_Source\PSoC4/CyLib.c **** 
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 412:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 413:.\Generated_Source\PSoC4/CyLib.c ****             {
 414:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 415:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 416:.\Generated_Source\PSoC4/CyLib.c ****             }
 417:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 418:.\Generated_Source\PSoC4/CyLib.c **** 
 419:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 420:.\Generated_Source\PSoC4/CyLib.c **** 
 421:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 422:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 423:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 424:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 425:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 426:.\Generated_Source\PSoC4/CyLib.c **** 
 427:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 428:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 429:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 430:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 431:.\Generated_Source\PSoC4/CyLib.c **** 
 432:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 433:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 434:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 435:.\Generated_Source\PSoC4/CyLib.c **** 
 436:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 437:.\Generated_Source\PSoC4/CyLib.c **** 
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 439:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 12


 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 441:.\Generated_Source\PSoC4/CyLib.c ****             {
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 444:.\Generated_Source\PSoC4/CyLib.c ****             }
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 446:.\Generated_Source\PSoC4/CyLib.c ****             {
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 449:.\Generated_Source\PSoC4/CyLib.c ****             }
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 451:.\Generated_Source\PSoC4/CyLib.c ****             {
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 454:.\Generated_Source\PSoC4/CyLib.c ****             }
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 456:.\Generated_Source\PSoC4/CyLib.c ****             {
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 459:.\Generated_Source\PSoC4/CyLib.c ****             }
 460:.\Generated_Source\PSoC4/CyLib.c ****             else
 461:.\Generated_Source\PSoC4/CyLib.c ****             {
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 464:.\Generated_Source\PSoC4/CyLib.c ****             }
 465:.\Generated_Source\PSoC4/CyLib.c **** 
 466:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 468:.\Generated_Source\PSoC4/CyLib.c **** 
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c ****             /**********************************************`*****************************
 471:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 472:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 473:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 474:.\Generated_Source\PSoC4/CyLib.c ****             *
 475:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 476:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 477:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 478:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 480:.\Generated_Source\PSoC4/CyLib.c ****             {
 481:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 483:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 484:.\Generated_Source\PSoC4/CyLib.c **** 
 485:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 488:.\Generated_Source\PSoC4/CyLib.c ****             }
 489:.\Generated_Source\PSoC4/CyLib.c ****             else
 490:.\Generated_Source\PSoC4/CyLib.c ****             {
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 492:.\Generated_Source\PSoC4/CyLib.c ****             }
 493:.\Generated_Source\PSoC4/CyLib.c **** 
 494:.\Generated_Source\PSoC4/CyLib.c **** 
 495:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 496:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 13


 497:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 498:.\Generated_Source\PSoC4/CyLib.c ****             *
 499:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 500:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 501:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 502:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 504:.\Generated_Source\PSoC4/CyLib.c ****             {
 505:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 508:.\Generated_Source\PSoC4/CyLib.c ****             }
 509:.\Generated_Source\PSoC4/CyLib.c **** 
 510:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 515:.\Generated_Source\PSoC4/CyLib.c **** 
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 517:.\Generated_Source\PSoC4/CyLib.c ****             {
 518:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 521:.\Generated_Source\PSoC4/CyLib.c ****             }
 522:.\Generated_Source\PSoC4/CyLib.c ****         }
 523:.\Generated_Source\PSoC4/CyLib.c ****         else
 524:.\Generated_Source\PSoC4/CyLib.c ****         {
 525:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 526:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 527:.\Generated_Source\PSoC4/CyLib.c ****         }
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 530:.\Generated_Source\PSoC4/CyLib.c **** 
 531:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 532:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 533:.\Generated_Source\PSoC4/CyLib.c ****             {
 534:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 535:.\Generated_Source\PSoC4/CyLib.c ****             }
 536:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 537:.\Generated_Source\PSoC4/CyLib.c **** 
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 540:.\Generated_Source\PSoC4/CyLib.c **** 
 541:.\Generated_Source\PSoC4/CyLib.c **** #else
 542:.\Generated_Source\PSoC4/CyLib.c **** 
 543:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 544:.\Generated_Source\PSoC4/CyLib.c ****     {
 545:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 546:.\Generated_Source\PSoC4/CyLib.c **** 
 547:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 548:.\Generated_Source\PSoC4/CyLib.c ****         {
 549:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 550:.\Generated_Source\PSoC4/CyLib.c **** 
 551:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 552:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 553:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 14


 554:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 555:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 556:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 559:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 560:.\Generated_Source\PSoC4/CyLib.c **** 
 561:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 562:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 563:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 566:.\Generated_Source\PSoC4/CyLib.c **** 
 567:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 568:.\Generated_Source\PSoC4/CyLib.c ****             {
 569:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 570:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 571:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 572:.\Generated_Source\PSoC4/CyLib.c **** 
 573:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 574:.\Generated_Source\PSoC4/CyLib.c **** 
 575:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 576:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 577:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 578:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 579:.\Generated_Source\PSoC4/CyLib.c ****             }
 580:.\Generated_Source\PSoC4/CyLib.c **** 
 581:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 582:.\Generated_Source\PSoC4/CyLib.c ****         }
 583:.\Generated_Source\PSoC4/CyLib.c ****         else
 584:.\Generated_Source\PSoC4/CyLib.c ****         {
 585:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 586:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 587:.\Generated_Source\PSoC4/CyLib.c ****         }
 588:.\Generated_Source\PSoC4/CyLib.c ****     }
 589:.\Generated_Source\PSoC4/CyLib.c **** 
 590:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 591:.\Generated_Source\PSoC4/CyLib.c **** 
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 594:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 595:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 596:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 597:.\Generated_Source\PSoC4/CyLib.c ****     *
 598:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 599:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 600:.\Generated_Source\PSoC4/CyLib.c ****     *
 601:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 602:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 603:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 604:.\Generated_Source\PSoC4/CyLib.c ****     *
 605:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 606:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 607:.\Generated_Source\PSoC4/CyLib.c ****     *
 608:.\Generated_Source\PSoC4/CyLib.c ****     *
 609:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 610:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 15


 611:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 612:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 613:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 614:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 615:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 616:.\Generated_Source\PSoC4/CyLib.c ****     *
 617:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 618:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 619:.\Generated_Source\PSoC4/CyLib.c ****     *
 620:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 621:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 622:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 623:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 624:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 625:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 626:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 627:.\Generated_Source\PSoC4/CyLib.c ****     *
 628:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 629:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 630:.\Generated_Source\PSoC4/CyLib.c ****     {
 631:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 636:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 637:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 640:.\Generated_Source\PSoC4/CyLib.c ****     }
 641:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 647:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 648:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 649:.\Generated_Source\PSoC4/CyLib.c ****     *
 650:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 651:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 652:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 653:.\Generated_Source\PSoC4/CyLib.c ****     *
 654:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 655:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 656:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 657:.\Generated_Source\PSoC4/CyLib.c ****     *
 658:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 659:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 660:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 661:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 662:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 663:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 664:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 665:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 666:.\Generated_Source\PSoC4/CyLib.c ****     *
 667:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 16


 668:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 669:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 670:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 671:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 672:.\Generated_Source\PSoC4/CyLib.c ****     *
 673:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 674:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 675:.\Generated_Source\PSoC4/CyLib.c ****     {
 676:.\Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the RF oscillator band gap */
 679:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c ****         /* Update trimming register */
 682:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 683:.\Generated_Source\PSoC4/CyLib.c **** 
 684:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the Crystal */
 685:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 686:.\Generated_Source\PSoC4/CyLib.c **** 
 687:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 688:.\Generated_Source\PSoC4/CyLib.c ****         {
 689:.\Generated_Source\PSoC4/CyLib.c ****             status = CYRET_TIMEOUT;
 690:.\Generated_Source\PSoC4/CyLib.c **** 
 691:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 694:.\Generated_Source\PSoC4/CyLib.c **** 
 695:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 696:.\Generated_Source\PSoC4/CyLib.c ****                 {
 697:.\Generated_Source\PSoC4/CyLib.c ****                     status = CYRET_SUCCESS;
 698:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 699:.\Generated_Source\PSoC4/CyLib.c ****                 }
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c **** 
 702:.\Generated_Source\PSoC4/CyLib.c ****         }
 703:.\Generated_Source\PSoC4/CyLib.c **** 
 704:.\Generated_Source\PSoC4/CyLib.c ****         return(status);
 705:.\Generated_Source\PSoC4/CyLib.c ****     }
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c **** 
 708:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 709:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
 710:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 711:.\Generated_Source\PSoC4/CyLib.c ****     *
 712:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 713:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
 714:.\Generated_Source\PSoC4/CyLib.c ****     *
 715:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 716:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 717:.\Generated_Source\PSoC4/CyLib.c ****     *
 718:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 719:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 720:.\Generated_Source\PSoC4/CyLib.c ****     *
 721:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 722:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
 723:.\Generated_Source\PSoC4/CyLib.c ****     {
 724:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the RF oscillator band gap */
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 17


 725:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the Crystal */
 728:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 729:.\Generated_Source\PSoC4/CyLib.c ****     }
 730:.\Generated_Source\PSoC4/CyLib.c **** 
 731:.\Generated_Source\PSoC4/CyLib.c **** 
 732:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 733:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
 734:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 735:.\Generated_Source\PSoC4/CyLib.c ****     *
 736:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 737:.\Generated_Source\PSoC4/CyLib.c ****     *  Read status bit (50 ppm reached) for the megahertz crystal.
 738:.\Generated_Source\PSoC4/CyLib.c ****     *
 739:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 740:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 741:.\Generated_Source\PSoC4/CyLib.c ****     *
 742:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 743:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that XTAL output reached 50 ppm.
 744:.\Generated_Source\PSoC4/CyLib.c ****     *
 745:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 746:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
 747:.\Generated_Source\PSoC4/CyLib.c ****     {
 748:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT);
 749:.\Generated_Source\PSoC4/CyLib.c ****     }
 750:.\Generated_Source\PSoC4/CyLib.c **** 
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 753:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteEcoDiv
 754:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 755:.\Generated_Source\PSoC4/CyLib.c ****     *
 756:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 757:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects value for the ECO divider.
 758:.\Generated_Source\PSoC4/CyLib.c ****     *
 759:.\Generated_Source\PSoC4/CyLib.c ****     *  The ECO must not be the HFCLK clock source when this function is called.
 760:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK source can be changed to the other clock source by call to the
 761:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
 762:.\Generated_Source\PSoC4/CyLib.c ****     *  function will not have any effect if compiler in release mode, and halt the
 763:.\Generated_Source\PSoC4/CyLib.c ****     *  CPU when compiler in debug mode.
 764:.\Generated_Source\PSoC4/CyLib.c ****     *
 765:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 766:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: Power of 2 divider selection.
 767:.\Generated_Source\PSoC4/CyLib.c ****     *
 768:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 769:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
 770:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
 771:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
 772:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
 773:.\Generated_Source\PSoC4/CyLib.c ****     *
 774:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 775:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 776:.\Generated_Source\PSoC4/CyLib.c ****     *
 777:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 778:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 779:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 780:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 781:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 18


 782:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 783:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 784:.\Generated_Source\PSoC4/CyLib.c ****     *
 785:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 786:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteEcoDiv(uint32 divider)
 787:.\Generated_Source\PSoC4/CyLib.c ****     {
 788:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:.\Generated_Source\PSoC4/CyLib.c **** 
 790:.\Generated_Source\PSoC4/CyLib.c ****         if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK))
 791:.\Generated_Source\PSoC4/CyLib.c ****         {
 792:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 795:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 796:.\Generated_Source\PSoC4/CyLib.c **** 
 797:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 798:.\Generated_Source\PSoC4/CyLib.c ****         }
 799:.\Generated_Source\PSoC4/CyLib.c ****         else
 800:.\Generated_Source\PSoC4/CyLib.c ****         {
 801:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if ECO sources HFCLK */
 802:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 803:.\Generated_Source\PSoC4/CyLib.c ****         }
 804:.\Generated_Source\PSoC4/CyLib.c ****     }
 805:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 806:.\Generated_Source\PSoC4/CyLib.c **** 
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c **** 
 809:.\Generated_Source\PSoC4/CyLib.c **** 
 810:.\Generated_Source\PSoC4/CyLib.c **** 
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 815:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
 816:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 817:.\Generated_Source\PSoC4/CyLib.c ****     *
 818:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 819:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
 820:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
 821:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
 822:.\Generated_Source\PSoC4/CyLib.c ****     *
 823:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 824:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
 825:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
 826:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
 827:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
 828:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
 829:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
 830:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
 831:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
 832:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
 833:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
 834:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
 835:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
 836:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
 837:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
 838:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 19


 839:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
 840:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
 841:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
 842:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
 843:.\Generated_Source\PSoC4/CyLib.c ****     *
 844:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 845:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 846:.\Generated_Source\PSoC4/CyLib.c ****     *
 847:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 848:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 850:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 852:.\Generated_Source\PSoC4/CyLib.c **** 
 853:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 859:.\Generated_Source\PSoC4/CyLib.c **** 
 860:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 863:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 865:.\Generated_Source\PSoC4/CyLib.c **** 
 866:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 871:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 872:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
 873:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 874:.\Generated_Source\PSoC4/CyLib.c ****     *
 875:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 876:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
 877:.\Generated_Source\PSoC4/CyLib.c ****     *
 878:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 879:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 880:.\Generated_Source\PSoC4/CyLib.c ****     *
 881:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 882:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 883:.\Generated_Source\PSoC4/CyLib.c ****     *
 884:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 885:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
 886:.\Generated_Source\PSoC4/CyLib.c ****     {
 182              		.loc 1 886 0
 183              		.cfi_startproc
 887:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 184              		.loc 1 887 0
 185 0000 054B     		ldr	r3, .L14
 186 0002 0221     		mov	r1, #2
 187 0004 1A68     		ldr	r2, [r3]
 888:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 889:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 20


 188              		.loc 1 889 0
 189              		@ sp needed
 887:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 190              		.loc 1 887 0
 191 0006 8A43     		bic	r2, r1
 192 0008 1A60     		str	r2, [r3]
 888:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 193              		.loc 1 888 0
 194 000a 044B     		ldr	r3, .L14+4
 195 000c 0121     		mov	r1, #1
 196 000e 1A68     		ldr	r2, [r3]
 197 0010 8A43     		bic	r2, r1
 198 0012 1A60     		str	r2, [r3]
 199              		.loc 1 889 0
 200 0014 7047     		bx	lr
 201              	.L15:
 202 0016 C046     		.align	2
 203              	.L14:
 204 0018 08000B40 		.word	1074462728
 205 001c 18000B40 		.word	1074462744
 206              		.cfi_endproc
 207              	.LFE6:
 208              		.size	CySysLvdDisable, .-CySysLvdDisable
 209              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 210              		.align	1
 211              		.global	CySysLvdGetInterruptSource
 212              		.code	16
 213              		.thumb_func
 214              		.type	CySysLvdGetInterruptSource, %function
 215              	CySysLvdGetInterruptSource:
 216              	.LFB7:
 890:.\Generated_Source\PSoC4/CyLib.c **** 
 891:.\Generated_Source\PSoC4/CyLib.c **** 
 892:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
 894:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 895:.\Generated_Source\PSoC4/CyLib.c ****     *
 896:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 897:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
 898:.\Generated_Source\PSoC4/CyLib.c ****     *
 899:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 900:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 901:.\Generated_Source\PSoC4/CyLib.c ****     *
 902:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 903:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
 904:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
 905:.\Generated_Source\PSoC4/CyLib.c ****     *
 906:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 907:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
 908:.\Generated_Source\PSoC4/CyLib.c ****     {
 217              		.loc 1 908 0
 218              		.cfi_startproc
 909:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 219              		.loc 1 909 0
 220 0000 024B     		ldr	r3, .L17
 910:.\Generated_Source\PSoC4/CyLib.c ****     }
 221              		.loc 1 910 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 21


 222              		@ sp needed
 909:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 223              		.loc 1 909 0
 224 0002 1868     		ldr	r0, [r3]
 225 0004 0223     		mov	r3, #2
 226 0006 1840     		and	r0, r3
 227              		.loc 1 910 0
 228 0008 7047     		bx	lr
 229              	.L18:
 230 000a C046     		.align	2
 231              	.L17:
 232 000c 04000B40 		.word	1074462724
 233              		.cfi_endproc
 234              	.LFE7:
 235              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 236              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 237              		.align	1
 238              		.global	CySysLvdClearInterrupt
 239              		.code	16
 240              		.thumb_func
 241              		.type	CySysLvdClearInterrupt, %function
 242              	CySysLvdClearInterrupt:
 243              	.LFB8:
 911:.\Generated_Source\PSoC4/CyLib.c **** 
 912:.\Generated_Source\PSoC4/CyLib.c **** 
 913:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 914:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
 915:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 916:.\Generated_Source\PSoC4/CyLib.c ****     *
 917:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 918:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
 919:.\Generated_Source\PSoC4/CyLib.c ****     *
 920:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 921:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 922:.\Generated_Source\PSoC4/CyLib.c ****     *
 923:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 924:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 927:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
 928:.\Generated_Source\PSoC4/CyLib.c ****     {
 244              		.loc 1 928 0
 245              		.cfi_startproc
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 246              		.loc 1 929 0
 247 0000 014B     		ldr	r3, .L20
 248 0002 0222     		mov	r2, #2
 249 0004 1A60     		str	r2, [r3]
 930:.\Generated_Source\PSoC4/CyLib.c ****     }
 250              		.loc 1 930 0
 251              		@ sp needed
 252 0006 7047     		bx	lr
 253              	.L21:
 254              		.align	2
 255              	.L20:
 256 0008 04000B40 		.word	1074462724
 257              		.cfi_endproc
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 22


 258              	.LFE8:
 259              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 260              		.section	.text.CySysGetResetReason,"ax",%progbits
 261              		.align	1
 262              		.global	CySysGetResetReason
 263              		.code	16
 264              		.thumb_func
 265              		.type	CySysGetResetReason, %function
 266              	CySysGetResetReason:
 267              	.LFB9:
 931:.\Generated_Source\PSoC4/CyLib.c **** 
 932:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 933:.\Generated_Source\PSoC4/CyLib.c **** 
 934:.\Generated_Source\PSoC4/CyLib.c **** 
 935:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 936:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
 937:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 938:.\Generated_Source\PSoC4/CyLib.c **** *
 939:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 940:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
 941:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
 942:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
 943:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
 944:.\Generated_Source\PSoC4/CyLib.c **** *
 945:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 946:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
 947:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
 948:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
 949:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
 950:.\Generated_Source\PSoC4/CyLib.c **** *
 951:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 952:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
 953:.\Generated_Source\PSoC4/CyLib.c **** *
 954:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 955:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
 956:.\Generated_Source\PSoC4/CyLib.c **** {
 268              		.loc 1 956 0
 269              		.cfi_startproc
 270              	.LVL8:
 957:.\Generated_Source\PSoC4/CyLib.c ****     uint32 status;
 958:.\Generated_Source\PSoC4/CyLib.c **** 
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 960:.\Generated_Source\PSoC4/CyLib.c ****     status = CY_SYS_RES_CAUSE_REG &
 271              		.loc 1 960 0
 272 0000 034A     		ldr	r2, .L23
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 273              		.loc 1 959 0
 274 0002 1923     		mov	r3, #25
 275 0004 011C     		mov	r1, r0
 276              		.loc 1 960 0
 277 0006 1068     		ldr	r0, [r2]
 278              	.LVL9:
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 279              		.loc 1 959 0
 280 0008 1940     		and	r1, r3
 281              	.LVL10:
 282              		.loc 1 960 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 23


 283 000a 1840     		and	r0, r3
 284              	.LVL11:
 961:.\Generated_Source\PSoC4/CyLib.c ****              (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 962:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 285              		.loc 1 962 0
 286 000c 1160     		str	r1, [r2]
 963:.\Generated_Source\PSoC4/CyLib.c **** 
 964:.\Generated_Source\PSoC4/CyLib.c ****     return (status);
 965:.\Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 965 0
 288              		@ sp needed
 289 000e 7047     		bx	lr
 290              	.L24:
 291              		.align	2
 292              	.L23:
 293 0010 00030B40 		.word	1074463488
 294              		.cfi_endproc
 295              	.LFE9:
 296              		.size	CySysGetResetReason, .-CySysGetResetReason
 297              		.section	.text.CyDisableInts,"ax",%progbits
 298              		.align	1
 299              		.global	CyDisableInts
 300              		.code	16
 301              		.thumb_func
 302              		.type	CyDisableInts, %function
 303              	CyDisableInts:
 304              	.LFB10:
 966:.\Generated_Source\PSoC4/CyLib.c **** 
 967:.\Generated_Source\PSoC4/CyLib.c **** 
 968:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 969:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
 970:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 971:.\Generated_Source\PSoC4/CyLib.c **** *
 972:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 973:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
 974:.\Generated_Source\PSoC4/CyLib.c **** *
 975:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 976:.\Generated_Source\PSoC4/CyLib.c **** *  None
 977:.\Generated_Source\PSoC4/CyLib.c **** *
 978:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 979:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
 980:.\Generated_Source\PSoC4/CyLib.c **** *
 981:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 982:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
 983:.\Generated_Source\PSoC4/CyLib.c **** {
 305              		.loc 1 983 0
 306              		.cfi_startproc
 984:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
 987:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 307              		.loc 1 987 0
 308 0000 024B     		ldr	r3, .L26
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
 990:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 309              		.loc 1 990 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 24


 310 0002 0122     		mov	r2, #1
 311 0004 5242     		neg	r2, r2
 987:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 312              		.loc 1 987 0
 313 0006 1868     		ldr	r0, [r3]
 314              	.LVL12:
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 993:.\Generated_Source\PSoC4/CyLib.c **** }
 315              		.loc 1 993 0
 316              		@ sp needed
 990:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 317              		.loc 1 990 0
 318 0008 1A60     		str	r2, [r3]
 319              		.loc 1 993 0
 320 000a 7047     		bx	lr
 321              	.L27:
 322              		.align	2
 323              	.L26:
 324 000c 80E100E0 		.word	-536813184
 325              		.cfi_endproc
 326              	.LFE10:
 327              		.size	CyDisableInts, .-CyDisableInts
 328              		.section	.text.CyEnableInts,"ax",%progbits
 329              		.align	1
 330              		.global	CyEnableInts
 331              		.code	16
 332              		.thumb_func
 333              		.type	CyEnableInts, %function
 334              	CyEnableInts:
 335              	.LFB11:
 994:.\Generated_Source\PSoC4/CyLib.c **** 
 995:.\Generated_Source\PSoC4/CyLib.c **** 
 996:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
 998:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c **** *
1000:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1001:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
1002:.\Generated_Source\PSoC4/CyLib.c **** *
1003:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1004:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
1005:.\Generated_Source\PSoC4/CyLib.c **** *
1006:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1007:.\Generated_Source\PSoC4/CyLib.c **** *  None
1008:.\Generated_Source\PSoC4/CyLib.c **** *
1009:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1010:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
1011:.\Generated_Source\PSoC4/CyLib.c **** {
 336              		.loc 1 1011 0
 337              		.cfi_startproc
 338              	.LVL13:
1012:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 339              		.loc 1 1012 0
 340 0000 014B     		ldr	r3, .L29
1013:.\Generated_Source\PSoC4/CyLib.c **** }
 341              		.loc 1 1013 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 25


 342              		@ sp needed
1012:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 343              		.loc 1 1012 0
 344 0002 1860     		str	r0, [r3]
 345              		.loc 1 1013 0
 346 0004 7047     		bx	lr
 347              	.L30:
 348 0006 C046     		.align	2
 349              	.L29:
 350 0008 00E100E0 		.word	-536813312
 351              		.cfi_endproc
 352              	.LFE11:
 353              		.size	CyEnableInts, .-CyEnableInts
 354              		.section	.text.CyIntSetSysVector,"ax",%progbits
 355              		.align	1
 356              		.global	CyIntSetSysVector
 357              		.code	16
 358              		.thumb_func
 359              		.type	CyIntSetSysVector, %function
 360              	CyIntSetSysVector:
 361              	.LFB12:
1014:.\Generated_Source\PSoC4/CyLib.c **** 
1015:.\Generated_Source\PSoC4/CyLib.c **** 
1016:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1017:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
1018:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c **** *
1020:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1021:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
1022:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
1023:.\Generated_Source\PSoC4/CyLib.c **** *
1024:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1025:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1026:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1027:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1028:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1029:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1030:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1031:.\Generated_Source\PSoC4/CyLib.c **** *
1032:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
1033:.\Generated_Source\PSoC4/CyLib.c **** *
1034:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1035:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
1036:.\Generated_Source\PSoC4/CyLib.c **** *
1037:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1038:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
1039:.\Generated_Source\PSoC4/CyLib.c **** {
 362              		.loc 1 1039 0
 363              		.cfi_startproc
 364              	.LVL14:
1040:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1041:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 365              		.loc 1 1043 0
 366 0000 0F28     		cmp	r0, #15
 367 0002 00D9     		bls	.L32
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 26


 368              	.LVL15:
 369              	.LBB26:
 370              	.LBB27:
1044:.\Generated_Source\PSoC4/CyLib.c **** 
1045:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
1047:.\Generated_Source\PSoC4/CyLib.c **** 
1048:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
1050:.\Generated_Source\PSoC4/CyLib.c **** 
1051:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1052:.\Generated_Source\PSoC4/CyLib.c **** }
1053:.\Generated_Source\PSoC4/CyLib.c **** 
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1056:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
1057:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1058:.\Generated_Source\PSoC4/CyLib.c **** *
1059:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1060:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
1061:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
1062:.\Generated_Source\PSoC4/CyLib.c **** *
1063:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1064:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1065:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1066:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1067:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1068:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1069:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1070:.\Generated_Source\PSoC4/CyLib.c **** *
1071:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1072:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
1073:.\Generated_Source\PSoC4/CyLib.c **** *
1074:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1075:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
1076:.\Generated_Source\PSoC4/CyLib.c **** {
1077:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1078:.\Generated_Source\PSoC4/CyLib.c **** 
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
1080:.\Generated_Source\PSoC4/CyLib.c **** 
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
1082:.\Generated_Source\PSoC4/CyLib.c **** }
1083:.\Generated_Source\PSoC4/CyLib.c **** 
1084:.\Generated_Source\PSoC4/CyLib.c **** 
1085:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1086:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
1087:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1088:.\Generated_Source\PSoC4/CyLib.c **** *
1089:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1090:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
1091:.\Generated_Source\PSoC4/CyLib.c **** *
1092:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1093:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1094:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
1095:.\Generated_Source\PSoC4/CyLib.c **** *
1096:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1097:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 27


1098:.\Generated_Source\PSoC4/CyLib.c **** *
1099:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
1101:.\Generated_Source\PSoC4/CyLib.c **** {
1102:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1103:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
1112:.\Generated_Source\PSoC4/CyLib.c **** 
1113:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1114:.\Generated_Source\PSoC4/CyLib.c **** }
1115:.\Generated_Source\PSoC4/CyLib.c **** 
1116:.\Generated_Source\PSoC4/CyLib.c **** 
1117:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
1119:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/CyLib.c **** *
1121:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1122:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
1123:.\Generated_Source\PSoC4/CyLib.c **** *
1124:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1125:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1126:.\Generated_Source\PSoC4/CyLib.c **** *
1127:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1128:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
1129:.\Generated_Source\PSoC4/CyLib.c **** *
1130:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1131:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
1132:.\Generated_Source\PSoC4/CyLib.c **** {
1133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1134:.\Generated_Source\PSoC4/CyLib.c **** 
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1136:.\Generated_Source\PSoC4/CyLib.c **** 
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
1138:.\Generated_Source\PSoC4/CyLib.c **** }
1139:.\Generated_Source\PSoC4/CyLib.c **** 
1140:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
1142:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/CyLib.c **** *
1144:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1145:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
1146:.\Generated_Source\PSoC4/CyLib.c **** *
1147:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1148:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
1149:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1150:.\Generated_Source\PSoC4/CyLib.c **** *
1151:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1152:.\Generated_Source\PSoC4/CyLib.c **** *  None
1153:.\Generated_Source\PSoC4/CyLib.c **** *
1154:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 28


1155:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
1156:.\Generated_Source\PSoC4/CyLib.c **** {
1157:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
1158:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
1159:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
1160:.\Generated_Source\PSoC4/CyLib.c **** 
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1163:.\Generated_Source\PSoC4/CyLib.c **** 
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
1165:.\Generated_Source\PSoC4/CyLib.c **** 
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
1167:.\Generated_Source\PSoC4/CyLib.c **** 
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
1172:.\Generated_Source\PSoC4/CyLib.c **** 
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
1174:.\Generated_Source\PSoC4/CyLib.c **** }
1175:.\Generated_Source\PSoC4/CyLib.c **** 
1176:.\Generated_Source\PSoC4/CyLib.c **** 
1177:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1178:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
1179:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1180:.\Generated_Source\PSoC4/CyLib.c **** *
1181:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1182:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
1183:.\Generated_Source\PSoC4/CyLib.c **** *
1184:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1185:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1186:.\Generated_Source\PSoC4/CyLib.c **** *
1187:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1188:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
1189:.\Generated_Source\PSoC4/CyLib.c **** *
1190:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
1192:.\Generated_Source\PSoC4/CyLib.c **** {
1193:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
1198:.\Generated_Source\PSoC4/CyLib.c **** 
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
1200:.\Generated_Source\PSoC4/CyLib.c **** }
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
1205:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/CyLib.c **** *
1207:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1208:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
1209:.\Generated_Source\PSoC4/CyLib.c **** *
1210:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1211:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 29


1212:.\Generated_Source\PSoC4/CyLib.c **** *
1213:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1214:.\Generated_Source\PSoC4/CyLib.c **** *  None
1215:.\Generated_Source\PSoC4/CyLib.c **** *
1216:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1217:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
1218:.\Generated_Source\PSoC4/CyLib.c **** {
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
1220:.\Generated_Source\PSoC4/CyLib.c **** }
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
1225:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c **** *
1227:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
1229:.\Generated_Source\PSoC4/CyLib.c **** *
1230:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1231:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1232:.\Generated_Source\PSoC4/CyLib.c **** *
1233:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1234:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
1235:.\Generated_Source\PSoC4/CyLib.c **** *
1236:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
1238:.\Generated_Source\PSoC4/CyLib.c **** {
1239:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
1240:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
1241:.\Generated_Source\PSoC4/CyLib.c **** }
1242:.\Generated_Source\PSoC4/CyLib.c **** 
1243:.\Generated_Source\PSoC4/CyLib.c **** 
1244:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1245:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
1246:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1247:.\Generated_Source\PSoC4/CyLib.c **** *
1248:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1249:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
1250:.\Generated_Source\PSoC4/CyLib.c **** *
1251:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1252:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
1253:.\Generated_Source\PSoC4/CyLib.c **** *
1254:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1255:.\Generated_Source\PSoC4/CyLib.c **** *  None
1256:.\Generated_Source\PSoC4/CyLib.c **** *
1257:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1258:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
1259:.\Generated_Source\PSoC4/CyLib.c **** {
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
1261:.\Generated_Source\PSoC4/CyLib.c **** }
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
1265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1266:.\Generated_Source\PSoC4/CyLib.c **** *
1267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1268:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 30


1269:.\Generated_Source\PSoC4/CyLib.c **** *
1270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1272:.\Generated_Source\PSoC4/CyLib.c **** *
1273:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1274:.\Generated_Source\PSoC4/CyLib.c **** *  None
1275:.\Generated_Source\PSoC4/CyLib.c **** *
1276:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1277:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
1278:.\Generated_Source\PSoC4/CyLib.c **** {
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
1280:.\Generated_Source\PSoC4/CyLib.c **** }
1281:.\Generated_Source\PSoC4/CyLib.c **** 
1282:.\Generated_Source\PSoC4/CyLib.c **** 
1283:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1284:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
1285:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1286:.\Generated_Source\PSoC4/CyLib.c **** *
1287:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1288:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
1289:.\Generated_Source\PSoC4/CyLib.c **** *
1290:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1291:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1292:.\Generated_Source\PSoC4/CyLib.c **** *
1293:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1294:.\Generated_Source\PSoC4/CyLib.c **** *  None
1295:.\Generated_Source\PSoC4/CyLib.c **** *
1296:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1297:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
1298:.\Generated_Source\PSoC4/CyLib.c **** {
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
1300:.\Generated_Source\PSoC4/CyLib.c **** }
1301:.\Generated_Source\PSoC4/CyLib.c **** 
1302:.\Generated_Source\PSoC4/CyLib.c **** 
1303:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1304:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
1305:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1306:.\Generated_Source\PSoC4/CyLib.c **** *
1307:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1308:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
1309:.\Generated_Source\PSoC4/CyLib.c **** *
1310:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1311:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
1312:.\Generated_Source\PSoC4/CyLib.c **** *
1313:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1314:.\Generated_Source\PSoC4/CyLib.c **** *  None
1315:.\Generated_Source\PSoC4/CyLib.c **** *
1316:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
1318:.\Generated_Source\PSoC4/CyLib.c **** {
1319:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
1320:.\Generated_Source\PSoC4/CyLib.c ****     {
1321:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
1322:.\Generated_Source\PSoC4/CyLib.c ****     }
1323:.\Generated_Source\PSoC4/CyLib.c **** 
1324:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
1325:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 31


1326:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
1327:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 371              		.loc 1 1327 0
 372              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 373 0004 01BE     		    bkpt    1
 374              	@ 0 "" 2
 375              	.LVL16:
 376              		.code	16
 377              	.L32:
 378              	.LBE27:
 379              	.LBE26:
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 380              		.loc 1 1046 0
 381 0006 8022     		mov	r2, #128
 382 0008 8000     		lsl	r0, r0, #2
 383              	.LVL17:
 384 000a 9205     		lsl	r2, r2, #22
 385 000c 8318     		add	r3, r0, r2
 386 000e 1868     		ldr	r0, [r3]
 387              	.LVL18:
1052:.\Generated_Source\PSoC4/CyLib.c **** }
 388              		.loc 1 1052 0
 389              		@ sp needed
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 390              		.loc 1 1049 0
 391 0010 1960     		str	r1, [r3]
1052:.\Generated_Source\PSoC4/CyLib.c **** }
 392              		.loc 1 1052 0
 393 0012 7047     		bx	lr
 394              		.cfi_endproc
 395              	.LFE12:
 396              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 397              		.section	.text.CyIntGetSysVector,"ax",%progbits
 398              		.align	1
 399              		.global	CyIntGetSysVector
 400              		.code	16
 401              		.thumb_func
 402              		.type	CyIntGetSysVector, %function
 403              	CyIntGetSysVector:
 404              	.LFB13:
1076:.\Generated_Source\PSoC4/CyLib.c **** {
 405              		.loc 1 1076 0
 406              		.cfi_startproc
 407              	.LVL19:
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 408              		.loc 1 1079 0
 409 0000 0F28     		cmp	r0, #15
 410 0002 00D9     		bls	.L35
 411              	.LVL20:
 412              	.LBB28:
 413              	.LBB29:
 414              		.loc 1 1327 0
 415              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 416 0004 01BE     		    bkpt    1
 417              	@ 0 "" 2
 418              	.LVL21:
 419              		.code	16
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 32


 420              	.L35:
 421              	.LBE29:
 422              	.LBE28:
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 423              		.loc 1 1081 0
 424 0006 8023     		mov	r3, #128
 425 0008 9B05     		lsl	r3, r3, #22
 426 000a 8000     		lsl	r0, r0, #2
 427              	.LVL22:
 428 000c C018     		add	r0, r0, r3
 429 000e 0068     		ldr	r0, [r0]
1082:.\Generated_Source\PSoC4/CyLib.c **** }
 430              		.loc 1 1082 0
 431              		@ sp needed
 432 0010 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE13:
 435              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 436              		.section	.text.CyIntSetVector,"ax",%progbits
 437              		.align	1
 438              		.global	CyIntSetVector
 439              		.code	16
 440              		.thumb_func
 441              		.type	CyIntSetVector, %function
 442              	CyIntSetVector:
 443              	.LFB14:
1101:.\Generated_Source\PSoC4/CyLib.c **** {
 444              		.loc 1 1101 0
 445              		.cfi_startproc
 446              	.LVL23:
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 447              		.loc 1 1105 0
 448 0000 1F28     		cmp	r0, #31
 449 0002 00D9     		bls	.L37
 450              	.LVL24:
 451              	.LBB30:
 452              	.LBB31:
 453              		.loc 1 1327 0
 454              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 455 0004 01BE     		    bkpt    1
 456              	@ 0 "" 2
 457              	.LVL25:
 458              		.code	16
 459              	.L37:
 460              	.LBE31:
 461              	.LBE30:
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 462              		.loc 1 1108 0
 463 0006 034A     		ldr	r2, .L38
 464 0008 8000     		lsl	r0, r0, #2
 465              	.LVL26:
 466 000a 8318     		add	r3, r0, r2
 467 000c 1868     		ldr	r0, [r3]
 468              	.LVL27:
1114:.\Generated_Source\PSoC4/CyLib.c **** }
 469              		.loc 1 1114 0
 470              		@ sp needed
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 33


1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 471              		.loc 1 1111 0
 472 000e 1960     		str	r1, [r3]
1114:.\Generated_Source\PSoC4/CyLib.c **** }
 473              		.loc 1 1114 0
 474 0010 7047     		bx	lr
 475              	.L39:
 476 0012 C046     		.align	2
 477              	.L38:
 478 0014 40000020 		.word	536870976
 479              		.cfi_endproc
 480              	.LFE14:
 481              		.size	CyIntSetVector, .-CyIntSetVector
 482              		.section	.text.CyIntGetVector,"ax",%progbits
 483              		.align	1
 484              		.global	CyIntGetVector
 485              		.code	16
 486              		.thumb_func
 487              		.type	CyIntGetVector, %function
 488              	CyIntGetVector:
 489              	.LFB15:
1132:.\Generated_Source\PSoC4/CyLib.c **** {
 490              		.loc 1 1132 0
 491              		.cfi_startproc
 492              	.LVL28:
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 493              		.loc 1 1135 0
 494 0000 1F28     		cmp	r0, #31
 495 0002 00D9     		bls	.L41
 496              	.LVL29:
 497              	.LBB32:
 498              	.LBB33:
 499              		.loc 1 1327 0
 500              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 501 0004 01BE     		    bkpt    1
 502              	@ 0 "" 2
 503              	.LVL30:
 504              		.code	16
 505              	.L41:
 506              	.LBE33:
 507              	.LBE32:
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 508              		.loc 1 1137 0
 509 0006 024B     		ldr	r3, .L42
 510 0008 8000     		lsl	r0, r0, #2
 511              	.LVL31:
 512 000a C018     		add	r0, r0, r3
 513 000c 0068     		ldr	r0, [r0]
1138:.\Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 1138 0
 515              		@ sp needed
 516 000e 7047     		bx	lr
 517              	.L43:
 518              		.align	2
 519              	.L42:
 520 0010 40000020 		.word	536870976
 521              		.cfi_endproc
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 34


 522              	.LFE15:
 523              		.size	CyIntGetVector, .-CyIntGetVector
 524              		.section	.text.CyIntSetPriority,"ax",%progbits
 525              		.align	1
 526              		.global	CyIntSetPriority
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntSetPriority, %function
 530              	CyIntSetPriority:
 531              	.LFB16:
1156:.\Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 1156 0
 533              		.cfi_startproc
 534              	.LVL32:
 535 0000 38B5     		push	{r3, r4, r5, lr}
 536              		.cfi_def_cfa_offset 16
 537              		.cfi_offset 3, -16
 538              		.cfi_offset 4, -12
 539              		.cfi_offset 5, -8
 540              		.cfi_offset 14, -4
1156:.\Generated_Source\PSoC4/CyLib.c **** {
 541              		.loc 1 1156 0
 542 0002 041C     		mov	r4, r0
 543 0004 0D1E     		sub	r5, r1, #0
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 544              		.loc 1 1161 0
 545 0006 032D     		cmp	r5, #3
 546 0008 00D9     		bls	.L45
 547              	.LVL33:
 548              	.LBB34:
 549              	.LBB35:
 550              		.loc 1 1327 0
 551              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 552 000a 01BE     		    bkpt    1
 553              	@ 0 "" 2
 554              	.LVL34:
 555              		.code	16
 556              	.L45:
 557              	.LBE35:
 558              	.LBE34:
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 559              		.loc 1 1162 0
 560 000c 1F2C     		cmp	r4, #31
 561 000e 00D9     		bls	.L46
 562              	.LVL35:
 563              	.LBB36:
 564              	.LBB37:
 565              		.loc 1 1327 0
 566              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 567 0010 01BE     		    bkpt    1
 568              	@ 0 "" 2
 569              	.LVL36:
 570              		.code	16
 571              	.L46:
 572              	.LBE37:
 573              	.LBE36:
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 35


 574              		.loc 1 1166 0
 575 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 576              	.LVL37:
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 577              		.loc 1 1168 0
 578 0016 A308     		lsr	r3, r4, #2
 579 0018 084A     		ldr	r2, .L47
 580 001a 9B00     		lsl	r3, r3, #2
 581 001c 9B18     		add	r3, r3, r2
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 582              		.loc 1 1164 0
 583 001e 0322     		mov	r2, #3
 584 0020 1440     		and	r4, r2
 585              	.LVL38:
 586 0022 9440     		lsl	r4, r4, r2
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 587              		.loc 1 1168 0
 588 0024 1968     		ldr	r1, [r3]
 589              	.LVL39:
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 590              		.loc 1 1164 0
 591 0026 0634     		add	r4, r4, #6
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 592              		.loc 1 1169 0
 593 0028 A240     		lsl	r2, r2, r4
 594 002a 9143     		bic	r1, r2
 595              	.LVL40:
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 596              		.loc 1 1170 0
 597 002c A540     		lsl	r5, r5, r4
 598 002e 0C1C     		mov	r4, r1
 599 0030 2C43     		orr	r4, r5
 600              	.LVL41:
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 601              		.loc 1 1171 0
 602 0032 1C60     		str	r4, [r3]
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 603              		.loc 1 1173 0
 604 0034 FFF7FEFF 		bl	CyExitCriticalSection
 605              	.LVL42:
1174:.\Generated_Source\PSoC4/CyLib.c **** }
 606              		.loc 1 1174 0
 607              		@ sp needed
 608              	.LVL43:
 609 0038 38BD     		pop	{r3, r4, r5, pc}
 610              	.L48:
 611 003a C046     		.align	2
 612              	.L47:
 613 003c 00E400E0 		.word	-536812544
 614              		.cfi_endproc
 615              	.LFE16:
 616              		.size	CyIntSetPriority, .-CyIntSetPriority
 617              		.section	.text.CyIntGetPriority,"ax",%progbits
 618              		.align	1
 619              		.global	CyIntGetPriority
 620              		.code	16
 621              		.thumb_func
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 36


 622              		.type	CyIntGetPriority, %function
 623              	CyIntGetPriority:
 624              	.LFB17:
1192:.\Generated_Source\PSoC4/CyLib.c **** {
 625              		.loc 1 1192 0
 626              		.cfi_startproc
 627              	.LVL44:
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 628              		.loc 1 1195 0
 629 0000 1F28     		cmp	r0, #31
 630 0002 00D9     		bls	.L50
 631              	.LVL45:
 632              	.LBB38:
 633              	.LBB39:
 634              		.loc 1 1327 0
 635              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 636 0004 01BE     		    bkpt    1
 637              	@ 0 "" 2
 638              	.LVL46:
 639              		.code	16
 640              	.L50:
 641              	.LBE39:
 642              	.LBE38:
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 643              		.loc 1 1197 0
 644 0006 8308     		lsr	r3, r0, #2
 645 0008 054A     		ldr	r2, .L51
 646 000a 9B00     		lsl	r3, r3, #2
 647 000c 9B18     		add	r3, r3, r2
 648 000e 1A68     		ldr	r2, [r3]
 649              	.LVL47:
 650 0010 0323     		mov	r3, #3
 651 0012 1840     		and	r0, r3
 652              	.LVL48:
 653 0014 9840     		lsl	r0, r0, r3
 654 0016 0630     		add	r0, r0, #6
 655 0018 C240     		lsr	r2, r2, r0
 656 001a 101C     		mov	r0, r2
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 657              		.loc 1 1199 0
 658 001c 1840     		and	r0, r3
1200:.\Generated_Source\PSoC4/CyLib.c **** }
 659              		.loc 1 1200 0
 660              		@ sp needed
 661 001e 7047     		bx	lr
 662              	.L52:
 663              		.align	2
 664              	.L51:
 665 0020 00E400E0 		.word	-536812544
 666              		.cfi_endproc
 667              	.LFE17:
 668              		.size	CyIntGetPriority, .-CyIntGetPriority
 669              		.section	.text.CyIntEnable,"ax",%progbits
 670              		.align	1
 671              		.global	CyIntEnable
 672              		.code	16
 673              		.thumb_func
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 37


 674              		.type	CyIntEnable, %function
 675              	CyIntEnable:
 676              	.LFB18:
1218:.\Generated_Source\PSoC4/CyLib.c **** {
 677              		.loc 1 1218 0
 678              		.cfi_startproc
 679              	.LVL49:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 680              		.loc 1 1219 0
 681 0000 1F23     		mov	r3, #31
 682 0002 1840     		and	r0, r3
 683              	.LVL50:
 684 0004 0123     		mov	r3, #1
 685 0006 8340     		lsl	r3, r3, r0
 686 0008 181C     		mov	r0, r3
 687 000a 014B     		ldr	r3, .L54
1220:.\Generated_Source\PSoC4/CyLib.c **** }
 688              		.loc 1 1220 0
 689              		@ sp needed
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 690              		.loc 1 1219 0
 691 000c 1860     		str	r0, [r3]
1220:.\Generated_Source\PSoC4/CyLib.c **** }
 692              		.loc 1 1220 0
 693 000e 7047     		bx	lr
 694              	.L55:
 695              		.align	2
 696              	.L54:
 697 0010 00E100E0 		.word	-536813312
 698              		.cfi_endproc
 699              	.LFE18:
 700              		.size	CyIntEnable, .-CyIntEnable
 701              		.section	.text.CyIntGetState,"ax",%progbits
 702              		.align	1
 703              		.global	CyIntGetState
 704              		.code	16
 705              		.thumb_func
 706              		.type	CyIntGetState, %function
 707              	CyIntGetState:
 708              	.LFB19:
1238:.\Generated_Source\PSoC4/CyLib.c **** {
 709              		.loc 1 1238 0
 710              		.cfi_startproc
 711              	.LVL51:
1240:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 712              		.loc 1 1240 0
 713 0000 044B     		ldr	r3, .L57
 714 0002 1F22     		mov	r2, #31
 715 0004 1B68     		ldr	r3, [r3]
 716 0006 1040     		and	r0, r2
 717              	.LVL52:
 718 0008 C340     		lsr	r3, r3, r0
 719 000a 181C     		mov	r0, r3
 720 000c 0123     		mov	r3, #1
 721 000e 1840     		and	r0, r3
1241:.\Generated_Source\PSoC4/CyLib.c **** }
 722              		.loc 1 1241 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 38


 723              		@ sp needed
 724 0010 7047     		bx	lr
 725              	.L58:
 726 0012 C046     		.align	2
 727              	.L57:
 728 0014 00E100E0 		.word	-536813312
 729              		.cfi_endproc
 730              	.LFE19:
 731              		.size	CyIntGetState, .-CyIntGetState
 732              		.section	.text.CyIntDisable,"ax",%progbits
 733              		.align	1
 734              		.global	CyIntDisable
 735              		.code	16
 736              		.thumb_func
 737              		.type	CyIntDisable, %function
 738              	CyIntDisable:
 739              	.LFB20:
1259:.\Generated_Source\PSoC4/CyLib.c **** {
 740              		.loc 1 1259 0
 741              		.cfi_startproc
 742              	.LVL53:
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 743              		.loc 1 1260 0
 744 0000 1F23     		mov	r3, #31
 745 0002 1840     		and	r0, r3
 746              	.LVL54:
 747 0004 0123     		mov	r3, #1
 748 0006 8340     		lsl	r3, r3, r0
 749 0008 181C     		mov	r0, r3
 750 000a 014B     		ldr	r3, .L60
1261:.\Generated_Source\PSoC4/CyLib.c **** }
 751              		.loc 1 1261 0
 752              		@ sp needed
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 753              		.loc 1 1260 0
 754 000c 1860     		str	r0, [r3]
1261:.\Generated_Source\PSoC4/CyLib.c **** }
 755              		.loc 1 1261 0
 756 000e 7047     		bx	lr
 757              	.L61:
 758              		.align	2
 759              	.L60:
 760 0010 80E100E0 		.word	-536813184
 761              		.cfi_endproc
 762              	.LFE20:
 763              		.size	CyIntDisable, .-CyIntDisable
 764              		.section	.text.CyIntSetPending,"ax",%progbits
 765              		.align	1
 766              		.global	CyIntSetPending
 767              		.code	16
 768              		.thumb_func
 769              		.type	CyIntSetPending, %function
 770              	CyIntSetPending:
 771              	.LFB21:
1278:.\Generated_Source\PSoC4/CyLib.c **** {
 772              		.loc 1 1278 0
 773              		.cfi_startproc
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 39


 774              	.LVL55:
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 775              		.loc 1 1279 0
 776 0000 1F23     		mov	r3, #31
 777 0002 1840     		and	r0, r3
 778              	.LVL56:
 779 0004 0123     		mov	r3, #1
 780 0006 8340     		lsl	r3, r3, r0
 781 0008 181C     		mov	r0, r3
 782 000a 014B     		ldr	r3, .L63
1280:.\Generated_Source\PSoC4/CyLib.c **** }
 783              		.loc 1 1280 0
 784              		@ sp needed
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 785              		.loc 1 1279 0
 786 000c 1860     		str	r0, [r3]
1280:.\Generated_Source\PSoC4/CyLib.c **** }
 787              		.loc 1 1280 0
 788 000e 7047     		bx	lr
 789              	.L64:
 790              		.align	2
 791              	.L63:
 792 0010 00E200E0 		.word	-536813056
 793              		.cfi_endproc
 794              	.LFE21:
 795              		.size	CyIntSetPending, .-CyIntSetPending
 796              		.section	.text.CyIntClearPending,"ax",%progbits
 797              		.align	1
 798              		.global	CyIntClearPending
 799              		.code	16
 800              		.thumb_func
 801              		.type	CyIntClearPending, %function
 802              	CyIntClearPending:
 803              	.LFB22:
1298:.\Generated_Source\PSoC4/CyLib.c **** {
 804              		.loc 1 1298 0
 805              		.cfi_startproc
 806              	.LVL57:
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 807              		.loc 1 1299 0
 808 0000 1F23     		mov	r3, #31
 809 0002 1840     		and	r0, r3
 810              	.LVL58:
 811 0004 0123     		mov	r3, #1
 812 0006 8340     		lsl	r3, r3, r0
 813 0008 181C     		mov	r0, r3
 814 000a 014B     		ldr	r3, .L66
1300:.\Generated_Source\PSoC4/CyLib.c **** }
 815              		.loc 1 1300 0
 816              		@ sp needed
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 817              		.loc 1 1299 0
 818 000c 1860     		str	r0, [r3]
1300:.\Generated_Source\PSoC4/CyLib.c **** }
 819              		.loc 1 1300 0
 820 000e 7047     		bx	lr
 821              	.L67:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 40


 822              		.align	2
 823              	.L66:
 824 0010 80E200E0 		.word	-536812928
 825              		.cfi_endproc
 826              	.LFE22:
 827              		.size	CyIntClearPending, .-CyIntClearPending
 828              		.section	.text.CyHalt,"ax",%progbits
 829              		.align	1
 830              		.global	CyHalt
 831              		.code	16
 832              		.thumb_func
 833              		.type	CyHalt, %function
 834              	CyHalt:
 835              	.LFB23:
1318:.\Generated_Source\PSoC4/CyLib.c **** {
 836              		.loc 1 1318 0
 837              		.cfi_startproc
 838              	.LVL59:
 839              		.loc 1 1327 0
 840              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 841 0000 01BE     		    bkpt    1
 842              	@ 0 "" 2
1328:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
1329:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
1330:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
1331:.\Generated_Source\PSoC4/CyLib.c **** }
 843              		.loc 1 1331 0
 844              		.code	16
 845              		@ sp needed
 846 0002 7047     		bx	lr
 847              		.cfi_endproc
 848              	.LFE23:
 849              		.size	CyHalt, .-CyHalt
 850              		.section	.text.CySoftwareReset,"ax",%progbits
 851              		.align	1
 852              		.global	CySoftwareReset
 853              		.code	16
 854              		.thumb_func
 855              		.type	CySoftwareReset, %function
 856              	CySoftwareReset:
 857              	.LFB24:
1332:.\Generated_Source\PSoC4/CyLib.c **** 
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1335:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
1336:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1337:.\Generated_Source\PSoC4/CyLib.c **** *
1338:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1339:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
1340:.\Generated_Source\PSoC4/CyLib.c **** *
1341:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1342:.\Generated_Source\PSoC4/CyLib.c **** *  None
1343:.\Generated_Source\PSoC4/CyLib.c **** *
1344:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1345:.\Generated_Source\PSoC4/CyLib.c **** *  None
1346:.\Generated_Source\PSoC4/CyLib.c **** *
1347:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 41


1348:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
1349:.\Generated_Source\PSoC4/CyLib.c **** {
 858              		.loc 1 1349 0
 859              		.cfi_startproc
1350:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
1351:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
1352:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
1353:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 860              		.loc 1 1354 0
 861 0000 034B     		ldr	r3, .L70
1355:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 862              		.loc 1 1355 0
 863 0002 0449     		ldr	r1, .L70+4
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 864              		.loc 1 1354 0
 865 0004 1A68     		ldr	r2, [r3]
1356:.\Generated_Source\PSoC4/CyLib.c **** }
 866              		.loc 1 1356 0
 867              		@ sp needed
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 868              		.loc 1 1354 0
 869 0006 92B2     		uxth	r2, r2
1355:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 870              		.loc 1 1355 0
 871 0008 0A43     		orr	r2, r1
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 872              		.loc 1 1354 0
 873 000a 1A60     		str	r2, [r3]
 874              		.loc 1 1356 0
 875 000c 7047     		bx	lr
 876              	.L71:
 877 000e C046     		.align	2
 878              	.L70:
 879 0010 0CED00E0 		.word	-536810228
 880 0014 0400FA05 		.word	100270084
 881              		.cfi_endproc
 882              	.LFE24:
 883              		.size	CySoftwareReset, .-CySoftwareReset
 884              		.section	.text.CyDelay,"ax",%progbits
 885              		.align	1
 886              		.global	CyDelay
 887              		.code	16
 888              		.thumb_func
 889              		.type	CyDelay, %function
 890              	CyDelay:
 891              	.LFB25:
1357:.\Generated_Source\PSoC4/CyLib.c **** 
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
1361:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/CyLib.c **** *
1363:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1364:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
1365:.\Generated_Source\PSoC4/CyLib.c **** *
1366:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 42


1367:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
1368:.\Generated_Source\PSoC4/CyLib.c **** *
1369:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1370:.\Generated_Source\PSoC4/CyLib.c **** *  None
1371:.\Generated_Source\PSoC4/CyLib.c **** *
1372:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1373:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
1374:.\Generated_Source\PSoC4/CyLib.c **** {
 892              		.loc 1 1374 0
 893              		.cfi_startproc
 894              	.LVL60:
 895 0000 10B5     		push	{r4, lr}
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 4, -8
 898              		.cfi_offset 14, -4
 899 0002 041C     		mov	r4, r0
 900              	.LVL61:
 901              	.L73:
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 902              		.loc 1 1375 0 discriminator 1
 903 0004 8022     		mov	r2, #128
 904 0006 074B     		ldr	r3, .L76
 905 0008 1202     		lsl	r2, r2, #8
 906 000a 9442     		cmp	r4, r2
 907 000c 05D9     		bls	.L75
1376:.\Generated_Source\PSoC4/CyLib.c ****     {
1377:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
1378:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
1379:.\Generated_Source\PSoC4/CyLib.c ****          */
1380:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 908              		.loc 1 1380 0
 909 000e 1868     		ldr	r0, [r3]
 910 0010 FFF7FEFF 		bl	CyDelayCycles
 911              	.LVL62:
1381:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 912              		.loc 1 1381 0
 913 0014 044B     		ldr	r3, .L76+4
 914 0016 E418     		add	r4, r4, r3
 915              	.LVL63:
 916 0018 F4E7     		b	.L73
 917              	.L75:
1382:.\Generated_Source\PSoC4/CyLib.c ****     }
1383:.\Generated_Source\PSoC4/CyLib.c **** 
1384:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 918              		.loc 1 1384 0
 919 001a 5868     		ldr	r0, [r3, #4]
1385:.\Generated_Source\PSoC4/CyLib.c **** }
 920              		.loc 1 1385 0
 921              		@ sp needed
1384:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 922              		.loc 1 1384 0
 923 001c 6043     		mul	r0, r4
 924 001e FFF7FEFF 		bl	CyDelayCycles
 925              	.LVL64:
 926              	.LVL65:
 927              		.loc 1 1385 0
 928 0022 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 43


 929              	.L77:
 930              		.align	2
 931              	.L76:
 932 0024 00000000 		.word	.LANCHOR0
 933 0028 0080FFFF 		.word	-32768
 934              		.cfi_endproc
 935              	.LFE25:
 936              		.size	CyDelay, .-CyDelay
 937              		.section	.text.CyDelayUs,"ax",%progbits
 938              		.align	1
 939              		.global	CyDelayUs
 940              		.code	16
 941              		.thumb_func
 942              		.type	CyDelayUs, %function
 943              	CyDelayUs:
 944              	.LFB26:
1386:.\Generated_Source\PSoC4/CyLib.c **** 
1387:.\Generated_Source\PSoC4/CyLib.c **** 
1388:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1389:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
1390:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1391:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1392:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
1393:.\Generated_Source\PSoC4/CyLib.c **** *
1394:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1395:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
1396:.\Generated_Source\PSoC4/CyLib.c **** *
1397:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1398:.\Generated_Source\PSoC4/CyLib.c **** *  None
1399:.\Generated_Source\PSoC4/CyLib.c **** *
1400:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1401:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
1402:.\Generated_Source\PSoC4/CyLib.c **** {
 945              		.loc 1 1402 0
 946              		.cfi_startproc
 947              	.LVL66:
 948 0000 08B5     		push	{r3, lr}
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 3, -8
 951              		.cfi_offset 14, -4
1403:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 952              		.loc 1 1403 0
 953 0002 034B     		ldr	r3, .L79
1404:.\Generated_Source\PSoC4/CyLib.c **** }
 954              		.loc 1 1404 0
 955              		@ sp needed
1403:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 956              		.loc 1 1403 0
 957 0004 1B7A     		ldrb	r3, [r3, #8]
 958 0006 5843     		mul	r0, r3
 959              	.LVL67:
 960 0008 FFF7FEFF 		bl	CyDelayCycles
 961              	.LVL68:
 962              		.loc 1 1404 0
 963 000c 08BD     		pop	{r3, pc}
 964              	.L80:
 965 000e C046     		.align	2
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 44


 966              	.L79:
 967 0010 00000000 		.word	.LANCHOR0
 968              		.cfi_endproc
 969              	.LFE26:
 970              		.size	CyDelayUs, .-CyDelayUs
 971              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 972              		.align	1
 973              		.global	CySysClkWriteImoFreq
 974              		.code	16
 975              		.thumb_func
 976              		.type	CySysClkWriteImoFreq, %function
 977              	CySysClkWriteImoFreq:
 978              	.LFB4:
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 979              		.loc 1 391 0
 980              		.cfi_startproc
 981              	.LVL69:
 982 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 983              		.cfi_def_cfa_offset 20
 984              		.cfi_offset 4, -20
 985              		.cfi_offset 5, -16
 986              		.cfi_offset 6, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 85B0     		sub	sp, sp, #20
 990              		.cfi_def_cfa_offset 40
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 991              		.loc 1 391 0
 992 0004 041C     		mov	r4, r0
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 993              		.loc 1 409 0
 994 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 995              	.LVL70:
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 996              		.loc 1 438 0
 997 000a E11E     		sub	r1, r4, #3
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 998              		.loc 1 409 0
 999 000c 0390     		str	r0, [sp, #12]
 1000              	.LVL71:
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 1001              		.loc 1 438 0
 1002 000e 0291     		str	r1, [sp, #8]
 1003 0010 2D29     		cmp	r1, #45
 1004 0012 5BD8     		bhi	.L82
 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 1005              		.loc 1 440 0
 1006 0014 304B     		ldr	r3, .L93
 1007 0016 1B78     		ldrb	r3, [r3]
 1008 0018 9C42     		cmp	r4, r3
 1009 001a 04D8     		bhi	.L83
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 1010              		.loc 1 442 0
 1011 001c 2F4B     		ldr	r3, .L93+4
 1012 001e 1D78     		ldrb	r5, [r3]
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1013              		.loc 1 443 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 45


 1014 0020 2F4B     		ldr	r3, .L93+8
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 1015              		.loc 1 442 0
 1016 0022 EDB2     		uxtb	r5, r5
 1017              	.LVL72:
 1018 0024 1EE0     		b	.L91
 1019              	.LVL73:
 1020              	.L83:
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 1021              		.loc 1 445 0
 1022 0026 2F4B     		ldr	r3, .L93+12
 1023 0028 1B78     		ldrb	r3, [r3]
 1024 002a 9C42     		cmp	r4, r3
 1025 002c 04D8     		bhi	.L85
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 1026              		.loc 1 447 0
 1027 002e 2E4B     		ldr	r3, .L93+16
 1028 0030 1D78     		ldrb	r5, [r3]
 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1029              		.loc 1 448 0
 1030 0032 2E4B     		ldr	r3, .L93+20
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 1031              		.loc 1 447 0
 1032 0034 EDB2     		uxtb	r5, r5
 1033              	.LVL74:
 1034 0036 15E0     		b	.L91
 1035              	.LVL75:
 1036              	.L85:
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 1037              		.loc 1 450 0
 1038 0038 2D4B     		ldr	r3, .L93+24
 1039 003a 1B78     		ldrb	r3, [r3]
 1040 003c 9C42     		cmp	r4, r3
 1041 003e 04D8     		bhi	.L86
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 1042              		.loc 1 452 0
 1043 0040 2C4B     		ldr	r3, .L93+28
 1044 0042 1D78     		ldrb	r5, [r3]
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1045              		.loc 1 453 0
 1046 0044 2C4B     		ldr	r3, .L93+32
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 1047              		.loc 1 452 0
 1048 0046 EDB2     		uxtb	r5, r5
 1049              	.LVL76:
 1050 0048 0CE0     		b	.L91
 1051              	.LVL77:
 1052              	.L86:
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 1053              		.loc 1 455 0
 1054 004a 2C4B     		ldr	r3, .L93+36
 1055 004c 1B78     		ldrb	r3, [r3]
 1056 004e 9C42     		cmp	r4, r3
 1057 0050 04D8     		bhi	.L87
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 1058              		.loc 1 457 0
 1059 0052 2B4B     		ldr	r3, .L93+40
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 46


 1060 0054 1D78     		ldrb	r5, [r3]
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1061              		.loc 1 458 0
 1062 0056 2B4B     		ldr	r3, .L93+44
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 1063              		.loc 1 457 0
 1064 0058 EDB2     		uxtb	r5, r5
 1065              	.LVL78:
 1066 005a 03E0     		b	.L91
 1067              	.LVL79:
 1068              	.L87:
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 1069              		.loc 1 462 0
 1070 005c 2A4B     		ldr	r3, .L93+48
 1071 005e 1D78     		ldrb	r5, [r3]
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1072              		.loc 1 463 0
 1073 0060 2A4B     		ldr	r3, .L93+52
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 1074              		.loc 1 462 0
 1075 0062 EDB2     		uxtb	r5, r5
 1076              	.LVL80:
 1077              	.L91:
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1078              		.loc 1 463 0
 1079 0064 1B78     		ldrb	r3, [r3]
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1080              		.loc 1 467 0
 1081 0066 029A     		ldr	r2, [sp, #8]
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1082              		.loc 1 463 0
 1083 0068 DBB2     		uxtb	r3, r3
 1084 006a 0093     		str	r3, [sp]
 1085              	.LVL81:
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1086              		.loc 1 467 0
 1087 006c 284B     		ldr	r3, .L93+56
 1088 006e 294E     		ldr	r6, .L93+60
 1089 0070 9A5C     		ldrb	r2, [r3, r2]
 1090 0072 0192     		str	r2, [sp, #4]
 1091              	.LVL82:
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1092              		.loc 1 479 0
 1093 0074 2F2A     		cmp	r2, #47
 1094 0076 04D9     		bls	.L88
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1095              		.loc 1 479 0 is_stmt 0 discriminator 1
 1096 0078 2A2C     		cmp	r4, #42
 1097 007a 02D9     		bls	.L88
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 1098              		.loc 1 482 0 is_stmt 1
 1099 007c 1927     		mov	r7, #25
 1100 007e 3760     		str	r7, [r6]
 1101 0080 08E0     		b	.L92
 1102              	.L88:
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 1103              		.loc 1 491 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 47


 1104 0082 3768     		ldr	r7, [r6]
 1105 0084 3F23     		mov	r3, #63
 1106 0086 1F40     		and	r7, r3
 1107              	.LVL83:
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 1108              		.loc 1 503 0
 1109 0088 019B     		ldr	r3, [sp, #4]
 1110 008a BB42     		cmp	r3, r7
 1111 008c 05D2     		bcs	.L89
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1112              		.loc 1 506 0
 1113 008e 214B     		ldr	r3, .L93+60
 1114 0090 0199     		ldr	r1, [sp, #4]
 1115 0092 1960     		str	r1, [r3]
 1116              	.LVL84:
 1117              	.L92:
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1118              		.loc 1 507 0
 1119 0094 0520     		mov	r0, #5
 1120 0096 FFF7FEFF 		bl	CyDelayCycles
 1121              	.LVL85:
 1122              	.L89:
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 1123              		.loc 1 511 0
 1124 009a 1C4A     		ldr	r2, .L93+52
 1125 009c 1E4B     		ldr	r3, .L93+64
 1126 009e A418     		add	r4, r4, r2
 1127              	.LVL86:
 1128 00a0 2278     		ldrb	r2, [r4]
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1129              		.loc 1 513 0
 1130 00a2 0099     		ldr	r1, [sp]
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 1131              		.loc 1 511 0
 1132 00a4 D2B2     		uxtb	r2, r2
 1133 00a6 1A60     		str	r2, [r3]
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1134              		.loc 1 512 0
 1135 00a8 1C4B     		ldr	r3, .L93+68
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1136              		.loc 1 514 0
 1137 00aa 0520     		mov	r0, #5
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1138              		.loc 1 512 0
 1139 00ac 1D60     		str	r5, [r3]
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1140              		.loc 1 513 0
 1141 00ae 1C4B     		ldr	r3, .L93+72
 1142 00b0 1960     		str	r1, [r3]
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1143              		.loc 1 514 0
 1144 00b2 FFF7FEFF 		bl	CyDelayUs
 1145              	.LVL87:
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 1146              		.loc 1 516 0
 1147 00b6 019A     		ldr	r2, [sp, #4]
 1148 00b8 BA42     		cmp	r2, r7
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 48


 1149 00ba 08D9     		bls	.L90
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1150              		.loc 1 519 0
 1151 00bc 029A     		ldr	r2, [sp, #8]
 1152 00be 1449     		ldr	r1, .L93+56
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1153              		.loc 1 520 0
 1154 00c0 0520     		mov	r0, #5
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1155              		.loc 1 519 0
 1156 00c2 8B5C     		ldrb	r3, [r1, r2]
 1157 00c4 3360     		str	r3, [r6]
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1158              		.loc 1 520 0
 1159 00c6 FFF7FEFF 		bl	CyDelayCycles
 1160              	.LVL88:
 1161 00ca 00E0     		b	.L90
 1162              	.LVL89:
 1163              	.L82:
 1164              	.LBB40:
 1165              	.LBB41:
1327:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1166              		.loc 1 1327 0
 1167              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 1168 00cc 01BE     		    bkpt    1
 1169              	@ 0 "" 2
 1170              	.LVL90:
 1171              		.code	16
 1172              	.L90:
 1173              	.LBE41:
 1174              	.LBE40:
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1175              		.loc 1 538 0
 1176 00ce 0398     		ldr	r0, [sp, #12]
 1177 00d0 FFF7FEFF 		bl	CyExitCriticalSection
 1178              	.LVL91:
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 1179              		.loc 1 539 0
 1180 00d4 05B0     		add	sp, sp, #20
 1181              		@ sp needed
 1182 00d6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1183              	.L94:
 1184              		.align	2
 1185              	.L93:
 1186 00d8 C0F1FF0F 		.word	268431808
 1187 00dc C1F1FF0F 		.word	268431809
 1188 00e0 C2F1FF0F 		.word	268431810
 1189 00e4 C3F1FF0F 		.word	268431811
 1190 00e8 C4F1FF0F 		.word	268431812
 1191 00ec C5F1FF0F 		.word	268431813
 1192 00f0 C6F1FF0F 		.word	268431814
 1193 00f4 C7F1FF0F 		.word	268431815
 1194 00f8 C8F1FF0F 		.word	268431816
 1195 00fc C9F1FF0F 		.word	268431817
 1196 0100 CAF1FF0F 		.word	268431818
 1197 0104 CBF1FF0F 		.word	268431819
 1198 0108 CCF1FF0F 		.word	268431820
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 49


 1199 010c CDF1FF0F 		.word	268431821
 1200 0110 00000000 		.word	.LANCHOR1
 1201 0114 2CFF0B40 		.word	1074528044
 1202 0118 28FF0B40 		.word	1074528040
 1203 011c 1CFF0B40 		.word	1074528028
 1204 0120 20FF0B40 		.word	1074528032
 1205              		.cfi_endproc
 1206              	.LFE4:
 1207              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1208              		.section	.text.CySysLvdEnable,"ax",%progbits
 1209              		.align	1
 1210              		.global	CySysLvdEnable
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	CySysLvdEnable, %function
 1214              	CySysLvdEnable:
 1215              	.LFB5:
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 1216              		.loc 1 849 0
 1217              		.cfi_startproc
 1218              	.LVL92:
 1219 0000 38B5     		push	{r3, r4, r5, lr}
 1220              		.cfi_def_cfa_offset 16
 1221              		.cfi_offset 3, -16
 1222              		.cfi_offset 4, -12
 1223              		.cfi_offset 5, -8
 1224              		.cfi_offset 14, -4
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1225              		.loc 1 851 0
 1226 0002 0D4C     		ldr	r4, .L96
 1227 0004 0225     		mov	r5, #2
 1228 0006 2368     		ldr	r3, [r4]
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1229              		.loc 1 855 0
 1230 0008 1E22     		mov	r2, #30
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1231              		.loc 1 851 0
 1232 000a AB43     		bic	r3, r5
 1233 000c 2360     		str	r3, [r4]
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1234              		.loc 1 854 0
 1235 000e 0B4B     		ldr	r3, .L96+4
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1236              		.loc 1 855 0
 1237 0010 4000     		lsl	r0, r0, #1
 1238              	.LVL93:
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1239              		.loc 1 854 0
 1240 0012 1968     		ldr	r1, [r3]
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1241              		.loc 1 855 0
 1242 0014 1040     		and	r0, r2
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1243              		.loc 1 854 0
 1244 0016 9143     		bic	r1, r2
 1245 0018 0843     		orr	r0, r1
 1246 001a 1860     		str	r0, [r3]
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 50


 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1247              		.loc 1 858 0
 1248 001c 1A68     		ldr	r2, [r3]
 1249 001e 0121     		mov	r1, #1
 1250 0020 0A43     		orr	r2, r1
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 1251              		.loc 1 861 0
 1252 0022 FA20     		mov	r0, #250
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1253              		.loc 1 858 0
 1254 0024 1A60     		str	r2, [r3]
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 1255              		.loc 1 861 0
 1256 0026 A840     		lsl	r0, r0, r5
 1257 0028 FFF7FEFF 		bl	CyDelayUs
 1258              	.LVL94:
 1259              	.LBB42:
 1260              	.LBB43:
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1261              		.loc 1 929 0
 1262 002c 044B     		ldr	r3, .L96+8
 1263              	.LBE43:
 1264              	.LBE42:
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 1265              		.loc 1 868 0
 1266              		@ sp needed
 1267              	.LBB45:
 1268              	.LBB44:
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1269              		.loc 1 929 0
 1270 002e 1D60     		str	r5, [r3]
 1271              	.LBE44:
 1272              	.LBE45:
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 1273              		.loc 1 867 0
 1274 0030 2368     		ldr	r3, [r4]
 1275 0032 1D43     		orr	r5, r3
 1276 0034 2560     		str	r5, [r4]
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 1277              		.loc 1 868 0
 1278 0036 38BD     		pop	{r3, r4, r5, pc}
 1279              	.L97:
 1280              		.align	2
 1281              	.L96:
 1282 0038 08000B40 		.word	1074462728
 1283 003c 18000B40 		.word	1074462744
 1284 0040 04000B40 		.word	1074462724
 1285              		.cfi_endproc
 1286              	.LFE5:
 1287              		.size	CySysLvdEnable, .-CySysLvdEnable
 1288              		.global	__aeabi_uidiv
 1289              		.section	.text.CyDelayFreq,"ax",%progbits
 1290              		.align	1
 1291              		.global	CyDelayFreq
 1292              		.code	16
 1293              		.thumb_func
 1294              		.type	CyDelayFreq, %function
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 51


 1295              	CyDelayFreq:
 1296              	.LFB27:
1405:.\Generated_Source\PSoC4/CyLib.c **** 
1406:.\Generated_Source\PSoC4/CyLib.c **** 
1407:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1408:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
1409:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1410:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1411:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
1412:.\Generated_Source\PSoC4/CyLib.c **** *
1413:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1414:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
1415:.\Generated_Source\PSoC4/CyLib.c **** *
1416:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1417:.\Generated_Source\PSoC4/CyLib.c **** *  None
1418:.\Generated_Source\PSoC4/CyLib.c **** *
1419:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1420:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
1421:.\Generated_Source\PSoC4/CyLib.c **** {
 1297              		.loc 1 1421 0
 1298              		.cfi_startproc
 1299              	.LVL95:
 1300 0000 38B5     		push	{r3, r4, r5, lr}
 1301              		.cfi_def_cfa_offset 16
 1302              		.cfi_offset 3, -16
 1303              		.cfi_offset 4, -12
 1304              		.cfi_offset 5, -8
 1305              		.cfi_offset 14, -4
 1306 0002 0C4C     		ldr	r4, .L101
1422:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1307              		.loc 1 1422 0
 1308 0004 0028     		cmp	r0, #0
 1309 0006 01D0     		beq	.L99
1423:.\Generated_Source\PSoC4/CyLib.c ****     {
1424:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1310              		.loc 1 1424 0
 1311 0008 E060     		str	r0, [r4, #12]
 1312 000a 01E0     		b	.L100
 1313              	.L99:
1425:.\Generated_Source\PSoC4/CyLib.c ****     }
1426:.\Generated_Source\PSoC4/CyLib.c ****     else
1427:.\Generated_Source\PSoC4/CyLib.c ****     {
1428:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1314              		.loc 1 1428 0
 1315 000c 0A4B     		ldr	r3, .L101+4
 1316 000e E360     		str	r3, [r4, #12]
 1317              	.L100:
1429:.\Generated_Source\PSoC4/CyLib.c ****     }
1430:.\Generated_Source\PSoC4/CyLib.c **** 
1431:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1318              		.loc 1 1431 0
 1319 0010 E568     		ldr	r5, [r4, #12]
 1320 0012 0A4B     		ldr	r3, .L101+8
 1321 0014 0A49     		ldr	r1, .L101+12
 1322 0016 E818     		add	r0, r5, r3
 1323              	.LVL96:
 1324 0018 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 52


 1325              	.LVL97:
1432:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1326              		.loc 1 1432 0
 1327 001c 094B     		ldr	r3, .L101+16
 1328 001e FA21     		mov	r1, #250
1431:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1329              		.loc 1 1431 0
 1330 0020 2072     		strb	r0, [r4, #8]
 1331              		.loc 1 1432 0
 1332 0022 8900     		lsl	r1, r1, #2
 1333 0024 E818     		add	r0, r5, r3
 1334 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1335              	.LVL98:
 1336 002a 6060     		str	r0, [r4, #4]
1433:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1337              		.loc 1 1433 0
 1338 002c C003     		lsl	r0, r0, #15
 1339 002e 2060     		str	r0, [r4]
1434:.\Generated_Source\PSoC4/CyLib.c **** }
 1340              		.loc 1 1434 0
 1341              		@ sp needed
 1342 0030 38BD     		pop	{r3, r4, r5, pc}
 1343              	.L102:
 1344 0032 C046     		.align	2
 1345              	.L101:
 1346 0034 00000000 		.word	.LANCHOR0
 1347 0038 00366E01 		.word	24000000
 1348 003c 3F420F00 		.word	999999
 1349 0040 40420F00 		.word	1000000
 1350 0044 E7030000 		.word	999
 1351              		.cfi_endproc
 1352              	.LFE27:
 1353              		.size	CyDelayFreq, .-CyDelayFreq
 1354              		.section	.text.CySysTickInit,"ax",%progbits
 1355              		.align	1
 1356              		.global	CySysTickInit
 1357              		.code	16
 1358              		.thumb_func
 1359              		.type	CySysTickInit, %function
 1360              	CySysTickInit:
 1361              	.LFB29:
1435:.\Generated_Source\PSoC4/CyLib.c **** 
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1438:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
1439:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1440:.\Generated_Source\PSoC4/CyLib.c **** *
1441:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1442:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
1443:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
1444:.\Generated_Source\PSoC4/CyLib.c **** *
1445:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1446:.\Generated_Source\PSoC4/CyLib.c **** *  None
1447:.\Generated_Source\PSoC4/CyLib.c **** *
1448:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1449:.\Generated_Source\PSoC4/CyLib.c **** *  None
1450:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 53


1451:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1452:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1453:.\Generated_Source\PSoC4/CyLib.c **** *
1454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1455:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
1456:.\Generated_Source\PSoC4/CyLib.c **** {
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
1458:.\Generated_Source\PSoC4/CyLib.c ****     {
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
1461:.\Generated_Source\PSoC4/CyLib.c ****     }
1462:.\Generated_Source\PSoC4/CyLib.c **** 
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
1464:.\Generated_Source\PSoC4/CyLib.c **** }
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c **** 
1467:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1468:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
1469:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1470:.\Generated_Source\PSoC4/CyLib.c **** *
1471:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1472:.\Generated_Source\PSoC4/CyLib.c **** *  Sets CySysTickServiceCallbacks() as an ISR for the SysTick exception.
1473:.\Generated_Source\PSoC4/CyLib.c **** *  The clock source for the SysTick counter is set to the System Clock.
1474:.\Generated_Source\PSoC4/CyLib.c **** *  The SysTick reload value is configured for the timer to generate interrupt
1475:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms. The System clock value is on the global variables cydelayFreqHz.
1476:.\Generated_Source\PSoC4/CyLib.c **** *  User is responsible for calling CyDelayFreq() function.
1477:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes CySysTickCallbacks array.
1478:.\Generated_Source\PSoC4/CyLib.c **** *
1479:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1480:.\Generated_Source\PSoC4/CyLib.c **** *  None
1481:.\Generated_Source\PSoC4/CyLib.c **** *
1482:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1483:.\Generated_Source\PSoC4/CyLib.c **** *  None
1484:.\Generated_Source\PSoC4/CyLib.c **** *
1485:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1486:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1487:.\Generated_Source\PSoC4/CyLib.c **** *
1488:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1489:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
1490:.\Generated_Source\PSoC4/CyLib.c **** {
 1362              		.loc 1 1490 0
 1363              		.cfi_startproc
 1364              	.LVL99:
1491:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1492:.\Generated_Source\PSoC4/CyLib.c **** 
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1494:.\Generated_Source\PSoC4/CyLib.c ****     {
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1365              		.loc 1 1495 0
 1366 0000 0C4B     		ldr	r3, .L104
1490:.\Generated_Source\PSoC4/CyLib.c **** {
 1367              		.loc 1 1490 0
 1368 0002 10B5     		push	{r4, lr}
 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 4, -8
 1371              		.cfi_offset 14, -4
 1372              		.loc 1 1495 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 54


 1373 0004 0024     		mov	r4, #0
 1374 0006 1C60     		str	r4, [r3]
 1375              	.LVL100:
 1376 0008 DC60     		str	r4, [r3, #12]
 1377              	.LBB56:
 1378              	.LBB57:
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1379              		.loc 1 1049 0
 1380 000a 0B4A     		ldr	r2, .L104+4
 1381              	.LBE57:
 1382              	.LBE56:
 1383              		.loc 1 1495 0
 1384 000c 5C60     		str	r4, [r3, #4]
 1385              	.LVL101:
 1386 000e 9C60     		str	r4, [r3, #8]
 1387              	.LVL102:
 1388 0010 1C61     		str	r4, [r3, #16]
 1389              	.LVL103:
 1390              	.LBB60:
 1391              	.LBB58:
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1392              		.loc 1 1049 0
 1393 0012 0A4B     		ldr	r3, .L104+8
 1394              	.LVL104:
 1395              	.LBE58:
 1396              	.LBE60:
1496:.\Generated_Source\PSoC4/CyLib.c ****     }
1497:.\Generated_Source\PSoC4/CyLib.c **** 
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****     #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1501:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
1502:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1503:.\Generated_Source\PSoC4/CyLib.c **** 
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1397              		.loc 1 1504 0
 1398 0014 FA21     		mov	r1, #250
 1399              	.LBB61:
 1400              	.LBB59:
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1401              		.loc 1 1049 0
 1402 0016 1A60     		str	r2, [r3]
 1403              	.LVL105:
 1404              	.LBE59:
 1405              	.LBE61:
 1406              		.loc 1 1504 0
 1407 0018 094B     		ldr	r3, .L104+12
 1408 001a 8900     		lsl	r1, r1, #2
 1409 001c D868     		ldr	r0, [r3, #12]
 1410 001e FFF7FEFF 		bl	__aeabi_uidiv
 1411              	.LVL106:
 1412              	.LBB62:
 1413              	.LBB63:
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
1507:.\Generated_Source\PSoC4/CyLib.c **** }
1508:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 55


1509:.\Generated_Source\PSoC4/CyLib.c **** 
1510:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1511:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
1512:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1513:.\Generated_Source\PSoC4/CyLib.c **** *
1514:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1515:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
1516:.\Generated_Source\PSoC4/CyLib.c **** *
1517:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1518:.\Generated_Source\PSoC4/CyLib.c **** *  None
1519:.\Generated_Source\PSoC4/CyLib.c **** *
1520:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1521:.\Generated_Source\PSoC4/CyLib.c **** *  None
1522:.\Generated_Source\PSoC4/CyLib.c **** *
1523:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1524:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1525:.\Generated_Source\PSoC4/CyLib.c **** *
1526:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1527:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
1528:.\Generated_Source\PSoC4/CyLib.c **** {
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
1531:.\Generated_Source\PSoC4/CyLib.c **** }
1532:.\Generated_Source\PSoC4/CyLib.c **** 
1533:.\Generated_Source\PSoC4/CyLib.c **** 
1534:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
1536:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1537:.\Generated_Source\PSoC4/CyLib.c **** *
1538:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1539:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
1540:.\Generated_Source\PSoC4/CyLib.c **** *
1541:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1542:.\Generated_Source\PSoC4/CyLib.c **** *  None
1543:.\Generated_Source\PSoC4/CyLib.c **** *
1544:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1545:.\Generated_Source\PSoC4/CyLib.c **** *  None
1546:.\Generated_Source\PSoC4/CyLib.c **** *
1547:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1548:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1549:.\Generated_Source\PSoC4/CyLib.c **** *
1550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1551:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
1552:.\Generated_Source\PSoC4/CyLib.c **** {
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
1554:.\Generated_Source\PSoC4/CyLib.c **** }
1555:.\Generated_Source\PSoC4/CyLib.c **** 
1556:.\Generated_Source\PSoC4/CyLib.c **** 
1557:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
1559:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1560:.\Generated_Source\PSoC4/CyLib.c **** *
1561:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1562:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
1563:.\Generated_Source\PSoC4/CyLib.c **** *
1564:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1565:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 56


1566:.\Generated_Source\PSoC4/CyLib.c **** *
1567:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1568:.\Generated_Source\PSoC4/CyLib.c **** *  None
1569:.\Generated_Source\PSoC4/CyLib.c **** *
1570:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1571:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1572:.\Generated_Source\PSoC4/CyLib.c **** *
1573:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
1575:.\Generated_Source\PSoC4/CyLib.c **** {
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
1577:.\Generated_Source\PSoC4/CyLib.c **** }
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c **** 
1580:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1581:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
1582:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1583:.\Generated_Source\PSoC4/CyLib.c **** *
1584:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1585:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
1586:.\Generated_Source\PSoC4/CyLib.c **** *
1587:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1588:.\Generated_Source\PSoC4/CyLib.c **** *  None
1589:.\Generated_Source\PSoC4/CyLib.c **** *
1590:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1591:.\Generated_Source\PSoC4/CyLib.c **** *  None
1592:.\Generated_Source\PSoC4/CyLib.c **** *
1593:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1594:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1595:.\Generated_Source\PSoC4/CyLib.c **** *
1596:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1597:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
1598:.\Generated_Source\PSoC4/CyLib.c **** {
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
1600:.\Generated_Source\PSoC4/CyLib.c **** }
1601:.\Generated_Source\PSoC4/CyLib.c **** 
1602:.\Generated_Source\PSoC4/CyLib.c **** 
1603:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1604:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
1605:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c **** *
1607:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1608:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
1609:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
1610:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
1611:.\Generated_Source\PSoC4/CyLib.c **** *
1612:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1613:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
1614:.\Generated_Source\PSoC4/CyLib.c **** *
1615:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1616:.\Generated_Source\PSoC4/CyLib.c **** *  None
1617:.\Generated_Source\PSoC4/CyLib.c **** *
1618:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1619:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
1620:.\Generated_Source\PSoC4/CyLib.c **** {
1621:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1414              		.loc 1 1621 0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 57


 1415 0022 084B     		ldr	r3, .L104+16
 1416              	.LBE63:
 1417              	.LBE62:
 1418              	.LBB65:
 1419              	.LBB66:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1420              		.loc 1 1219 0
 1421 0024 8022     		mov	r2, #128
 1422              	.LBE66:
 1423              	.LBE65:
 1424              	.LBB70:
 1425              	.LBB64:
 1426              		.loc 1 1621 0
 1427 0026 1860     		str	r0, [r3]
 1428              	.LBE64:
 1429              	.LBE70:
 1430              	.LBB71:
 1431              	.LBB72:
1622:.\Generated_Source\PSoC4/CyLib.c **** }
1623:.\Generated_Source\PSoC4/CyLib.c **** 
1624:.\Generated_Source\PSoC4/CyLib.c **** 
1625:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1626:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
1627:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c **** *
1629:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1630:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
1631:.\Generated_Source\PSoC4/CyLib.c **** *
1632:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1633:.\Generated_Source\PSoC4/CyLib.c **** *  None
1634:.\Generated_Source\PSoC4/CyLib.c **** *
1635:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1636:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
1637:.\Generated_Source\PSoC4/CyLib.c **** *
1638:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1639:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
1640:.\Generated_Source\PSoC4/CyLib.c **** {
1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
1642:.\Generated_Source\PSoC4/CyLib.c **** }
1643:.\Generated_Source\PSoC4/CyLib.c **** 
1644:.\Generated_Source\PSoC4/CyLib.c **** 
1645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
1647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1648:.\Generated_Source\PSoC4/CyLib.c **** *
1649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1650:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
1651:.\Generated_Source\PSoC4/CyLib.c **** *
1652:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1653:.\Generated_Source\PSoC4/CyLib.c **** *  None
1654:.\Generated_Source\PSoC4/CyLib.c **** *
1655:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1656:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
1657:.\Generated_Source\PSoC4/CyLib.c **** *
1658:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1659:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
1660:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 58


1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
1662:.\Generated_Source\PSoC4/CyLib.c **** }
1663:.\Generated_Source\PSoC4/CyLib.c **** 
1664:.\Generated_Source\PSoC4/CyLib.c **** 
1665:.\Generated_Source\PSoC4/CyLib.c **** #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1666:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1667:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
1668:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1669:.\Generated_Source\PSoC4/CyLib.c ****     *
1670:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1671:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1674:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
1675:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
1676:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
1677:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
1678:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
1679:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
1680:.\Generated_Source\PSoC4/CyLib.c ****     *
1681:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1682:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1683:.\Generated_Source\PSoC4/CyLib.c ****     *
1684:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1685:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
1686:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
1687:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
1688:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly bigger and vice versa.
1689:.\Generated_Source\PSoC4/CyLib.c ****     *
1690:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1691:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
1692:.\Generated_Source\PSoC4/CyLib.c ****     {
1693:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
1694:.\Generated_Source\PSoC4/CyLib.c ****         {
1695:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
1696:.\Generated_Source\PSoC4/CyLib.c ****         }
1697:.\Generated_Source\PSoC4/CyLib.c ****         else
1698:.\Generated_Source\PSoC4/CyLib.c ****         {
1699:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
1700:.\Generated_Source\PSoC4/CyLib.c ****         }
1701:.\Generated_Source\PSoC4/CyLib.c ****     }
1702:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1703:.\Generated_Source\PSoC4/CyLib.c **** 
1704:.\Generated_Source\PSoC4/CyLib.c **** 
1705:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1706:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
1707:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1708:.\Generated_Source\PSoC4/CyLib.c **** *
1709:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1710:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
1711:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
1712:.\Generated_Source\PSoC4/CyLib.c **** *
1713:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1714:.\Generated_Source\PSoC4/CyLib.c **** *  None
1715:.\Generated_Source\PSoC4/CyLib.c **** *
1716:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1717:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 59


1718:.\Generated_Source\PSoC4/CyLib.c **** *
1719:.\Generated_Source\PSoC4/CyLib.c **** *
1720:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1721:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1722:.\Generated_Source\PSoC4/CyLib.c **** *
1723:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1724:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
1725:.\Generated_Source\PSoC4/CyLib.c **** {
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
1727:.\Generated_Source\PSoC4/CyLib.c **** }
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
1732:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c **** *
1734:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
1736:.\Generated_Source\PSoC4/CyLib.c **** *
1737:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1738:.\Generated_Source\PSoC4/CyLib.c **** *  None
1739:.\Generated_Source\PSoC4/CyLib.c **** *
1740:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1741:.\Generated_Source\PSoC4/CyLib.c **** *  None
1742:.\Generated_Source\PSoC4/CyLib.c **** *
1743:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1744:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
1745:.\Generated_Source\PSoC4/CyLib.c **** {
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1432              		.loc 1 1746 0
 1433 0028 074B     		ldr	r3, .L104+20
 1434              	.LBE72:
 1435              	.LBE71:
 1436              	.LBB74:
 1437              	.LBB67:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1438              		.loc 1 1219 0
 1439 002a 1202     		lsl	r2, r2, #8
 1440              	.LBE67:
 1441              	.LBE74:
 1442              	.LBB75:
 1443              	.LBB73:
 1444              		.loc 1 1746 0
 1445 002c 1C60     		str	r4, [r3]
 1446              	.LVL107:
 1447              	.LBE73:
 1448              	.LBE75:
 1449              	.LBB76:
 1450              	.LBB68:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1451              		.loc 1 1219 0
 1452 002e 074B     		ldr	r3, .L104+24
 1453              	.LBE68:
 1454              	.LBE76:
1507:.\Generated_Source\PSoC4/CyLib.c **** }
 1455              		.loc 1 1507 0
 1456              		@ sp needed
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 60


 1457              	.LBB77:
 1458              	.LBB69:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1459              		.loc 1 1219 0
 1460 0030 1A60     		str	r2, [r3]
 1461              	.LBE69:
 1462              	.LBE77:
1507:.\Generated_Source\PSoC4/CyLib.c **** }
 1463              		.loc 1 1507 0
 1464 0032 10BD     		pop	{r4, pc}
 1465              	.L105:
 1466              		.align	2
 1467              	.L104:
 1468 0034 00000000 		.word	.LANCHOR2
 1469 0038 00000000 		.word	CySysTickServiceCallbacks
 1470 003c 3C000020 		.word	536870972
 1471 0040 00000000 		.word	.LANCHOR0
 1472 0044 14E000E0 		.word	-536813548
 1473 0048 18E000E0 		.word	-536813544
 1474 004c 00E100E0 		.word	-536813312
 1475              		.cfi_endproc
 1476              	.LFE29:
 1477              		.size	CySysTickInit, .-CySysTickInit
 1478              		.section	.text.CySysTickStop,"ax",%progbits
 1479              		.align	1
 1480              		.global	CySysTickStop
 1481              		.code	16
 1482              		.thumb_func
 1483              		.type	CySysTickStop, %function
 1484              	CySysTickStop:
 1485              	.LFB31:
1552:.\Generated_Source\PSoC4/CyLib.c **** {
 1486              		.loc 1 1552 0
 1487              		.cfi_startproc
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1488              		.loc 1 1553 0
 1489 0000 024B     		ldr	r3, .L107
 1490 0002 0121     		mov	r1, #1
 1491 0004 1A68     		ldr	r2, [r3]
1554:.\Generated_Source\PSoC4/CyLib.c **** }
 1492              		.loc 1 1554 0
 1493              		@ sp needed
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1494              		.loc 1 1553 0
 1495 0006 8A43     		bic	r2, r1
 1496 0008 1A60     		str	r2, [r3]
1554:.\Generated_Source\PSoC4/CyLib.c **** }
 1497              		.loc 1 1554 0
 1498 000a 7047     		bx	lr
 1499              	.L108:
 1500              		.align	2
 1501              	.L107:
 1502 000c 10E000E0 		.word	-536813552
 1503              		.cfi_endproc
 1504              	.LFE31:
 1505              		.size	CySysTickStop, .-CySysTickStop
 1506              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 61


 1507              		.align	1
 1508              		.global	CySysTickEnableInterrupt
 1509              		.code	16
 1510              		.thumb_func
 1511              		.type	CySysTickEnableInterrupt, %function
 1512              	CySysTickEnableInterrupt:
 1513              	.LFB32:
1575:.\Generated_Source\PSoC4/CyLib.c **** {
 1514              		.loc 1 1575 0
 1515              		.cfi_startproc
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1516              		.loc 1 1576 0
 1517 0000 024B     		ldr	r3, .L110
 1518 0002 0221     		mov	r1, #2
 1519 0004 1A68     		ldr	r2, [r3]
1577:.\Generated_Source\PSoC4/CyLib.c **** }
 1520              		.loc 1 1577 0
 1521              		@ sp needed
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1522              		.loc 1 1576 0
 1523 0006 0A43     		orr	r2, r1
 1524 0008 1A60     		str	r2, [r3]
1577:.\Generated_Source\PSoC4/CyLib.c **** }
 1525              		.loc 1 1577 0
 1526 000a 7047     		bx	lr
 1527              	.L111:
 1528              		.align	2
 1529              	.L110:
 1530 000c 10E000E0 		.word	-536813552
 1531              		.cfi_endproc
 1532              	.LFE32:
 1533              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1534              		.section	.text.CySysTickEnable,"ax",%progbits
 1535              		.align	1
 1536              		.global	CySysTickEnable
 1537              		.code	16
 1538              		.thumb_func
 1539              		.type	CySysTickEnable, %function
 1540              	CySysTickEnable:
 1541              	.LFB30:
1528:.\Generated_Source\PSoC4/CyLib.c **** {
 1542              		.loc 1 1528 0
 1543              		.cfi_startproc
 1544 0000 08B5     		push	{r3, lr}
 1545              		.cfi_def_cfa_offset 8
 1546              		.cfi_offset 3, -8
 1547              		.cfi_offset 14, -4
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1548              		.loc 1 1529 0
 1549 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1550              	.LVL108:
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1551              		.loc 1 1530 0
 1552 0006 034B     		ldr	r3, .L113
 1553 0008 0121     		mov	r1, #1
 1554 000a 1A68     		ldr	r2, [r3]
1531:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 62


 1555              		.loc 1 1531 0
 1556              		@ sp needed
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1557              		.loc 1 1530 0
 1558 000c 0A43     		orr	r2, r1
 1559 000e 1A60     		str	r2, [r3]
1531:.\Generated_Source\PSoC4/CyLib.c **** }
 1560              		.loc 1 1531 0
 1561 0010 08BD     		pop	{r3, pc}
 1562              	.L114:
 1563 0012 C046     		.align	2
 1564              	.L113:
 1565 0014 10E000E0 		.word	-536813552
 1566              		.cfi_endproc
 1567              	.LFE30:
 1568              		.size	CySysTickEnable, .-CySysTickEnable
 1569              		.section	.text.CySysTickStart,"ax",%progbits
 1570              		.align	1
 1571              		.global	CySysTickStart
 1572              		.code	16
 1573              		.thumb_func
 1574              		.type	CySysTickStart, %function
 1575              	CySysTickStart:
 1576              	.LFB28:
1456:.\Generated_Source\PSoC4/CyLib.c **** {
 1577              		.loc 1 1456 0
 1578              		.cfi_startproc
 1579 0000 10B5     		push	{r4, lr}
 1580              		.cfi_def_cfa_offset 8
 1581              		.cfi_offset 4, -8
 1582              		.cfi_offset 14, -4
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1583              		.loc 1 1457 0
 1584 0002 054C     		ldr	r4, .L117
 1585 0004 6369     		ldr	r3, [r4, #20]
 1586 0006 002B     		cmp	r3, #0
 1587 0008 03D1     		bne	.L116
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1588              		.loc 1 1459 0
 1589 000a FFF7FEFF 		bl	CySysTickInit
 1590              	.LVL109:
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1591              		.loc 1 1460 0
 1592 000e 0123     		mov	r3, #1
 1593 0010 6361     		str	r3, [r4, #20]
 1594              	.L116:
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1595              		.loc 1 1463 0
 1596 0012 FFF7FEFF 		bl	CySysTickEnable
 1597              	.LVL110:
1464:.\Generated_Source\PSoC4/CyLib.c **** }
 1598              		.loc 1 1464 0
 1599              		@ sp needed
 1600 0016 10BD     		pop	{r4, pc}
 1601              	.L118:
 1602              		.align	2
 1603              	.L117:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 63


 1604 0018 00000000 		.word	.LANCHOR2
 1605              		.cfi_endproc
 1606              	.LFE28:
 1607              		.size	CySysTickStart, .-CySysTickStart
 1608              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1609              		.align	1
 1610              		.global	CySysTickDisableInterrupt
 1611              		.code	16
 1612              		.thumb_func
 1613              		.type	CySysTickDisableInterrupt, %function
 1614              	CySysTickDisableInterrupt:
 1615              	.LFB33:
1598:.\Generated_Source\PSoC4/CyLib.c **** {
 1616              		.loc 1 1598 0
 1617              		.cfi_startproc
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1618              		.loc 1 1599 0
 1619 0000 024B     		ldr	r3, .L120
 1620 0002 0221     		mov	r1, #2
 1621 0004 1A68     		ldr	r2, [r3]
1600:.\Generated_Source\PSoC4/CyLib.c **** }
 1622              		.loc 1 1600 0
 1623              		@ sp needed
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1624              		.loc 1 1599 0
 1625 0006 8A43     		bic	r2, r1
 1626 0008 1A60     		str	r2, [r3]
1600:.\Generated_Source\PSoC4/CyLib.c **** }
 1627              		.loc 1 1600 0
 1628 000a 7047     		bx	lr
 1629              	.L121:
 1630              		.align	2
 1631              	.L120:
 1632 000c 10E000E0 		.word	-536813552
 1633              		.cfi_endproc
 1634              	.LFE33:
 1635              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1636              		.section	.text.CySysTickSetReload,"ax",%progbits
 1637              		.align	1
 1638              		.global	CySysTickSetReload
 1639              		.code	16
 1640              		.thumb_func
 1641              		.type	CySysTickSetReload, %function
 1642              	CySysTickSetReload:
 1643              	.LFB34:
1620:.\Generated_Source\PSoC4/CyLib.c **** {
 1644              		.loc 1 1620 0
 1645              		.cfi_startproc
 1646              	.LVL111:
1621:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1647              		.loc 1 1621 0
 1648 0000 024B     		ldr	r3, .L123
 1649 0002 0002     		lsl	r0, r0, #8
 1650              	.LVL112:
 1651 0004 000A     		lsr	r0, r0, #8
 1652 0006 1860     		str	r0, [r3]
1622:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 64


 1653              		.loc 1 1622 0
 1654              		@ sp needed
 1655 0008 7047     		bx	lr
 1656              	.L124:
 1657 000a C046     		.align	2
 1658              	.L123:
 1659 000c 14E000E0 		.word	-536813548
 1660              		.cfi_endproc
 1661              	.LFE34:
 1662              		.size	CySysTickSetReload, .-CySysTickSetReload
 1663              		.section	.text.CySysTickGetReload,"ax",%progbits
 1664              		.align	1
 1665              		.global	CySysTickGetReload
 1666              		.code	16
 1667              		.thumb_func
 1668              		.type	CySysTickGetReload, %function
 1669              	CySysTickGetReload:
 1670              	.LFB35:
1640:.\Generated_Source\PSoC4/CyLib.c **** {
 1671              		.loc 1 1640 0
 1672              		.cfi_startproc
1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1673              		.loc 1 1641 0
 1674 0000 024B     		ldr	r3, .L126
1642:.\Generated_Source\PSoC4/CyLib.c **** }
 1675              		.loc 1 1642 0
 1676              		@ sp needed
1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1677              		.loc 1 1641 0
 1678 0002 1868     		ldr	r0, [r3]
 1679 0004 0002     		lsl	r0, r0, #8
 1680 0006 000A     		lsr	r0, r0, #8
1642:.\Generated_Source\PSoC4/CyLib.c **** }
 1681              		.loc 1 1642 0
 1682 0008 7047     		bx	lr
 1683              	.L127:
 1684 000a C046     		.align	2
 1685              	.L126:
 1686 000c 14E000E0 		.word	-536813548
 1687              		.cfi_endproc
 1688              	.LFE35:
 1689              		.size	CySysTickGetReload, .-CySysTickGetReload
 1690              		.section	.text.CySysTickGetValue,"ax",%progbits
 1691              		.align	1
 1692              		.global	CySysTickGetValue
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	CySysTickGetValue, %function
 1696              	CySysTickGetValue:
 1697              	.LFB36:
1660:.\Generated_Source\PSoC4/CyLib.c **** {
 1698              		.loc 1 1660 0
 1699              		.cfi_startproc
1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1700              		.loc 1 1661 0
 1701 0000 024B     		ldr	r3, .L129
1662:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 65


 1702              		.loc 1 1662 0
 1703              		@ sp needed
1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1704              		.loc 1 1661 0
 1705 0002 1868     		ldr	r0, [r3]
 1706 0004 0002     		lsl	r0, r0, #8
 1707 0006 000A     		lsr	r0, r0, #8
1662:.\Generated_Source\PSoC4/CyLib.c **** }
 1708              		.loc 1 1662 0
 1709 0008 7047     		bx	lr
 1710              	.L130:
 1711 000a C046     		.align	2
 1712              	.L129:
 1713 000c 18E000E0 		.word	-536813544
 1714              		.cfi_endproc
 1715              	.LFE36:
 1716              		.size	CySysTickGetValue, .-CySysTickGetValue
 1717              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1718              		.align	1
 1719              		.global	CySysTickGetCountFlag
 1720              		.code	16
 1721              		.thumb_func
 1722              		.type	CySysTickGetCountFlag, %function
 1723              	CySysTickGetCountFlag:
 1724              	.LFB37:
1725:.\Generated_Source\PSoC4/CyLib.c **** {
 1725              		.loc 1 1725 0
 1726              		.cfi_startproc
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1727              		.loc 1 1726 0
 1728 0000 024B     		ldr	r3, .L132
1727:.\Generated_Source\PSoC4/CyLib.c **** }
 1729              		.loc 1 1727 0
 1730              		@ sp needed
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1731              		.loc 1 1726 0
 1732 0002 1868     		ldr	r0, [r3]
 1733 0004 C003     		lsl	r0, r0, #15
 1734 0006 C00F     		lsr	r0, r0, #31
1727:.\Generated_Source\PSoC4/CyLib.c **** }
 1735              		.loc 1 1727 0
 1736 0008 7047     		bx	lr
 1737              	.L133:
 1738 000a C046     		.align	2
 1739              	.L132:
 1740 000c 10E000E0 		.word	-536813552
 1741              		.cfi_endproc
 1742              	.LFE37:
 1743              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1744              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1745              		.align	1
 1746              		.code	16
 1747              		.thumb_func
 1748              		.type	CySysTickServiceCallbacks, %function
 1749              	CySysTickServiceCallbacks:
 1750              	.LFB41:
1747:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 66


1748:.\Generated_Source\PSoC4/CyLib.c **** 
1749:.\Generated_Source\PSoC4/CyLib.c **** 
1750:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1751:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
1752:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1753:.\Generated_Source\PSoC4/CyLib.c **** *
1754:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1755:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
1756:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
1757:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
1758:.\Generated_Source\PSoC4/CyLib.c **** *
1759:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
1760:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
1761:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
1762:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
1763:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
1764:.\Generated_Source\PSoC4/CyLib.c **** *
1765:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1766:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
1767:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1768:.\Generated_Source\PSoC4/CyLib.c **** *
1769:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
1770:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
1771:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
1772:.\Generated_Source\PSoC4/CyLib.c **** *
1773:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1774:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
1775:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
1776:.\Generated_Source\PSoC4/CyLib.c **** *
1777:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1778:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
1779:.\Generated_Source\PSoC4/CyLib.c **** *
1780:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1781:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
1782:.\Generated_Source\PSoC4/CyLib.c **** {
1783:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
1787:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
1788:.\Generated_Source\PSoC4/CyLib.c **** }
1789:.\Generated_Source\PSoC4/CyLib.c **** 
1790:.\Generated_Source\PSoC4/CyLib.c **** 
1791:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1792:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
1793:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1794:.\Generated_Source\PSoC4/CyLib.c **** *
1795:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1796:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
1797:.\Generated_Source\PSoC4/CyLib.c **** *
1798:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1799:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
1800:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1801:.\Generated_Source\PSoC4/CyLib.c **** *
1802:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1803:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
1804:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 67


1805:.\Generated_Source\PSoC4/CyLib.c **** *
1806:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1807:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
1808:.\Generated_Source\PSoC4/CyLib.c **** {
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
1810:.\Generated_Source\PSoC4/CyLib.c **** }
1811:.\Generated_Source\PSoC4/CyLib.c **** 
1812:.\Generated_Source\PSoC4/CyLib.c **** 
1813:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1814:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
1815:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1816:.\Generated_Source\PSoC4/CyLib.c **** *
1817:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1818:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
1819:.\Generated_Source\PSoC4/CyLib.c **** *
1820:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1821:.\Generated_Source\PSoC4/CyLib.c **** *  None
1822:.\Generated_Source\PSoC4/CyLib.c **** *
1823:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1824:.\Generated_Source\PSoC4/CyLib.c **** *  None
1825:.\Generated_Source\PSoC4/CyLib.c **** *
1826:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1827:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
1828:.\Generated_Source\PSoC4/CyLib.c **** {
 1751              		.loc 1 1828 0
 1752              		.cfi_startproc
 1753 0000 10B5     		push	{r4, lr}
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 4, -8
 1756              		.cfi_offset 14, -4
1829:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1830:.\Generated_Source\PSoC4/CyLib.c **** 
1831:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
1832:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1757              		.loc 1 1832 0
 1758 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1759              	.LVL113:
 1760 0006 0128     		cmp	r0, #1
 1761 0008 08D1     		bne	.L134
 1762 000a 0024     		mov	r4, #0
 1763              	.L138:
 1764              	.LBB80:
1833:.\Generated_Source\PSoC4/CyLib.c ****     {
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1765              		.loc 1 1836 0
 1766 000c 044B     		ldr	r3, .L145
 1767 000e E358     		ldr	r3, [r4, r3]
 1768 0010 002B     		cmp	r3, #0
 1769 0012 00D0     		beq	.L136
1837:.\Generated_Source\PSoC4/CyLib.c ****             {
1838:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1770              		.loc 1 1838 0
 1771 0014 9847     		blx	r3
 1772              	.LVL114:
 1773              	.L136:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 68


 1774 0016 0434     		add	r4, r4, #4
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1775              		.loc 1 1834 0
 1776 0018 142C     		cmp	r4, #20
 1777 001a F7D1     		bne	.L138
 1778              	.L134:
 1779              	.LBE80:
1839:.\Generated_Source\PSoC4/CyLib.c ****             }
1840:.\Generated_Source\PSoC4/CyLib.c ****         }
1841:.\Generated_Source\PSoC4/CyLib.c ****     }
1842:.\Generated_Source\PSoC4/CyLib.c **** }
 1780              		.loc 1 1842 0
 1781              		@ sp needed
 1782 001c 10BD     		pop	{r4, pc}
 1783              	.L146:
 1784 001e C046     		.align	2
 1785              	.L145:
 1786 0020 00000000 		.word	.LANCHOR2
 1787              		.cfi_endproc
 1788              	.LFE41:
 1789              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1790              		.section	.text.CySysTickClear,"ax",%progbits
 1791              		.align	1
 1792              		.global	CySysTickClear
 1793              		.code	16
 1794              		.thumb_func
 1795              		.type	CySysTickClear, %function
 1796              	CySysTickClear:
 1797              	.LFB38:
1745:.\Generated_Source\PSoC4/CyLib.c **** {
 1798              		.loc 1 1745 0
 1799              		.cfi_startproc
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1800              		.loc 1 1746 0
 1801 0000 014B     		ldr	r3, .L148
 1802 0002 0022     		mov	r2, #0
 1803 0004 1A60     		str	r2, [r3]
1747:.\Generated_Source\PSoC4/CyLib.c **** }
 1804              		.loc 1 1747 0
 1805              		@ sp needed
 1806 0006 7047     		bx	lr
 1807              	.L149:
 1808              		.align	2
 1809              	.L148:
 1810 0008 18E000E0 		.word	-536813544
 1811              		.cfi_endproc
 1812              	.LFE38:
 1813              		.size	CySysTickClear, .-CySysTickClear
 1814              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1815              		.align	1
 1816              		.global	CySysTickSetCallback
 1817              		.code	16
 1818              		.thumb_func
 1819              		.type	CySysTickSetCallback, %function
 1820              	CySysTickSetCallback:
 1821              	.LFB39:
1782:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 69


 1822              		.loc 1 1782 0
 1823              		.cfi_startproc
 1824              	.LVL115:
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 1825              		.loc 1 1785 0
 1826 0000 024B     		ldr	r3, .L151
 1827 0002 8200     		lsl	r2, r0, #2
 1828 0004 D058     		ldr	r0, [r2, r3]
 1829              	.LVL116:
1788:.\Generated_Source\PSoC4/CyLib.c **** }
 1830              		.loc 1 1788 0
 1831              		@ sp needed
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1832              		.loc 1 1786 0
 1833 0006 D150     		str	r1, [r2, r3]
1788:.\Generated_Source\PSoC4/CyLib.c **** }
 1834              		.loc 1 1788 0
 1835 0008 7047     		bx	lr
 1836              	.L152:
 1837 000a C046     		.align	2
 1838              	.L151:
 1839 000c 00000000 		.word	.LANCHOR2
 1840              		.cfi_endproc
 1841              	.LFE39:
 1842              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1843              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1844              		.align	1
 1845              		.global	CySysTickGetCallback
 1846              		.code	16
 1847              		.thumb_func
 1848              		.type	CySysTickGetCallback, %function
 1849              	CySysTickGetCallback:
 1850              	.LFB40:
1808:.\Generated_Source\PSoC4/CyLib.c **** {
 1851              		.loc 1 1808 0
 1852              		.cfi_startproc
 1853              	.LVL117:
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1854              		.loc 1 1809 0
 1855 0000 014B     		ldr	r3, .L154
 1856 0002 8000     		lsl	r0, r0, #2
 1857              	.LVL118:
 1858 0004 C058     		ldr	r0, [r0, r3]
1810:.\Generated_Source\PSoC4/CyLib.c **** }
 1859              		.loc 1 1810 0
 1860              		@ sp needed
 1861 0006 7047     		bx	lr
 1862              	.L155:
 1863              		.align	2
 1864              	.L154:
 1865 0008 00000000 		.word	.LANCHOR2
 1866              		.cfi_endproc
 1867              	.LFE40:
 1868              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1869              		.section	.text.CyGetUniqueId,"ax",%progbits
 1870              		.align	1
 1871              		.global	CyGetUniqueId
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 70


 1872              		.code	16
 1873              		.thumb_func
 1874              		.type	CyGetUniqueId, %function
 1875              	CyGetUniqueId:
 1876              	.LFB42:
1843:.\Generated_Source\PSoC4/CyLib.c **** 
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1846:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
1847:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1848:.\Generated_Source\PSoC4/CyLib.c **** *
1849:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1850:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
1851:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
1852:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
1853:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
1854:.\Generated_Source\PSoC4/CyLib.c **** *
1855:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1856:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
1857:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
1858:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
1859:.\Generated_Source\PSoC4/CyLib.c **** *
1860:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1861:.\Generated_Source\PSoC4/CyLib.c **** *  None
1862:.\Generated_Source\PSoC4/CyLib.c **** *
1863:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1864:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
1865:.\Generated_Source\PSoC4/CyLib.c **** {
 1877              		.loc 1 1865 0
 1878              		.cfi_startproc
 1879              	.LVL119:
1866:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1880              		.loc 1 1867 0
 1881 0000 134B     		ldr	r3, .L157
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
1876:.\Generated_Source\PSoC4/CyLib.c **** #else
1877:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
1878:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
1879:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
1880:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
1883:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
1884:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
1885:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
1886:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
1887:.\Generated_Source\PSoC4/CyLib.c **** }
 1882              		.loc 1 1887 0
 1883              		@ sp needed
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 71


1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1884              		.loc 1 1867 0
 1885 0002 1A78     		ldrb	r2, [r3]
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1886              		.loc 1 1868 0
 1887 0004 134B     		ldr	r3, .L157+4
1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1888              		.loc 1 1867 0
 1889 0006 D2B2     		uxtb	r2, r2
 1890 0008 0260     		str	r2, [r0]
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1891              		.loc 1 1868 0
 1892 000a 1B78     		ldrb	r3, [r3]
 1893 000c 1B02     		lsl	r3, r3, #8
 1894 000e 1343     		orr	r3, r2
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1895              		.loc 1 1869 0
 1896 0010 114A     		ldr	r2, .L157+8
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1897              		.loc 1 1868 0
 1898 0012 0360     		str	r3, [r0]
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1899              		.loc 1 1869 0
 1900 0014 1278     		ldrb	r2, [r2]
 1901 0016 1204     		lsl	r2, r2, #16
 1902 0018 1343     		orr	r3, r2
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1903              		.loc 1 1870 0
 1904 001a 104A     		ldr	r2, .L157+12
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1905              		.loc 1 1869 0
 1906 001c 0360     		str	r3, [r0]
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1907              		.loc 1 1870 0
 1908 001e 1278     		ldrb	r2, [r2]
 1909 0020 1206     		lsl	r2, r2, #24
 1910 0022 1343     		orr	r3, r2
 1911 0024 0360     		str	r3, [r0]
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1912              		.loc 1 1872 0
 1913 0026 0E4B     		ldr	r3, .L157+16
 1914 0028 1A78     		ldrb	r2, [r3]
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1915              		.loc 1 1873 0
 1916 002a 0E4B     		ldr	r3, .L157+20
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1917              		.loc 1 1872 0
 1918 002c D2B2     		uxtb	r2, r2
 1919 002e 4260     		str	r2, [r0, #4]
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1920              		.loc 1 1873 0
 1921 0030 1B78     		ldrb	r3, [r3]
 1922 0032 1B02     		lsl	r3, r3, #8
 1923 0034 1343     		orr	r3, r2
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1924              		.loc 1 1874 0
 1925 0036 0C4A     		ldr	r2, .L157+24
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 72


1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1926              		.loc 1 1873 0
 1927 0038 4360     		str	r3, [r0, #4]
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1928              		.loc 1 1874 0
 1929 003a 1278     		ldrb	r2, [r2]
 1930 003c 1204     		lsl	r2, r2, #16
 1931 003e 1343     		orr	r3, r2
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1932              		.loc 1 1875 0
 1933 0040 0A4A     		ldr	r2, .L157+28
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1934              		.loc 1 1874 0
 1935 0042 4360     		str	r3, [r0, #4]
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1936              		.loc 1 1875 0
 1937 0044 1278     		ldrb	r2, [r2]
 1938 0046 1206     		lsl	r2, r2, #24
 1939 0048 1343     		orr	r3, r2
 1940 004a 4360     		str	r3, [r0, #4]
 1941              		.loc 1 1887 0
 1942 004c 7047     		bx	lr
 1943              	.L158:
 1944 004e C046     		.align	2
 1945              	.L157:
 1946 0050 78F1FF0F 		.word	268431736
 1947 0054 79F1FF0F 		.word	268431737
 1948 0058 7AF1FF0F 		.word	268431738
 1949 005c 7BF1FF0F 		.word	268431739
 1950 0060 7CF1FF0F 		.word	268431740
 1951 0064 7DF1FF0F 		.word	268431741
 1952 0068 7EF1FF0F 		.word	268431742
 1953 006c 7FF1FF0F 		.word	268431743
 1954              		.cfi_endproc
 1955              	.LFE42:
 1956              		.size	CyGetUniqueId, .-CyGetUniqueId
 1957              		.global	cyImoFreqMhz2Reg
 1958              		.global	CySysTickInitVar
 1959              		.global	cydelay32kMs
 1960              		.global	cydelayFreqMhz
 1961              		.global	cydelayFreqKhz
 1962              		.global	cydelayFreqHz
 1963              		.section	.rodata
 1964              		.set	.LANCHOR1,. + 0
 1965              		.type	cyImoFreqMhz2Reg, %object
 1966              		.size	cyImoFreqMhz2Reg, 46
 1967              	cyImoFreqMhz2Reg:
 1968 0000 03       		.byte	3
 1969 0001 04       		.byte	4
 1970 0002 05       		.byte	5
 1971 0003 06       		.byte	6
 1972 0004 07       		.byte	7
 1973 0005 08       		.byte	8
 1974 0006 09       		.byte	9
 1975 0007 0A       		.byte	10
 1976 0008 0B       		.byte	11
 1977 0009 0C       		.byte	12
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 73


 1978 000a 0E       		.byte	14
 1979 000b 0F       		.byte	15
 1980 000c 10       		.byte	16
 1981 000d 11       		.byte	17
 1982 000e 12       		.byte	18
 1983 000f 13       		.byte	19
 1984 0010 14       		.byte	20
 1985 0011 15       		.byte	21
 1986 0012 16       		.byte	22
 1987 0013 17       		.byte	23
 1988 0014 18       		.byte	24
 1989 0015 19       		.byte	25
 1990 0016 1B       		.byte	27
 1991 0017 1C       		.byte	28
 1992 0018 1D       		.byte	29
 1993 0019 1E       		.byte	30
 1994 001a 1F       		.byte	31
 1995 001b 20       		.byte	32
 1996 001c 21       		.byte	33
 1997 001d 22       		.byte	34
 1998 001e 23       		.byte	35
 1999 001f 25       		.byte	37
 2000 0020 26       		.byte	38
 2001 0021 27       		.byte	39
 2002 0022 28       		.byte	40
 2003 0023 29       		.byte	41
 2004 0024 2A       		.byte	42
 2005 0025 2B       		.byte	43
 2006 0026 2E       		.byte	46
 2007 0027 2F       		.byte	47
 2008 0028 30       		.byte	48
 2009 0029 31       		.byte	49
 2010 002a 32       		.byte	50
 2011 002b 33       		.byte	51
 2012 002c 34       		.byte	52
 2013 002d 35       		.byte	53
 2014              		.data
 2015              		.align	2
 2016              		.set	.LANCHOR0,. + 0
 2017              		.type	cydelay32kMs, %object
 2018              		.size	cydelay32kMs, 4
 2019              	cydelay32kMs:
 2020 0000 0000E02E 		.word	786432000
 2021              		.type	cydelayFreqKhz, %object
 2022              		.size	cydelayFreqKhz, 4
 2023              	cydelayFreqKhz:
 2024 0004 C05D0000 		.word	24000
 2025              		.type	cydelayFreqMhz, %object
 2026              		.size	cydelayFreqMhz, 1
 2027              	cydelayFreqMhz:
 2028 0008 18       		.byte	24
 2029 0009 000000   		.space	3
 2030              		.type	cydelayFreqHz, %object
 2031              		.size	cydelayFreqHz, 4
 2032              	cydelayFreqHz:
 2033 000c 00366E01 		.word	24000000
 2034              		.bss
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 74


 2035              		.align	2
 2036              		.set	.LANCHOR2,. + 0
 2037              		.type	CySysTickCallbacks, %object
 2038              		.size	CySysTickCallbacks, 20
 2039              	CySysTickCallbacks:
 2040 0000 00000000 		.space	20
 2040      00000000 
 2040      00000000 
 2040      00000000 
 2040      00000000 
 2041              		.type	CySysTickInitVar, %object
 2042              		.size	CySysTickInitVar, 4
 2043              	CySysTickInitVar:
 2044 0014 00000000 		.space	4
 2045              		.text
 2046              	.Letext0:
 2047              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2048              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2049              		.section	.debug_info,"",%progbits
 2050              	.Ldebug_info0:
 2051 0000 670B0000 		.4byte	0xb67
 2052 0004 0400     		.2byte	0x4
 2053 0006 00000000 		.4byte	.Ldebug_abbrev0
 2054 000a 04       		.byte	0x4
 2055 000b 01       		.uleb128 0x1
 2056 000c CA040000 		.4byte	.LASF94
 2057 0010 01       		.byte	0x1
 2058 0011 BF020000 		.4byte	.LASF95
 2059 0015 83030000 		.4byte	.LASF96
 2060 0019 90000000 		.4byte	.Ldebug_ranges0+0x90
 2061 001d 00000000 		.4byte	0
 2062 0021 00000000 		.4byte	.Ldebug_line0
 2063 0025 02       		.uleb128 0x2
 2064 0026 01       		.byte	0x1
 2065 0027 06       		.byte	0x6
 2066 0028 E4000000 		.4byte	.LASF0
 2067 002c 02       		.uleb128 0x2
 2068 002d 01       		.byte	0x1
 2069 002e 08       		.byte	0x8
 2070 002f 61040000 		.4byte	.LASF1
 2071 0033 02       		.uleb128 0x2
 2072 0034 02       		.byte	0x2
 2073 0035 05       		.byte	0x5
 2074 0036 6F040000 		.4byte	.LASF2
 2075 003a 02       		.uleb128 0x2
 2076 003b 02       		.byte	0x2
 2077 003c 07       		.byte	0x7
 2078 003d 9D020000 		.4byte	.LASF3
 2079 0041 02       		.uleb128 0x2
 2080 0042 04       		.byte	0x4
 2081 0043 05       		.byte	0x5
 2082 0044 23010000 		.4byte	.LASF4
 2083 0048 02       		.uleb128 0x2
 2084 0049 04       		.byte	0x4
 2085 004a 07       		.byte	0x7
 2086 004b 25020000 		.4byte	.LASF5
 2087 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 75


 2088 0050 08       		.byte	0x8
 2089 0051 05       		.byte	0x5
 2090 0052 D6000000 		.4byte	.LASF6
 2091 0056 02       		.uleb128 0x2
 2092 0057 08       		.byte	0x8
 2093 0058 07       		.byte	0x7
 2094 0059 6A000000 		.4byte	.LASF7
 2095 005d 03       		.uleb128 0x3
 2096 005e 04       		.byte	0x4
 2097 005f 05       		.byte	0x5
 2098 0060 696E7400 		.ascii	"int\000"
 2099 0064 02       		.uleb128 0x2
 2100 0065 04       		.byte	0x4
 2101 0066 07       		.byte	0x7
 2102 0067 09020000 		.4byte	.LASF8
 2103 006b 04       		.uleb128 0x4
 2104 006c 4E010000 		.4byte	.LASF9
 2105 0070 02       		.byte	0x2
 2106 0071 C1       		.byte	0xc1
 2107 0072 2C000000 		.4byte	0x2c
 2108 0076 04       		.uleb128 0x4
 2109 0077 17000000 		.4byte	.LASF10
 2110 007b 02       		.byte	0x2
 2111 007c C2       		.byte	0xc2
 2112 007d 3A000000 		.4byte	0x3a
 2113 0081 04       		.uleb128 0x4
 2114 0082 91010000 		.4byte	.LASF11
 2115 0086 02       		.byte	0x2
 2116 0087 C3       		.byte	0xc3
 2117 0088 48000000 		.4byte	0x48
 2118 008c 02       		.uleb128 0x2
 2119 008d 04       		.byte	0x4
 2120 008e 04       		.byte	0x4
 2121 008f F3030000 		.4byte	.LASF12
 2122 0093 02       		.uleb128 0x2
 2123 0094 08       		.byte	0x8
 2124 0095 04       		.byte	0x4
 2125 0096 6D010000 		.4byte	.LASF13
 2126 009a 02       		.uleb128 0x2
 2127 009b 01       		.byte	0x1
 2128 009c 08       		.byte	0x8
 2129 009d A8040000 		.4byte	.LASF14
 2130 00a1 05       		.uleb128 0x5
 2131 00a2 4B040000 		.4byte	.LASF15
 2132 00a6 02       		.byte	0x2
 2133 00a7 6B01     		.2byte	0x16b
 2134 00a9 AD000000 		.4byte	0xad
 2135 00ad 06       		.uleb128 0x6
 2136 00ae 6B000000 		.4byte	0x6b
 2137 00b2 05       		.uleb128 0x5
 2138 00b3 10030000 		.4byte	.LASF16
 2139 00b7 02       		.byte	0x2
 2140 00b8 6D01     		.2byte	0x16d
 2141 00ba BE000000 		.4byte	0xbe
 2142 00be 06       		.uleb128 0x6
 2143 00bf 81000000 		.4byte	0x81
 2144 00c3 05       		.uleb128 0x5
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 76


 2145 00c4 AD040000 		.4byte	.LASF17
 2146 00c8 02       		.byte	0x2
 2147 00c9 7D01     		.2byte	0x17d
 2148 00cb CF000000 		.4byte	0xcf
 2149 00cf 07       		.uleb128 0x7
 2150 00d0 04       		.byte	0x4
 2151 00d1 D5000000 		.4byte	0xd5
 2152 00d5 08       		.uleb128 0x8
 2153 00d6 02       		.uleb128 0x2
 2154 00d7 04       		.byte	0x4
 2155 00d8 07       		.byte	0x7
 2156 00d9 25030000 		.4byte	.LASF18
 2157 00dd 04       		.uleb128 0x4
 2158 00de 0F040000 		.4byte	.LASF19
 2159 00e2 03       		.byte	0x3
 2160 00e3 67       		.byte	0x67
 2161 00e4 CF000000 		.4byte	0xcf
 2162 00e8 09       		.uleb128 0x9
 2163 00e9 5A040000 		.4byte	.LASF20
 2164 00ed 01       		.byte	0x1
 2165 00ee 2505     		.2byte	0x525
 2166 00f0 01       		.byte	0x1
 2167 00f1 02010000 		.4byte	0x102
 2168 00f5 0A       		.uleb128 0xa
 2169 00f6 A1040000 		.4byte	.LASF22
 2170 00fa 01       		.byte	0x1
 2171 00fb 2505     		.2byte	0x525
 2172 00fd 6B000000 		.4byte	0x6b
 2173 0101 00       		.byte	0
 2174 0102 0B       		.uleb128 0xb
 2175 0103 7A010000 		.4byte	.LASF24
 2176 0107 01       		.byte	0x1
 2177 0108 9F03     		.2byte	0x39f
 2178 010a 01       		.byte	0x1
 2179 010b 0C       		.uleb128 0xc
 2180 010c 2E060000 		.4byte	.LASF97
 2181 0110 01       		.byte	0x1
 2182 0111 2307     		.2byte	0x723
 2183 0113 01       		.byte	0x1
 2184 0114 23010000 		.4byte	0x123
 2185 0118 0D       		.uleb128 0xd
 2186 0119 6900     		.ascii	"i\000"
 2187 011b 01       		.byte	0x1
 2188 011c 2507     		.2byte	0x725
 2189 011e 81000000 		.4byte	0x81
 2190 0122 00       		.byte	0
 2191 0123 09       		.uleb128 0x9
 2192 0124 1B060000 		.4byte	.LASF21
 2193 0128 01       		.byte	0x1
 2194 0129 5306     		.2byte	0x653
 2195 012b 01       		.byte	0x1
 2196 012c 3D010000 		.4byte	0x13d
 2197 0130 0A       		.uleb128 0xa
 2198 0131 DF010000 		.4byte	.LASF23
 2199 0135 01       		.byte	0x1
 2200 0136 5306     		.2byte	0x653
 2201 0138 81000000 		.4byte	0x81
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 77


 2202 013c 00       		.byte	0
 2203 013d 0B       		.uleb128 0xb
 2204 013e 16020000 		.4byte	.LASF25
 2205 0142 01       		.byte	0x1
 2206 0143 D006     		.2byte	0x6d0
 2207 0145 01       		.byte	0x1
 2208 0146 0E       		.uleb128 0xe
 2209 0147 EC050000 		.4byte	.LASF26
 2210 014b 01       		.byte	0x1
 2211 014c 5A       		.byte	0x5a
 2212 014d 00000000 		.4byte	.LFB0
 2213 0151 14000000 		.4byte	.LFE0-.LFB0
 2214 0155 01       		.uleb128 0x1
 2215 0156 9C       		.byte	0x9c
 2216 0157 0E       		.uleb128 0xe
 2217 0158 52020000 		.4byte	.LASF27
 2218 015c 01       		.byte	0x1
 2219 015d 78       		.byte	0x78
 2220 015e 00000000 		.4byte	.LFB1
 2221 0162 10000000 		.4byte	.LFE1-.LFB1
 2222 0166 01       		.uleb128 0x1
 2223 0167 9C       		.byte	0x9c
 2224 0168 0F       		.uleb128 0xf
 2225 0169 27000000 		.4byte	.LASF28
 2226 016d 01       		.byte	0x1
 2227 016e 1901     		.2byte	0x119
 2228 0170 00000000 		.4byte	.LFB2
 2229 0174 24000000 		.4byte	.LFE2-.LFB2
 2230 0178 01       		.uleb128 0x1
 2231 0179 9C       		.byte	0x9c
 2232 017a B1010000 		.4byte	0x1b1
 2233 017e 10       		.uleb128 0x10
 2234 017f 97040000 		.4byte	.LASF30
 2235 0183 01       		.byte	0x1
 2236 0184 1901     		.2byte	0x119
 2237 0186 81000000 		.4byte	0x81
 2238 018a 00000000 		.4byte	.LLST0
 2239 018e 11       		.uleb128 0x11
 2240 018f 01010000 		.4byte	.LASF32
 2241 0193 01       		.byte	0x1
 2242 0194 1B01     		.2byte	0x11b
 2243 0196 6B000000 		.4byte	0x6b
 2244 019a 2C000000 		.4byte	.LLST1
 2245 019e 12       		.uleb128 0x12
 2246 019f 08000000 		.4byte	.LVL1
 2247 01a3 410B0000 		.4byte	0xb41
 2248 01a7 12       		.uleb128 0x12
 2249 01a8 1C000000 		.4byte	.LVL3
 2250 01ac 4C0B0000 		.4byte	0xb4c
 2251 01b0 00       		.byte	0
 2252 01b1 0F       		.uleb128 0xf
 2253 01b2 46050000 		.4byte	.LASF29
 2254 01b6 01       		.byte	0x1
 2255 01b7 4A01     		.2byte	0x14a
 2256 01b9 00000000 		.4byte	.LFB3
 2257 01bd 2C000000 		.4byte	.LFE3-.LFB3
 2258 01c1 01       		.uleb128 0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 78


 2259 01c2 9C       		.byte	0x9c
 2260 01c3 FA010000 		.4byte	0x1fa
 2261 01c7 10       		.uleb128 0x10
 2262 01c8 E4050000 		.4byte	.LASF31
 2263 01cc 01       		.byte	0x1
 2264 01cd 4A01     		.2byte	0x14a
 2265 01cf 81000000 		.4byte	0x81
 2266 01d3 3F000000 		.4byte	.LLST2
 2267 01d7 11       		.uleb128 0x11
 2268 01d8 01010000 		.4byte	.LASF32
 2269 01dc 01       		.byte	0x1
 2270 01dd 4C01     		.2byte	0x14c
 2271 01df 6B000000 		.4byte	0x6b
 2272 01e3 6B000000 		.4byte	.LLST3
 2273 01e7 12       		.uleb128 0x12
 2274 01e8 08000000 		.4byte	.LVL5
 2275 01ec 410B0000 		.4byte	0xb41
 2276 01f0 12       		.uleb128 0x12
 2277 01f1 20000000 		.4byte	.LVL7
 2278 01f5 4C0B0000 		.4byte	0xb4c
 2279 01f9 00       		.byte	0
 2280 01fa 13       		.uleb128 0x13
 2281 01fb B0050000 		.4byte	.LASF33
 2282 01ff 01       		.byte	0x1
 2283 0200 7503     		.2byte	0x375
 2284 0202 00000000 		.4byte	.LFB6
 2285 0206 20000000 		.4byte	.LFE6-.LFB6
 2286 020a 01       		.uleb128 0x1
 2287 020b 9C       		.byte	0x9c
 2288 020c 14       		.uleb128 0x14
 2289 020d 37020000 		.4byte	.LASF76
 2290 0211 01       		.byte	0x1
 2291 0212 8B03     		.2byte	0x38b
 2292 0214 81000000 		.4byte	0x81
 2293 0218 00000000 		.4byte	.LFB7
 2294 021c 10000000 		.4byte	.LFE7-.LFB7
 2295 0220 01       		.uleb128 0x1
 2296 0221 9C       		.byte	0x9c
 2297 0222 15       		.uleb128 0x15
 2298 0223 02010000 		.4byte	0x102
 2299 0227 00000000 		.4byte	.LFB8
 2300 022b 0C000000 		.4byte	.LFE8-.LFB8
 2301 022f 01       		.uleb128 0x1
 2302 0230 9C       		.byte	0x9c
 2303 0231 16       		.uleb128 0x16
 2304 0232 89020000 		.4byte	.LASF35
 2305 0236 01       		.byte	0x1
 2306 0237 BB03     		.2byte	0x3bb
 2307 0239 81000000 		.4byte	0x81
 2308 023d 00000000 		.4byte	.LFB9
 2309 0241 14000000 		.4byte	.LFE9-.LFB9
 2310 0245 01       		.uleb128 0x1
 2311 0246 9C       		.byte	0x9c
 2312 0247 6C020000 		.4byte	0x26c
 2313 024b 10       		.uleb128 0x10
 2314 024c A1040000 		.4byte	.LASF22
 2315 0250 01       		.byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 79


 2316 0251 BB03     		.2byte	0x3bb
 2317 0253 81000000 		.4byte	0x81
 2318 0257 7E000000 		.4byte	.LLST4
 2319 025b 11       		.uleb128 0x11
 2320 025c CF050000 		.4byte	.LASF34
 2321 0260 01       		.byte	0x1
 2322 0261 BD03     		.2byte	0x3bd
 2323 0263 81000000 		.4byte	0x81
 2324 0267 9C000000 		.4byte	.LLST5
 2325 026b 00       		.byte	0
 2326 026c 16       		.uleb128 0x16
 2327 026d 47000000 		.4byte	.LASF36
 2328 0271 01       		.byte	0x1
 2329 0272 D603     		.2byte	0x3d6
 2330 0274 81000000 		.4byte	0x81
 2331 0278 00000000 		.4byte	.LFB10
 2332 027c 10000000 		.4byte	.LFE10-.LFB10
 2333 0280 01       		.uleb128 0x1
 2334 0281 9C       		.byte	0x9c
 2335 0282 95020000 		.4byte	0x295
 2336 0286 17       		.uleb128 0x17
 2337 0287 1E000000 		.4byte	.LASF37
 2338 028b 01       		.byte	0x1
 2339 028c D803     		.2byte	0x3d8
 2340 028e 81000000 		.4byte	0x81
 2341 0292 01       		.uleb128 0x1
 2342 0293 50       		.byte	0x50
 2343 0294 00       		.byte	0
 2344 0295 0F       		.uleb128 0xf
 2345 0296 92000000 		.4byte	.LASF38
 2346 029a 01       		.byte	0x1
 2347 029b F203     		.2byte	0x3f2
 2348 029d 00000000 		.4byte	.LFB11
 2349 02a1 0C000000 		.4byte	.LFE11-.LFB11
 2350 02a5 01       		.uleb128 0x1
 2351 02a6 9C       		.byte	0x9c
 2352 02a7 BA020000 		.4byte	0x2ba
 2353 02ab 18       		.uleb128 0x18
 2354 02ac 9F010000 		.4byte	.LASF39
 2355 02b0 01       		.byte	0x1
 2356 02b1 F203     		.2byte	0x3f2
 2357 02b3 81000000 		.4byte	0x81
 2358 02b7 01       		.uleb128 0x1
 2359 02b8 50       		.byte	0x50
 2360 02b9 00       		.byte	0
 2361 02ba 19       		.uleb128 0x19
 2362 02bb FE020000 		.4byte	.LASF98
 2363 02bf 01       		.byte	0x1
 2364 02c0 0E04     		.2byte	0x40e
 2365 02c2 C3000000 		.4byte	0xc3
 2366 02c6 01       		.byte	0x1
 2367 02c7 FC020000 		.4byte	0x2fc
 2368 02cb 0A       		.uleb128 0xa
 2369 02cc 98010000 		.4byte	.LASF40
 2370 02d0 01       		.byte	0x1
 2371 02d1 0E04     		.2byte	0x40e
 2372 02d3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 80


 2373 02d7 0A       		.uleb128 0xa
 2374 02d8 40030000 		.4byte	.LASF41
 2375 02dc 01       		.byte	0x1
 2376 02dd 0E04     		.2byte	0x40e
 2377 02df C3000000 		.4byte	0xc3
 2378 02e3 1A       		.uleb128 0x1a
 2379 02e4 40000000 		.4byte	.LASF42
 2380 02e8 01       		.byte	0x1
 2381 02e9 1004     		.2byte	0x410
 2382 02eb C3000000 		.4byte	0xc3
 2383 02ef 1A       		.uleb128 0x1a
 2384 02f0 00000000 		.4byte	.LASF43
 2385 02f4 01       		.byte	0x1
 2386 02f5 1104     		.2byte	0x411
 2387 02f7 FC020000 		.4byte	0x2fc
 2388 02fb 00       		.byte	0
 2389 02fc 07       		.uleb128 0x7
 2390 02fd 04       		.byte	0x4
 2391 02fe C3000000 		.4byte	0xc3
 2392 0302 1B       		.uleb128 0x1b
 2393 0303 BA020000 		.4byte	0x2ba
 2394 0307 00000000 		.4byte	.LFB12
 2395 030b 14000000 		.4byte	.LFE12-.LFB12
 2396 030f 01       		.uleb128 0x1
 2397 0310 9C       		.byte	0x9c
 2398 0311 50030000 		.4byte	0x350
 2399 0315 1C       		.uleb128 0x1c
 2400 0316 CB020000 		.4byte	0x2cb
 2401 031a BE000000 		.4byte	.LLST6
 2402 031e 1D       		.uleb128 0x1d
 2403 031f D7020000 		.4byte	0x2d7
 2404 0323 01       		.uleb128 0x1
 2405 0324 51       		.byte	0x51
 2406 0325 1E       		.uleb128 0x1e
 2407 0326 E3020000 		.4byte	0x2e3
 2408 032a 01       		.uleb128 0x1
 2409 032b 50       		.byte	0x50
 2410 032c 1F       		.uleb128 0x1f
 2411 032d EF020000 		.4byte	0x2ef
 2412 0331 00000020 		.4byte	0x20000000
 2413 0335 20       		.uleb128 0x20
 2414 0336 E8000000 		.4byte	0xe8
 2415 033a 04000000 		.4byte	.LBB26
 2416 033e 02000000 		.4byte	.LBE26-.LBB26
 2417 0342 01       		.byte	0x1
 2418 0343 1304     		.2byte	0x413
 2419 0345 1C       		.uleb128 0x1c
 2420 0346 F5000000 		.4byte	0xf5
 2421 034a DF000000 		.4byte	.LLST7
 2422 034e 00       		.byte	0
 2423 034f 00       		.byte	0
 2424 0350 16       		.uleb128 0x16
 2425 0351 85040000 		.4byte	.LASF44
 2426 0355 01       		.byte	0x1
 2427 0356 3304     		.2byte	0x433
 2428 0358 C3000000 		.4byte	0xc3
 2429 035c 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 81


 2430 0360 12000000 		.4byte	.LFE13-.LFB13
 2431 0364 01       		.uleb128 0x1
 2432 0365 9C       		.byte	0x9c
 2433 0366 A5030000 		.4byte	0x3a5
 2434 036a 10       		.uleb128 0x10
 2435 036b 98010000 		.4byte	.LASF40
 2436 036f 01       		.byte	0x1
 2437 0370 3304     		.2byte	0x433
 2438 0372 6B000000 		.4byte	0x6b
 2439 0376 F3000000 		.4byte	.LLST8
 2440 037a 21       		.uleb128 0x21
 2441 037b 00000000 		.4byte	.LASF43
 2442 037f 01       		.byte	0x1
 2443 0380 3504     		.2byte	0x435
 2444 0382 FC020000 		.4byte	0x2fc
 2445 0386 00000020 		.4byte	0x20000000
 2446 038a 20       		.uleb128 0x20
 2447 038b E8000000 		.4byte	0xe8
 2448 038f 04000000 		.4byte	.LBB28
 2449 0393 02000000 		.4byte	.LBE28-.LBB28
 2450 0397 01       		.byte	0x1
 2451 0398 3704     		.2byte	0x437
 2452 039a 1C       		.uleb128 0x1c
 2453 039b F5000000 		.4byte	0xf5
 2454 039f 14010000 		.4byte	.LLST9
 2455 03a3 00       		.byte	0
 2456 03a4 00       		.byte	0
 2457 03a5 16       		.uleb128 0x16
 2458 03a6 B0020000 		.4byte	.LASF45
 2459 03aa 01       		.byte	0x1
 2460 03ab 4C04     		.2byte	0x44c
 2461 03ad C3000000 		.4byte	0xc3
 2462 03b1 00000000 		.4byte	.LFB14
 2463 03b5 18000000 		.4byte	.LFE14-.LFB14
 2464 03b9 01       		.uleb128 0x1
 2465 03ba 9C       		.byte	0x9c
 2466 03bb 16040000 		.4byte	0x416
 2467 03bf 10       		.uleb128 0x10
 2468 03c0 98010000 		.4byte	.LASF40
 2469 03c4 01       		.byte	0x1
 2470 03c5 4C04     		.2byte	0x44c
 2471 03c7 6B000000 		.4byte	0x6b
 2472 03cb 28010000 		.4byte	.LLST10
 2473 03cf 18       		.uleb128 0x18
 2474 03d0 40030000 		.4byte	.LASF41
 2475 03d4 01       		.byte	0x1
 2476 03d5 4C04     		.2byte	0x44c
 2477 03d7 C3000000 		.4byte	0xc3
 2478 03db 01       		.uleb128 0x1
 2479 03dc 51       		.byte	0x51
 2480 03dd 17       		.uleb128 0x17
 2481 03de 40000000 		.4byte	.LASF42
 2482 03e2 01       		.byte	0x1
 2483 03e3 4E04     		.2byte	0x44e
 2484 03e5 C3000000 		.4byte	0xc3
 2485 03e9 01       		.uleb128 0x1
 2486 03ea 50       		.byte	0x50
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 82


 2487 03eb 21       		.uleb128 0x21
 2488 03ec 00000000 		.4byte	.LASF43
 2489 03f0 01       		.byte	0x1
 2490 03f1 4F04     		.2byte	0x44f
 2491 03f3 FC020000 		.4byte	0x2fc
 2492 03f7 00000020 		.4byte	0x20000000
 2493 03fb 20       		.uleb128 0x20
 2494 03fc E8000000 		.4byte	0xe8
 2495 0400 04000000 		.4byte	.LBB30
 2496 0404 02000000 		.4byte	.LBE30-.LBB30
 2497 0408 01       		.byte	0x1
 2498 0409 5104     		.2byte	0x451
 2499 040b 1C       		.uleb128 0x1c
 2500 040c F5000000 		.4byte	0xf5
 2501 0410 49010000 		.4byte	.LLST11
 2502 0414 00       		.byte	0
 2503 0415 00       		.byte	0
 2504 0416 16       		.uleb128 0x16
 2505 0417 21040000 		.4byte	.LASF46
 2506 041b 01       		.byte	0x1
 2507 041c 6B04     		.2byte	0x46b
 2508 041e C3000000 		.4byte	0xc3
 2509 0422 00000000 		.4byte	.LFB15
 2510 0426 14000000 		.4byte	.LFE15-.LFB15
 2511 042a 01       		.uleb128 0x1
 2512 042b 9C       		.byte	0x9c
 2513 042c 6B040000 		.4byte	0x46b
 2514 0430 10       		.uleb128 0x10
 2515 0431 98010000 		.4byte	.LASF40
 2516 0435 01       		.byte	0x1
 2517 0436 6B04     		.2byte	0x46b
 2518 0438 6B000000 		.4byte	0x6b
 2519 043c 5D010000 		.4byte	.LLST12
 2520 0440 21       		.uleb128 0x21
 2521 0441 00000000 		.4byte	.LASF43
 2522 0445 01       		.byte	0x1
 2523 0446 6D04     		.2byte	0x46d
 2524 0448 FC020000 		.4byte	0x2fc
 2525 044c 00000020 		.4byte	0x20000000
 2526 0450 20       		.uleb128 0x20
 2527 0451 E8000000 		.4byte	0xe8
 2528 0455 04000000 		.4byte	.LBB32
 2529 0459 02000000 		.4byte	.LBE32-.LBB32
 2530 045d 01       		.byte	0x1
 2531 045e 6F04     		.2byte	0x46f
 2532 0460 1C       		.uleb128 0x1c
 2533 0461 F5000000 		.4byte	0xf5
 2534 0465 7E010000 		.4byte	.LLST13
 2535 0469 00       		.byte	0
 2536 046a 00       		.byte	0
 2537 046b 0F       		.uleb128 0xf
 2538 046c E2030000 		.4byte	.LASF47
 2539 0470 01       		.byte	0x1
 2540 0471 8304     		.2byte	0x483
 2541 0473 00000000 		.4byte	.LFB16
 2542 0477 40000000 		.4byte	.LFE16-.LFB16
 2543 047b 01       		.uleb128 0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 83


 2544 047c 9C       		.byte	0x9c
 2545 047d 20050000 		.4byte	0x520
 2546 0481 10       		.uleb128 0x10
 2547 0482 98010000 		.4byte	.LASF40
 2548 0486 01       		.byte	0x1
 2549 0487 8304     		.2byte	0x483
 2550 0489 6B000000 		.4byte	0x6b
 2551 048d 92010000 		.4byte	.LLST14
 2552 0491 10       		.uleb128 0x10
 2553 0492 E0020000 		.4byte	.LASF48
 2554 0496 01       		.byte	0x1
 2555 0497 8304     		.2byte	0x483
 2556 0499 6B000000 		.4byte	0x6b
 2557 049d B3010000 		.4byte	.LLST15
 2558 04a1 11       		.uleb128 0x11
 2559 04a2 01010000 		.4byte	.LASF32
 2560 04a6 01       		.byte	0x1
 2561 04a7 8504     		.2byte	0x485
 2562 04a9 6B000000 		.4byte	0x6b
 2563 04ad D4010000 		.4byte	.LLST16
 2564 04b1 11       		.uleb128 0x11
 2565 04b2 74010000 		.4byte	.LASF49
 2566 04b6 01       		.byte	0x1
 2567 04b7 8604     		.2byte	0x486
 2568 04b9 81000000 		.4byte	0x81
 2569 04bd E7010000 		.4byte	.LLST17
 2570 04c1 11       		.uleb128 0x11
 2571 04c2 DF010000 		.4byte	.LASF23
 2572 04c6 01       		.byte	0x1
 2573 04c7 8704     		.2byte	0x487
 2574 04c9 81000000 		.4byte	0x81
 2575 04cd 1B020000 		.4byte	.LLST18
 2576 04d1 22       		.uleb128 0x22
 2577 04d2 E8000000 		.4byte	0xe8
 2578 04d6 0A000000 		.4byte	.LBB34
 2579 04da 02000000 		.4byte	.LBE34-.LBB34
 2580 04de 01       		.byte	0x1
 2581 04df 8904     		.2byte	0x489
 2582 04e1 EF040000 		.4byte	0x4ef
 2583 04e5 1C       		.uleb128 0x1c
 2584 04e6 F5000000 		.4byte	0xf5
 2585 04ea 39020000 		.4byte	.LLST19
 2586 04ee 00       		.byte	0
 2587 04ef 22       		.uleb128 0x22
 2588 04f0 E8000000 		.4byte	0xe8
 2589 04f4 10000000 		.4byte	.LBB36
 2590 04f8 02000000 		.4byte	.LBE36-.LBB36
 2591 04fc 01       		.byte	0x1
 2592 04fd 8A04     		.2byte	0x48a
 2593 04ff 0D050000 		.4byte	0x50d
 2594 0503 1C       		.uleb128 0x1c
 2595 0504 F5000000 		.4byte	0xf5
 2596 0508 4D020000 		.4byte	.LLST20
 2597 050c 00       		.byte	0
 2598 050d 12       		.uleb128 0x12
 2599 050e 16000000 		.4byte	.LVL37
 2600 0512 410B0000 		.4byte	0xb41
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 84


 2601 0516 12       		.uleb128 0x12
 2602 0517 38000000 		.4byte	.LVL42
 2603 051b 4C0B0000 		.4byte	0xb4c
 2604 051f 00       		.byte	0
 2605 0520 16       		.uleb128 0x16
 2606 0521 B3010000 		.4byte	.LASF50
 2607 0525 01       		.byte	0x1
 2608 0526 A704     		.2byte	0x4a7
 2609 0528 6B000000 		.4byte	0x6b
 2610 052c 00000000 		.4byte	.LFB17
 2611 0530 24000000 		.4byte	.LFE17-.LFB17
 2612 0534 01       		.uleb128 0x1
 2613 0535 9C       		.byte	0x9c
 2614 0536 75050000 		.4byte	0x575
 2615 053a 10       		.uleb128 0x10
 2616 053b 98010000 		.4byte	.LASF40
 2617 053f 01       		.byte	0x1
 2618 0540 A704     		.2byte	0x4a7
 2619 0542 6B000000 		.4byte	0x6b
 2620 0546 61020000 		.4byte	.LLST21
 2621 054a 11       		.uleb128 0x11
 2622 054b E0020000 		.4byte	.LASF48
 2623 054f 01       		.byte	0x1
 2624 0550 A904     		.2byte	0x4a9
 2625 0552 6B000000 		.4byte	0x6b
 2626 0556 82020000 		.4byte	.LLST22
 2627 055a 20       		.uleb128 0x20
 2628 055b E8000000 		.4byte	0xe8
 2629 055f 04000000 		.4byte	.LBB38
 2630 0563 02000000 		.4byte	.LBE38-.LBB38
 2631 0567 01       		.byte	0x1
 2632 0568 AB04     		.2byte	0x4ab
 2633 056a 1C       		.uleb128 0x1c
 2634 056b F5000000 		.4byte	0xf5
 2635 056f A3020000 		.4byte	.LLST23
 2636 0573 00       		.byte	0
 2637 0574 00       		.byte	0
 2638 0575 09       		.uleb128 0x9
 2639 0576 79040000 		.4byte	.LASF51
 2640 057a 01       		.byte	0x1
 2641 057b C104     		.2byte	0x4c1
 2642 057d 01       		.byte	0x1
 2643 057e 8F050000 		.4byte	0x58f
 2644 0582 0A       		.uleb128 0xa
 2645 0583 98010000 		.4byte	.LASF40
 2646 0587 01       		.byte	0x1
 2647 0588 C104     		.2byte	0x4c1
 2648 058a 6B000000 		.4byte	0x6b
 2649 058e 00       		.byte	0
 2650 058f 1B       		.uleb128 0x1b
 2651 0590 75050000 		.4byte	0x575
 2652 0594 00000000 		.4byte	.LFB18
 2653 0598 14000000 		.4byte	.LFE18-.LFB18
 2654 059c 01       		.uleb128 0x1
 2655 059d 9C       		.byte	0x9c
 2656 059e AC050000 		.4byte	0x5ac
 2657 05a2 1C       		.uleb128 0x1c
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 85


 2658 05a3 82050000 		.4byte	0x582
 2659 05a7 B7020000 		.4byte	.LLST24
 2660 05ab 00       		.byte	0
 2661 05ac 16       		.uleb128 0x16
 2662 05ad C8000000 		.4byte	.LASF52
 2663 05b1 01       		.byte	0x1
 2664 05b2 D504     		.2byte	0x4d5
 2665 05b4 6B000000 		.4byte	0x6b
 2666 05b8 00000000 		.4byte	.LFB19
 2667 05bc 18000000 		.4byte	.LFE19-.LFB19
 2668 05c0 01       		.uleb128 0x1
 2669 05c1 9C       		.byte	0x9c
 2670 05c2 D7050000 		.4byte	0x5d7
 2671 05c6 10       		.uleb128 0x10
 2672 05c7 98010000 		.4byte	.LASF40
 2673 05cb 01       		.byte	0x1
 2674 05cc D504     		.2byte	0x4d5
 2675 05ce 6B000000 		.4byte	0x6b
 2676 05d2 D8020000 		.4byte	.LLST25
 2677 05d6 00       		.byte	0
 2678 05d7 0F       		.uleb128 0xf
 2679 05d8 2C010000 		.4byte	.LASF53
 2680 05dc 01       		.byte	0x1
 2681 05dd EA04     		.2byte	0x4ea
 2682 05df 00000000 		.4byte	.LFB20
 2683 05e3 14000000 		.4byte	.LFE20-.LFB20
 2684 05e7 01       		.uleb128 0x1
 2685 05e8 9C       		.byte	0x9c
 2686 05e9 FE050000 		.4byte	0x5fe
 2687 05ed 10       		.uleb128 0x10
 2688 05ee 98010000 		.4byte	.LASF40
 2689 05f2 01       		.byte	0x1
 2690 05f3 EA04     		.2byte	0x4ea
 2691 05f5 6B000000 		.4byte	0x6b
 2692 05f9 F9020000 		.4byte	.LLST26
 2693 05fd 00       		.byte	0
 2694 05fe 0F       		.uleb128 0xf
 2695 05ff 79020000 		.4byte	.LASF54
 2696 0603 01       		.byte	0x1
 2697 0604 FD04     		.2byte	0x4fd
 2698 0606 00000000 		.4byte	.LFB21
 2699 060a 14000000 		.4byte	.LFE21-.LFB21
 2700 060e 01       		.uleb128 0x1
 2701 060f 9C       		.byte	0x9c
 2702 0610 25060000 		.4byte	0x625
 2703 0614 10       		.uleb128 0x10
 2704 0615 98010000 		.4byte	.LASF40
 2705 0619 01       		.byte	0x1
 2706 061a FD04     		.2byte	0x4fd
 2707 061c 6B000000 		.4byte	0x6b
 2708 0620 1A030000 		.4byte	.LLST27
 2709 0624 00       		.byte	0
 2710 0625 0F       		.uleb128 0xf
 2711 0626 2E030000 		.4byte	.LASF55
 2712 062a 01       		.byte	0x1
 2713 062b 1105     		.2byte	0x511
 2714 062d 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 86


 2715 0631 14000000 		.4byte	.LFE22-.LFB22
 2716 0635 01       		.uleb128 0x1
 2717 0636 9C       		.byte	0x9c
 2718 0637 4C060000 		.4byte	0x64c
 2719 063b 10       		.uleb128 0x10
 2720 063c 98010000 		.4byte	.LASF40
 2721 0640 01       		.byte	0x1
 2722 0641 1105     		.2byte	0x511
 2723 0643 6B000000 		.4byte	0x6b
 2724 0647 3B030000 		.4byte	.LLST28
 2725 064b 00       		.byte	0
 2726 064c 1B       		.uleb128 0x1b
 2727 064d E8000000 		.4byte	0xe8
 2728 0651 00000000 		.4byte	.LFB23
 2729 0655 04000000 		.4byte	.LFE23-.LFB23
 2730 0659 01       		.uleb128 0x1
 2731 065a 9C       		.byte	0x9c
 2732 065b 67060000 		.4byte	0x667
 2733 065f 1D       		.uleb128 0x1d
 2734 0660 F5000000 		.4byte	0xf5
 2735 0664 01       		.uleb128 0x1
 2736 0665 50       		.byte	0x50
 2737 0666 00       		.byte	0
 2738 0667 13       		.uleb128 0x13
 2739 0668 9F000000 		.4byte	.LASF56
 2740 066c 01       		.byte	0x1
 2741 066d 4405     		.2byte	0x544
 2742 066f 00000000 		.4byte	.LFB24
 2743 0673 18000000 		.4byte	.LFE24-.LFB24
 2744 0677 01       		.uleb128 0x1
 2745 0678 9C       		.byte	0x9c
 2746 0679 0F       		.uleb128 0xf
 2747 067a 8E050000 		.4byte	.LASF57
 2748 067e 01       		.byte	0x1
 2749 067f 5D05     		.2byte	0x55d
 2750 0681 00000000 		.4byte	.LFB25
 2751 0685 2C000000 		.4byte	.LFE25-.LFB25
 2752 0689 01       		.uleb128 0x1
 2753 068a 9C       		.byte	0x9c
 2754 068b B2060000 		.4byte	0x6b2
 2755 068f 10       		.uleb128 0x10
 2756 0690 30040000 		.4byte	.LASF58
 2757 0694 01       		.byte	0x1
 2758 0695 5D05     		.2byte	0x55d
 2759 0697 81000000 		.4byte	0x81
 2760 069b 5C030000 		.4byte	.LLST29
 2761 069f 12       		.uleb128 0x12
 2762 06a0 14000000 		.4byte	.LVL62
 2763 06a4 5D0B0000 		.4byte	0xb5d
 2764 06a8 12       		.uleb128 0x12
 2765 06a9 22000000 		.4byte	.LVL64
 2766 06ad 5D0B0000 		.4byte	0xb5d
 2767 06b1 00       		.byte	0
 2768 06b2 0F       		.uleb128 0xf
 2769 06b3 63010000 		.4byte	.LASF59
 2770 06b7 01       		.byte	0x1
 2771 06b8 7905     		.2byte	0x579
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 87


 2772 06ba 00000000 		.4byte	.LFB26
 2773 06be 14000000 		.4byte	.LFE26-.LFB26
 2774 06c2 01       		.uleb128 0x1
 2775 06c3 9C       		.byte	0x9c
 2776 06c4 E2060000 		.4byte	0x6e2
 2777 06c8 10       		.uleb128 0x10
 2778 06c9 0E060000 		.4byte	.LASF60
 2779 06cd 01       		.byte	0x1
 2780 06ce 7905     		.2byte	0x579
 2781 06d0 76000000 		.4byte	0x76
 2782 06d4 7A030000 		.4byte	.LLST30
 2783 06d8 12       		.uleb128 0x12
 2784 06d9 0C000000 		.4byte	.LVL68
 2785 06dd 5D0B0000 		.4byte	0xb5d
 2786 06e1 00       		.byte	0
 2787 06e2 0F       		.uleb128 0xf
 2788 06e3 E9020000 		.4byte	.LASF61
 2789 06e7 01       		.byte	0x1
 2790 06e8 8601     		.2byte	0x186
 2791 06ea 00000000 		.4byte	.LFB4
 2792 06ee 24010000 		.4byte	.LFE4-.LFB4
 2793 06f2 01       		.uleb128 0x1
 2794 06f3 9C       		.byte	0x9c
 2795 06f4 CA070000 		.4byte	0x7ca
 2796 06f8 10       		.uleb128 0x10
 2797 06f9 F0000000 		.4byte	.LASF62
 2798 06fd 01       		.byte	0x1
 2799 06fe 8601     		.2byte	0x186
 2800 0700 81000000 		.4byte	0x81
 2801 0704 9B030000 		.4byte	.LLST31
 2802 0708 11       		.uleb128 0x11
 2803 0709 0F000000 		.4byte	.LASF63
 2804 070d 01       		.byte	0x1
 2805 070e 8C01     		.2byte	0x18c
 2806 0710 6B000000 		.4byte	0x6b
 2807 0714 E5030000 		.4byte	.LLST32
 2808 0718 11       		.uleb128 0x11
 2809 0719 48030000 		.4byte	.LASF64
 2810 071d 01       		.byte	0x1
 2811 071e 8D01     		.2byte	0x18d
 2812 0720 6B000000 		.4byte	0x6b
 2813 0724 24040000 		.4byte	.LLST33
 2814 0728 11       		.uleb128 0x11
 2815 0729 FD050000 		.4byte	.LASF65
 2816 072d 01       		.byte	0x1
 2817 072e 8E01     		.2byte	0x18e
 2818 0730 6B000000 		.4byte	0x6b
 2819 0734 38040000 		.4byte	.LLST34
 2820 0738 11       		.uleb128 0x11
 2821 0739 55000000 		.4byte	.LASF66
 2822 073d 01       		.byte	0x1
 2823 073e 8F01     		.2byte	0x18f
 2824 0740 6B000000 		.4byte	0x6b
 2825 0744 4C040000 		.4byte	.LLST35
 2826 0748 17       		.uleb128 0x17
 2827 0749 01010000 		.4byte	.LASF32
 2828 074d 01       		.byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 88


 2829 074e 9601     		.2byte	0x196
 2830 0750 6B000000 		.4byte	0x6b
 2831 0754 02       		.uleb128 0x2
 2832 0755 91       		.byte	0x91
 2833 0756 64       		.sleb128 -28
 2834 0757 22       		.uleb128 0x22
 2835 0758 E8000000 		.4byte	0xe8
 2836 075c CC000000 		.4byte	.LBB40
 2837 0760 02000000 		.4byte	.LBE40-.LBB40
 2838 0764 01       		.byte	0x1
 2839 0765 0E02     		.2byte	0x20e
 2840 0767 75070000 		.4byte	0x775
 2841 076b 1C       		.uleb128 0x1c
 2842 076c F5000000 		.4byte	0xf5
 2843 0770 5F040000 		.4byte	.LLST36
 2844 0774 00       		.byte	0
 2845 0775 12       		.uleb128 0x12
 2846 0776 0A000000 		.4byte	.LVL70
 2847 077a 410B0000 		.4byte	0xb41
 2848 077e 23       		.uleb128 0x23
 2849 077f 9A000000 		.4byte	.LVL85
 2850 0783 5D0B0000 		.4byte	0xb5d
 2851 0787 91070000 		.4byte	0x791
 2852 078b 24       		.uleb128 0x24
 2853 078c 01       		.uleb128 0x1
 2854 078d 50       		.byte	0x50
 2855 078e 01       		.uleb128 0x1
 2856 078f 35       		.byte	0x35
 2857 0790 00       		.byte	0
 2858 0791 23       		.uleb128 0x23
 2859 0792 B6000000 		.4byte	.LVL87
 2860 0796 B2060000 		.4byte	0x6b2
 2861 079a A4070000 		.4byte	0x7a4
 2862 079e 24       		.uleb128 0x24
 2863 079f 01       		.uleb128 0x1
 2864 07a0 50       		.byte	0x50
 2865 07a1 01       		.uleb128 0x1
 2866 07a2 35       		.byte	0x35
 2867 07a3 00       		.byte	0
 2868 07a4 23       		.uleb128 0x23
 2869 07a5 CA000000 		.4byte	.LVL88
 2870 07a9 5D0B0000 		.4byte	0xb5d
 2871 07ad B7070000 		.4byte	0x7b7
 2872 07b1 24       		.uleb128 0x24
 2873 07b2 01       		.uleb128 0x1
 2874 07b3 50       		.byte	0x50
 2875 07b4 01       		.uleb128 0x1
 2876 07b5 35       		.byte	0x35
 2877 07b6 00       		.byte	0
 2878 07b7 25       		.uleb128 0x25
 2879 07b8 D4000000 		.4byte	.LVL91
 2880 07bc 4C0B0000 		.4byte	0xb4c
 2881 07c0 24       		.uleb128 0x24
 2882 07c1 01       		.uleb128 0x1
 2883 07c2 50       		.byte	0x50
 2884 07c3 04       		.uleb128 0x4
 2885 07c4 91       		.byte	0x91
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 89


 2886 07c5 64       		.sleb128 -28
 2887 07c6 94       		.byte	0x94
 2888 07c7 01       		.byte	0x1
 2889 07c8 00       		.byte	0
 2890 07c9 00       		.byte	0
 2891 07ca 0F       		.uleb128 0xf
 2892 07cb A4010000 		.4byte	.LASF67
 2893 07cf 01       		.byte	0x1
 2894 07d0 5003     		.2byte	0x350
 2895 07d2 00000000 		.4byte	.LFB5
 2896 07d6 44000000 		.4byte	.LFE5-.LFB5
 2897 07da 01       		.uleb128 0x1
 2898 07db 9C       		.byte	0x9c
 2899 07dc 14080000 		.4byte	0x814
 2900 07e0 10       		.uleb128 0x10
 2901 07e1 50040000 		.4byte	.LASF68
 2902 07e5 01       		.byte	0x1
 2903 07e6 5003     		.2byte	0x350
 2904 07e8 81000000 		.4byte	0x81
 2905 07ec 73040000 		.4byte	.LLST37
 2906 07f0 26       		.uleb128 0x26
 2907 07f1 02010000 		.4byte	0x102
 2908 07f5 2C000000 		.4byte	.LBB42
 2909 07f9 00000000 		.4byte	.Ldebug_ranges0+0
 2910 07fd 01       		.byte	0x1
 2911 07fe 6003     		.2byte	0x360
 2912 0800 25       		.uleb128 0x25
 2913 0801 2C000000 		.4byte	.LVL94
 2914 0805 B2060000 		.4byte	0x6b2
 2915 0809 24       		.uleb128 0x24
 2916 080a 01       		.uleb128 0x1
 2917 080b 50       		.byte	0x50
 2918 080c 05       		.uleb128 0x5
 2919 080d 08       		.byte	0x8
 2920 080e FA       		.byte	0xfa
 2921 080f 75       		.byte	0x75
 2922 0810 00       		.sleb128 0
 2923 0811 24       		.byte	0x24
 2924 0812 00       		.byte	0
 2925 0813 00       		.byte	0
 2926 0814 27       		.uleb128 0x27
 2927 0815 F5000000 		.4byte	.LASF69
 2928 0819 01       		.byte	0x1
 2929 081a 8C05     		.2byte	0x58c
 2930 081c 00000000 		.4byte	.LFB27
 2931 0820 48000000 		.4byte	.LFE27-.LFB27
 2932 0824 01       		.uleb128 0x1
 2933 0825 9C       		.byte	0x9c
 2934 0826 3B080000 		.4byte	0x83b
 2935 082a 10       		.uleb128 0x10
 2936 082b F0000000 		.4byte	.LASF62
 2937 082f 01       		.byte	0x1
 2938 0830 8C05     		.2byte	0x58c
 2939 0832 81000000 		.4byte	0x81
 2940 0836 94040000 		.4byte	.LLST38
 2941 083a 00       		.byte	0
 2942 083b 27       		.uleb128 0x27
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 90


 2943 083c D1010000 		.4byte	.LASF70
 2944 0840 01       		.byte	0x1
 2945 0841 D105     		.2byte	0x5d1
 2946 0843 00000000 		.4byte	.LFB29
 2947 0847 50000000 		.4byte	.LFE29-.LFB29
 2948 084b 01       		.uleb128 0x1
 2949 084c 9C       		.byte	0x9c
 2950 084d E6080000 		.4byte	0x8e6
 2951 0851 28       		.uleb128 0x28
 2952 0852 6900     		.ascii	"i\000"
 2953 0854 01       		.byte	0x1
 2954 0855 D305     		.2byte	0x5d3
 2955 0857 81000000 		.4byte	0x81
 2956 085b B5040000 		.4byte	.LLST39
 2957 085f 29       		.uleb128 0x29
 2958 0860 BA020000 		.4byte	0x2ba
 2959 0864 0A000000 		.4byte	.LBB56
 2960 0868 18000000 		.4byte	.Ldebug_ranges0+0x18
 2961 086c 01       		.byte	0x1
 2962 086d DA05     		.2byte	0x5da
 2963 086f 9E080000 		.4byte	0x89e
 2964 0873 1D       		.uleb128 0x1d
 2965 0874 D7020000 		.4byte	0x2d7
 2966 0878 06       		.uleb128 0x6
 2967 0879 03       		.byte	0x3
 2968 087a 00000000 		.4byte	CySysTickServiceCallbacks
 2969 087e 9F       		.byte	0x9f
 2970 087f 2A       		.uleb128 0x2a
 2971 0880 CB020000 		.4byte	0x2cb
 2972 0884 0F       		.byte	0xf
 2973 0885 2B       		.uleb128 0x2b
 2974 0886 18000000 		.4byte	.Ldebug_ranges0+0x18
 2975 088a 2C       		.uleb128 0x2c
 2976 088b E3020000 		.4byte	0x2e3
 2977 088f F9040000 		.4byte	.LLST40
 2978 0893 1F       		.uleb128 0x1f
 2979 0894 EF020000 		.4byte	0x2ef
 2980 0898 00000020 		.4byte	0x20000000
 2981 089c 00       		.byte	0
 2982 089d 00       		.byte	0
 2983 089e 29       		.uleb128 0x29
 2984 089f 23010000 		.4byte	0x123
 2985 08a3 22000000 		.4byte	.LBB62
 2986 08a7 38000000 		.4byte	.Ldebug_ranges0+0x38
 2987 08ab 01       		.byte	0x1
 2988 08ac E005     		.2byte	0x5e0
 2989 08ae BA080000 		.4byte	0x8ba
 2990 08b2 1D       		.uleb128 0x1d
 2991 08b3 30010000 		.4byte	0x130
 2992 08b7 01       		.uleb128 0x1
 2993 08b8 50       		.byte	0x50
 2994 08b9 00       		.byte	0
 2995 08ba 29       		.uleb128 0x29
 2996 08bb 75050000 		.4byte	0x575
 2997 08bf 24000000 		.4byte	.LBB65
 2998 08c3 50000000 		.4byte	.Ldebug_ranges0+0x50
 2999 08c7 01       		.byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 91


 3000 08c8 E205     		.2byte	0x5e2
 3001 08ca D5080000 		.4byte	0x8d5
 3002 08ce 2A       		.uleb128 0x2a
 3003 08cf 82050000 		.4byte	0x582
 3004 08d3 0F       		.byte	0xf
 3005 08d4 00       		.byte	0
 3006 08d5 26       		.uleb128 0x26
 3007 08d6 3D010000 		.4byte	0x13d
 3008 08da 28000000 		.4byte	.LBB71
 3009 08de 78000000 		.4byte	.Ldebug_ranges0+0x78
 3010 08e2 01       		.byte	0x1
 3011 08e3 E105     		.2byte	0x5e1
 3012 08e5 00       		.byte	0
 3013 08e6 13       		.uleb128 0x13
 3014 08e7 D6050000 		.4byte	.LASF71
 3015 08eb 01       		.byte	0x1
 3016 08ec 0F06     		.2byte	0x60f
 3017 08ee 00000000 		.4byte	.LFB31
 3018 08f2 10000000 		.4byte	.LFE31-.LFB31
 3019 08f6 01       		.uleb128 0x1
 3020 08f7 9C       		.byte	0x9c
 3021 08f8 13       		.uleb128 0x13
 3022 08f9 AF000000 		.4byte	.LASF72
 3023 08fd 01       		.byte	0x1
 3024 08fe 2606     		.2byte	0x626
 3025 0900 00000000 		.4byte	.LFB32
 3026 0904 10000000 		.4byte	.LFE32-.LFB32
 3027 0908 01       		.uleb128 0x1
 3028 0909 9C       		.byte	0x9c
 3029 090a 0F       		.uleb128 0xf
 3030 090b BA040000 		.4byte	.LASF73
 3031 090f 01       		.byte	0x1
 3032 0910 F705     		.2byte	0x5f7
 3033 0912 00000000 		.4byte	.LFB30
 3034 0916 18000000 		.4byte	.LFE30-.LFB30
 3035 091a 01       		.uleb128 0x1
 3036 091b 9C       		.byte	0x9c
 3037 091c 2A090000 		.4byte	0x92a
 3038 0920 12       		.uleb128 0x12
 3039 0921 06000000 		.4byte	.LVL108
 3040 0925 F8080000 		.4byte	0x8f8
 3041 0929 00       		.byte	0
 3042 092a 0F       		.uleb128 0xf
 3043 092b 16030000 		.4byte	.LASF74
 3044 092f 01       		.byte	0x1
 3045 0930 AF05     		.2byte	0x5af
 3046 0932 00000000 		.4byte	.LFB28
 3047 0936 1C000000 		.4byte	.LFE28-.LFB28
 3048 093a 01       		.uleb128 0x1
 3049 093b 9C       		.byte	0x9c
 3050 093c 53090000 		.4byte	0x953
 3051 0940 12       		.uleb128 0x12
 3052 0941 0E000000 		.4byte	.LVL109
 3053 0945 3B080000 		.4byte	0x83b
 3054 0949 12       		.uleb128 0x12
 3055 094a 16000000 		.4byte	.LVL110
 3056 094e 0A090000 		.4byte	0x90a
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 92


 3057 0952 00       		.byte	0
 3058 0953 13       		.uleb128 0x13
 3059 0954 96050000 		.4byte	.LASF75
 3060 0958 01       		.byte	0x1
 3061 0959 3D06     		.2byte	0x63d
 3062 095b 00000000 		.4byte	.LFB33
 3063 095f 10000000 		.4byte	.LFE33-.LFB33
 3064 0963 01       		.uleb128 0x1
 3065 0964 9C       		.byte	0x9c
 3066 0965 1B       		.uleb128 0x1b
 3067 0966 23010000 		.4byte	0x123
 3068 096a 00000000 		.4byte	.LFB34
 3069 096e 10000000 		.4byte	.LFE34-.LFB34
 3070 0972 01       		.uleb128 0x1
 3071 0973 9C       		.byte	0x9c
 3072 0974 82090000 		.4byte	0x982
 3073 0978 1C       		.uleb128 0x1c
 3074 0979 30010000 		.4byte	0x130
 3075 097d 1C050000 		.4byte	.LLST41
 3076 0981 00       		.byte	0
 3077 0982 14       		.uleb128 0x14
 3078 0983 10010000 		.4byte	.LASF77
 3079 0987 01       		.byte	0x1
 3080 0988 6706     		.2byte	0x667
 3081 098a 81000000 		.4byte	0x81
 3082 098e 00000000 		.4byte	.LFB35
 3083 0992 10000000 		.4byte	.LFE35-.LFB35
 3084 0996 01       		.uleb128 0x1
 3085 0997 9C       		.byte	0x9c
 3086 0998 14       		.uleb128 0x14
 3087 0999 71030000 		.4byte	.LASF78
 3088 099d 01       		.byte	0x1
 3089 099e 7B06     		.2byte	0x67b
 3090 09a0 81000000 		.4byte	0x81
 3091 09a4 00000000 		.4byte	.LFB36
 3092 09a8 10000000 		.4byte	.LFE36-.LFB36
 3093 09ac 01       		.uleb128 0x1
 3094 09ad 9C       		.byte	0x9c
 3095 09ae 14       		.uleb128 0x14
 3096 09af F3010000 		.4byte	.LASF79
 3097 09b3 01       		.byte	0x1
 3098 09b4 BC06     		.2byte	0x6bc
 3099 09b6 81000000 		.4byte	0x81
 3100 09ba 00000000 		.4byte	.LFB37
 3101 09be 10000000 		.4byte	.LFE37-.LFB37
 3102 09c2 01       		.uleb128 0x1
 3103 09c3 9C       		.byte	0x9c
 3104 09c4 2D       		.uleb128 0x2d
 3105 09c5 0B010000 		.4byte	0x10b
 3106 09c9 00000000 		.4byte	.LFB41
 3107 09cd 24000000 		.4byte	.LFE41-.LFB41
 3108 09d1 01       		.uleb128 0x1
 3109 09d2 9C       		.byte	0x9c
 3110 09d3 F9090000 		.4byte	0x9f9
 3111 09d7 2E       		.uleb128 0x2e
 3112 09d8 18010000 		.4byte	0x118
 3113 09dc 2F       		.uleb128 0x2f
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 93


 3114 09dd 0C000000 		.4byte	.LBB80
 3115 09e1 10000000 		.4byte	.LBE80-.LBB80
 3116 09e5 EF090000 		.4byte	0x9ef
 3117 09e9 2E       		.uleb128 0x2e
 3118 09ea 18010000 		.4byte	0x118
 3119 09ee 00       		.byte	0
 3120 09ef 12       		.uleb128 0x12
 3121 09f0 06000000 		.4byte	.LVL113
 3122 09f4 AE090000 		.4byte	0x9ae
 3123 09f8 00       		.byte	0
 3124 09f9 15       		.uleb128 0x15
 3125 09fa 3D010000 		.4byte	0x13d
 3126 09fe 00000000 		.4byte	.LFB38
 3127 0a02 0C000000 		.4byte	.LFE38-.LFB38
 3128 0a06 01       		.uleb128 0x1
 3129 0a07 9C       		.byte	0x9c
 3130 0a08 16       		.uleb128 0x16
 3131 0a09 5D050000 		.4byte	.LASF80
 3132 0a0d 01       		.byte	0x1
 3133 0a0e F506     		.2byte	0x6f5
 3134 0a10 DD000000 		.4byte	0xdd
 3135 0a14 00000000 		.4byte	.LFB39
 3136 0a18 10000000 		.4byte	.LFE39-.LFB39
 3137 0a1c 01       		.uleb128 0x1
 3138 0a1d 9C       		.byte	0x9c
 3139 0a1e 4F0A0000 		.4byte	0xa4f
 3140 0a22 10       		.uleb128 0x10
 3141 0a23 98010000 		.4byte	.LASF40
 3142 0a27 01       		.byte	0x1
 3143 0a28 F506     		.2byte	0x6f5
 3144 0a2a 81000000 		.4byte	0x81
 3145 0a2e 3D050000 		.4byte	.LLST42
 3146 0a32 18       		.uleb128 0x18
 3147 0a33 57030000 		.4byte	.LASF81
 3148 0a37 01       		.byte	0x1
 3149 0a38 F506     		.2byte	0x6f5
 3150 0a3a DD000000 		.4byte	0xdd
 3151 0a3e 01       		.uleb128 0x1
 3152 0a3f 51       		.byte	0x51
 3153 0a40 17       		.uleb128 0x17
 3154 0a41 50030000 		.4byte	.LASF82
 3155 0a45 01       		.byte	0x1
 3156 0a46 F706     		.2byte	0x6f7
 3157 0a48 DD000000 		.4byte	0xdd
 3158 0a4c 01       		.uleb128 0x1
 3159 0a4d 50       		.byte	0x50
 3160 0a4e 00       		.byte	0
 3161 0a4f 16       		.uleb128 0x16
 3162 0a50 39010000 		.4byte	.LASF83
 3163 0a54 01       		.byte	0x1
 3164 0a55 0F07     		.2byte	0x70f
 3165 0a57 DD000000 		.4byte	0xdd
 3166 0a5b 00000000 		.4byte	.LFB40
 3167 0a5f 0C000000 		.4byte	.LFE40-.LFB40
 3168 0a63 01       		.uleb128 0x1
 3169 0a64 9C       		.byte	0x9c
 3170 0a65 7A0A0000 		.4byte	0xa7a
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 94


 3171 0a69 10       		.uleb128 0x10
 3172 0a6a 98010000 		.4byte	.LASF40
 3173 0a6e 01       		.byte	0x1
 3174 0a6f 0F07     		.2byte	0x70f
 3175 0a71 81000000 		.4byte	0x81
 3176 0a75 5E050000 		.4byte	.LLST43
 3177 0a79 00       		.byte	0
 3178 0a7a 0F       		.uleb128 0xf
 3179 0a7b E5010000 		.4byte	.LASF84
 3180 0a7f 01       		.byte	0x1
 3181 0a80 4807     		.2byte	0x748
 3182 0a82 00000000 		.4byte	.LFB42
 3183 0a86 70000000 		.4byte	.LFE42-.LFB42
 3184 0a8a 01       		.uleb128 0x1
 3185 0a8b 9C       		.byte	0x9c
 3186 0a8c 9F0A0000 		.4byte	0xa9f
 3187 0a90 18       		.uleb128 0x18
 3188 0a91 85050000 		.4byte	.LASF85
 3189 0a95 01       		.byte	0x1
 3190 0a96 4807     		.2byte	0x748
 3191 0a98 9F0A0000 		.4byte	0xa9f
 3192 0a9c 01       		.uleb128 0x1
 3193 0a9d 50       		.byte	0x50
 3194 0a9e 00       		.byte	0
 3195 0a9f 07       		.uleb128 0x7
 3196 0aa0 04       		.byte	0x4
 3197 0aa1 81000000 		.4byte	0x81
 3198 0aa5 30       		.uleb128 0x30
 3199 0aa6 DD000000 		.4byte	0xdd
 3200 0aaa B50A0000 		.4byte	0xab5
 3201 0aae 31       		.uleb128 0x31
 3202 0aaf D6000000 		.4byte	0xd6
 3203 0ab3 04       		.byte	0x4
 3204 0ab4 00       		.byte	0
 3205 0ab5 32       		.uleb128 0x32
 3206 0ab6 72050000 		.4byte	.LASF86
 3207 0aba 01       		.byte	0x1
 3208 0abb 22       		.byte	0x22
 3209 0abc A50A0000 		.4byte	0xaa5
 3210 0ac0 05       		.uleb128 0x5
 3211 0ac1 03       		.byte	0x3
 3212 0ac2 00000000 		.4byte	CySysTickCallbacks
 3213 0ac6 33       		.uleb128 0x33
 3214 0ac7 81000000 		.4byte	.LASF87
 3215 0acb 01       		.byte	0x1
 3216 0acc 34       		.byte	0x34
 3217 0acd 81000000 		.4byte	0x81
 3218 0ad1 05       		.uleb128 0x5
 3219 0ad2 03       		.byte	0x3
 3220 0ad3 00000000 		.4byte	CySysTickInitVar
 3221 0ad7 33       		.uleb128 0x33
 3222 0ad8 D4030000 		.4byte	.LASF88
 3223 0adc 01       		.byte	0x1
 3224 0add 1B       		.byte	0x1b
 3225 0ade 81000000 		.4byte	0x81
 3226 0ae2 05       		.uleb128 0x5
 3227 0ae3 03       		.byte	0x3
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 95


 3228 0ae4 00000000 		.4byte	cydelayFreqHz
 3229 0ae8 33       		.uleb128 0x33
 3230 0ae9 54010000 		.4byte	.LASF89
 3231 0aed 01       		.byte	0x1
 3232 0aee 1C       		.byte	0x1c
 3233 0aef 81000000 		.4byte	0x81
 3234 0af3 05       		.uleb128 0x5
 3235 0af4 03       		.byte	0x3
 3236 0af5 00000000 		.4byte	cydelayFreqKhz
 3237 0af9 33       		.uleb128 0x33
 3238 0afa C0050000 		.4byte	.LASF90
 3239 0afe 01       		.byte	0x1
 3240 0aff 1D       		.byte	0x1d
 3241 0b00 6B000000 		.4byte	0x6b
 3242 0b04 05       		.uleb128 0x5
 3243 0b05 03       		.byte	0x3
 3244 0b06 00000000 		.4byte	cydelayFreqMhz
 3245 0b0a 33       		.uleb128 0x33
 3246 0b0b C4010000 		.4byte	.LASF91
 3247 0b0f 01       		.byte	0x1
 3248 0b10 1E       		.byte	0x1e
 3249 0b11 81000000 		.4byte	0x81
 3250 0b15 05       		.uleb128 0x5
 3251 0b16 03       		.byte	0x3
 3252 0b17 00000000 		.4byte	cydelay32kMs
 3253 0b1b 30       		.uleb128 0x30
 3254 0b1c 6B000000 		.4byte	0x6b
 3255 0b20 2B0B0000 		.4byte	0xb2b
 3256 0b24 31       		.uleb128 0x31
 3257 0b25 D6000000 		.4byte	0xd6
 3258 0b29 2D       		.byte	0x2d
 3259 0b2a 00       		.byte	0
 3260 0b2b 33       		.uleb128 0x33
 3261 0b2c 60030000 		.4byte	.LASF92
 3262 0b30 01       		.byte	0x1
 3263 0b31 39       		.byte	0x39
 3264 0b32 3C0B0000 		.4byte	0xb3c
 3265 0b36 05       		.uleb128 0x5
 3266 0b37 03       		.byte	0x3
 3267 0b38 00000000 		.4byte	cyImoFreqMhz2Reg
 3268 0b3c 34       		.uleb128 0x34
 3269 0b3d 1B0B0000 		.4byte	0xb1b
 3270 0b41 35       		.uleb128 0x35
 3271 0b42 62020000 		.4byte	.LASF99
 3272 0b46 03       		.byte	0x3
 3273 0b47 5E       		.byte	0x5e
 3274 0b48 6B000000 		.4byte	0x6b
 3275 0b4c 36       		.uleb128 0x36
 3276 0b4d F9030000 		.4byte	.LASF93
 3277 0b51 03       		.byte	0x3
 3278 0b52 5F       		.byte	0x5f
 3279 0b53 5D0B0000 		.4byte	0xb5d
 3280 0b57 37       		.uleb128 0x37
 3281 0b58 6B000000 		.4byte	0x6b
 3282 0b5c 00       		.byte	0
 3283 0b5d 38       		.uleb128 0x38
 3284 0b5e 3D040000 		.4byte	.LASF100
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 96


 3285 0b62 03       		.byte	0x3
 3286 0b63 5A       		.byte	0x5a
 3287 0b64 37       		.uleb128 0x37
 3288 0b65 81000000 		.4byte	0x81
 3289 0b69 00       		.byte	0
 3290 0b6a 00       		.byte	0
 3291              		.section	.debug_abbrev,"",%progbits
 3292              	.Ldebug_abbrev0:
 3293 0000 01       		.uleb128 0x1
 3294 0001 11       		.uleb128 0x11
 3295 0002 01       		.byte	0x1
 3296 0003 25       		.uleb128 0x25
 3297 0004 0E       		.uleb128 0xe
 3298 0005 13       		.uleb128 0x13
 3299 0006 0B       		.uleb128 0xb
 3300 0007 03       		.uleb128 0x3
 3301 0008 0E       		.uleb128 0xe
 3302 0009 1B       		.uleb128 0x1b
 3303 000a 0E       		.uleb128 0xe
 3304 000b 55       		.uleb128 0x55
 3305 000c 17       		.uleb128 0x17
 3306 000d 11       		.uleb128 0x11
 3307 000e 01       		.uleb128 0x1
 3308 000f 10       		.uleb128 0x10
 3309 0010 17       		.uleb128 0x17
 3310 0011 00       		.byte	0
 3311 0012 00       		.byte	0
 3312 0013 02       		.uleb128 0x2
 3313 0014 24       		.uleb128 0x24
 3314 0015 00       		.byte	0
 3315 0016 0B       		.uleb128 0xb
 3316 0017 0B       		.uleb128 0xb
 3317 0018 3E       		.uleb128 0x3e
 3318 0019 0B       		.uleb128 0xb
 3319 001a 03       		.uleb128 0x3
 3320 001b 0E       		.uleb128 0xe
 3321 001c 00       		.byte	0
 3322 001d 00       		.byte	0
 3323 001e 03       		.uleb128 0x3
 3324 001f 24       		.uleb128 0x24
 3325 0020 00       		.byte	0
 3326 0021 0B       		.uleb128 0xb
 3327 0022 0B       		.uleb128 0xb
 3328 0023 3E       		.uleb128 0x3e
 3329 0024 0B       		.uleb128 0xb
 3330 0025 03       		.uleb128 0x3
 3331 0026 08       		.uleb128 0x8
 3332 0027 00       		.byte	0
 3333 0028 00       		.byte	0
 3334 0029 04       		.uleb128 0x4
 3335 002a 16       		.uleb128 0x16
 3336 002b 00       		.byte	0
 3337 002c 03       		.uleb128 0x3
 3338 002d 0E       		.uleb128 0xe
 3339 002e 3A       		.uleb128 0x3a
 3340 002f 0B       		.uleb128 0xb
 3341 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 97


 3342 0031 0B       		.uleb128 0xb
 3343 0032 49       		.uleb128 0x49
 3344 0033 13       		.uleb128 0x13
 3345 0034 00       		.byte	0
 3346 0035 00       		.byte	0
 3347 0036 05       		.uleb128 0x5
 3348 0037 16       		.uleb128 0x16
 3349 0038 00       		.byte	0
 3350 0039 03       		.uleb128 0x3
 3351 003a 0E       		.uleb128 0xe
 3352 003b 3A       		.uleb128 0x3a
 3353 003c 0B       		.uleb128 0xb
 3354 003d 3B       		.uleb128 0x3b
 3355 003e 05       		.uleb128 0x5
 3356 003f 49       		.uleb128 0x49
 3357 0040 13       		.uleb128 0x13
 3358 0041 00       		.byte	0
 3359 0042 00       		.byte	0
 3360 0043 06       		.uleb128 0x6
 3361 0044 35       		.uleb128 0x35
 3362 0045 00       		.byte	0
 3363 0046 49       		.uleb128 0x49
 3364 0047 13       		.uleb128 0x13
 3365 0048 00       		.byte	0
 3366 0049 00       		.byte	0
 3367 004a 07       		.uleb128 0x7
 3368 004b 0F       		.uleb128 0xf
 3369 004c 00       		.byte	0
 3370 004d 0B       		.uleb128 0xb
 3371 004e 0B       		.uleb128 0xb
 3372 004f 49       		.uleb128 0x49
 3373 0050 13       		.uleb128 0x13
 3374 0051 00       		.byte	0
 3375 0052 00       		.byte	0
 3376 0053 08       		.uleb128 0x8
 3377 0054 15       		.uleb128 0x15
 3378 0055 00       		.byte	0
 3379 0056 27       		.uleb128 0x27
 3380 0057 19       		.uleb128 0x19
 3381 0058 00       		.byte	0
 3382 0059 00       		.byte	0
 3383 005a 09       		.uleb128 0x9
 3384 005b 2E       		.uleb128 0x2e
 3385 005c 01       		.byte	0x1
 3386 005d 3F       		.uleb128 0x3f
 3387 005e 19       		.uleb128 0x19
 3388 005f 03       		.uleb128 0x3
 3389 0060 0E       		.uleb128 0xe
 3390 0061 3A       		.uleb128 0x3a
 3391 0062 0B       		.uleb128 0xb
 3392 0063 3B       		.uleb128 0x3b
 3393 0064 05       		.uleb128 0x5
 3394 0065 27       		.uleb128 0x27
 3395 0066 19       		.uleb128 0x19
 3396 0067 20       		.uleb128 0x20
 3397 0068 0B       		.uleb128 0xb
 3398 0069 01       		.uleb128 0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 98


 3399 006a 13       		.uleb128 0x13
 3400 006b 00       		.byte	0
 3401 006c 00       		.byte	0
 3402 006d 0A       		.uleb128 0xa
 3403 006e 05       		.uleb128 0x5
 3404 006f 00       		.byte	0
 3405 0070 03       		.uleb128 0x3
 3406 0071 0E       		.uleb128 0xe
 3407 0072 3A       		.uleb128 0x3a
 3408 0073 0B       		.uleb128 0xb
 3409 0074 3B       		.uleb128 0x3b
 3410 0075 05       		.uleb128 0x5
 3411 0076 49       		.uleb128 0x49
 3412 0077 13       		.uleb128 0x13
 3413 0078 00       		.byte	0
 3414 0079 00       		.byte	0
 3415 007a 0B       		.uleb128 0xb
 3416 007b 2E       		.uleb128 0x2e
 3417 007c 00       		.byte	0
 3418 007d 3F       		.uleb128 0x3f
 3419 007e 19       		.uleb128 0x19
 3420 007f 03       		.uleb128 0x3
 3421 0080 0E       		.uleb128 0xe
 3422 0081 3A       		.uleb128 0x3a
 3423 0082 0B       		.uleb128 0xb
 3424 0083 3B       		.uleb128 0x3b
 3425 0084 05       		.uleb128 0x5
 3426 0085 27       		.uleb128 0x27
 3427 0086 19       		.uleb128 0x19
 3428 0087 20       		.uleb128 0x20
 3429 0088 0B       		.uleb128 0xb
 3430 0089 00       		.byte	0
 3431 008a 00       		.byte	0
 3432 008b 0C       		.uleb128 0xc
 3433 008c 2E       		.uleb128 0x2e
 3434 008d 01       		.byte	0x1
 3435 008e 03       		.uleb128 0x3
 3436 008f 0E       		.uleb128 0xe
 3437 0090 3A       		.uleb128 0x3a
 3438 0091 0B       		.uleb128 0xb
 3439 0092 3B       		.uleb128 0x3b
 3440 0093 05       		.uleb128 0x5
 3441 0094 27       		.uleb128 0x27
 3442 0095 19       		.uleb128 0x19
 3443 0096 20       		.uleb128 0x20
 3444 0097 0B       		.uleb128 0xb
 3445 0098 01       		.uleb128 0x1
 3446 0099 13       		.uleb128 0x13
 3447 009a 00       		.byte	0
 3448 009b 00       		.byte	0
 3449 009c 0D       		.uleb128 0xd
 3450 009d 34       		.uleb128 0x34
 3451 009e 00       		.byte	0
 3452 009f 03       		.uleb128 0x3
 3453 00a0 08       		.uleb128 0x8
 3454 00a1 3A       		.uleb128 0x3a
 3455 00a2 0B       		.uleb128 0xb
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 99


 3456 00a3 3B       		.uleb128 0x3b
 3457 00a4 05       		.uleb128 0x5
 3458 00a5 49       		.uleb128 0x49
 3459 00a6 13       		.uleb128 0x13
 3460 00a7 00       		.byte	0
 3461 00a8 00       		.byte	0
 3462 00a9 0E       		.uleb128 0xe
 3463 00aa 2E       		.uleb128 0x2e
 3464 00ab 00       		.byte	0
 3465 00ac 3F       		.uleb128 0x3f
 3466 00ad 19       		.uleb128 0x19
 3467 00ae 03       		.uleb128 0x3
 3468 00af 0E       		.uleb128 0xe
 3469 00b0 3A       		.uleb128 0x3a
 3470 00b1 0B       		.uleb128 0xb
 3471 00b2 3B       		.uleb128 0x3b
 3472 00b3 0B       		.uleb128 0xb
 3473 00b4 27       		.uleb128 0x27
 3474 00b5 19       		.uleb128 0x19
 3475 00b6 11       		.uleb128 0x11
 3476 00b7 01       		.uleb128 0x1
 3477 00b8 12       		.uleb128 0x12
 3478 00b9 06       		.uleb128 0x6
 3479 00ba 40       		.uleb128 0x40
 3480 00bb 18       		.uleb128 0x18
 3481 00bc 9742     		.uleb128 0x2117
 3482 00be 19       		.uleb128 0x19
 3483 00bf 00       		.byte	0
 3484 00c0 00       		.byte	0
 3485 00c1 0F       		.uleb128 0xf
 3486 00c2 2E       		.uleb128 0x2e
 3487 00c3 01       		.byte	0x1
 3488 00c4 3F       		.uleb128 0x3f
 3489 00c5 19       		.uleb128 0x19
 3490 00c6 03       		.uleb128 0x3
 3491 00c7 0E       		.uleb128 0xe
 3492 00c8 3A       		.uleb128 0x3a
 3493 00c9 0B       		.uleb128 0xb
 3494 00ca 3B       		.uleb128 0x3b
 3495 00cb 05       		.uleb128 0x5
 3496 00cc 27       		.uleb128 0x27
 3497 00cd 19       		.uleb128 0x19
 3498 00ce 11       		.uleb128 0x11
 3499 00cf 01       		.uleb128 0x1
 3500 00d0 12       		.uleb128 0x12
 3501 00d1 06       		.uleb128 0x6
 3502 00d2 40       		.uleb128 0x40
 3503 00d3 18       		.uleb128 0x18
 3504 00d4 9742     		.uleb128 0x2117
 3505 00d6 19       		.uleb128 0x19
 3506 00d7 01       		.uleb128 0x1
 3507 00d8 13       		.uleb128 0x13
 3508 00d9 00       		.byte	0
 3509 00da 00       		.byte	0
 3510 00db 10       		.uleb128 0x10
 3511 00dc 05       		.uleb128 0x5
 3512 00dd 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 100


 3513 00de 03       		.uleb128 0x3
 3514 00df 0E       		.uleb128 0xe
 3515 00e0 3A       		.uleb128 0x3a
 3516 00e1 0B       		.uleb128 0xb
 3517 00e2 3B       		.uleb128 0x3b
 3518 00e3 05       		.uleb128 0x5
 3519 00e4 49       		.uleb128 0x49
 3520 00e5 13       		.uleb128 0x13
 3521 00e6 02       		.uleb128 0x2
 3522 00e7 17       		.uleb128 0x17
 3523 00e8 00       		.byte	0
 3524 00e9 00       		.byte	0
 3525 00ea 11       		.uleb128 0x11
 3526 00eb 34       		.uleb128 0x34
 3527 00ec 00       		.byte	0
 3528 00ed 03       		.uleb128 0x3
 3529 00ee 0E       		.uleb128 0xe
 3530 00ef 3A       		.uleb128 0x3a
 3531 00f0 0B       		.uleb128 0xb
 3532 00f1 3B       		.uleb128 0x3b
 3533 00f2 05       		.uleb128 0x5
 3534 00f3 49       		.uleb128 0x49
 3535 00f4 13       		.uleb128 0x13
 3536 00f5 02       		.uleb128 0x2
 3537 00f6 17       		.uleb128 0x17
 3538 00f7 00       		.byte	0
 3539 00f8 00       		.byte	0
 3540 00f9 12       		.uleb128 0x12
 3541 00fa 898201   		.uleb128 0x4109
 3542 00fd 00       		.byte	0
 3543 00fe 11       		.uleb128 0x11
 3544 00ff 01       		.uleb128 0x1
 3545 0100 31       		.uleb128 0x31
 3546 0101 13       		.uleb128 0x13
 3547 0102 00       		.byte	0
 3548 0103 00       		.byte	0
 3549 0104 13       		.uleb128 0x13
 3550 0105 2E       		.uleb128 0x2e
 3551 0106 00       		.byte	0
 3552 0107 3F       		.uleb128 0x3f
 3553 0108 19       		.uleb128 0x19
 3554 0109 03       		.uleb128 0x3
 3555 010a 0E       		.uleb128 0xe
 3556 010b 3A       		.uleb128 0x3a
 3557 010c 0B       		.uleb128 0xb
 3558 010d 3B       		.uleb128 0x3b
 3559 010e 05       		.uleb128 0x5
 3560 010f 27       		.uleb128 0x27
 3561 0110 19       		.uleb128 0x19
 3562 0111 11       		.uleb128 0x11
 3563 0112 01       		.uleb128 0x1
 3564 0113 12       		.uleb128 0x12
 3565 0114 06       		.uleb128 0x6
 3566 0115 40       		.uleb128 0x40
 3567 0116 18       		.uleb128 0x18
 3568 0117 9742     		.uleb128 0x2117
 3569 0119 19       		.uleb128 0x19
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 101


 3570 011a 00       		.byte	0
 3571 011b 00       		.byte	0
 3572 011c 14       		.uleb128 0x14
 3573 011d 2E       		.uleb128 0x2e
 3574 011e 00       		.byte	0
 3575 011f 3F       		.uleb128 0x3f
 3576 0120 19       		.uleb128 0x19
 3577 0121 03       		.uleb128 0x3
 3578 0122 0E       		.uleb128 0xe
 3579 0123 3A       		.uleb128 0x3a
 3580 0124 0B       		.uleb128 0xb
 3581 0125 3B       		.uleb128 0x3b
 3582 0126 05       		.uleb128 0x5
 3583 0127 27       		.uleb128 0x27
 3584 0128 19       		.uleb128 0x19
 3585 0129 49       		.uleb128 0x49
 3586 012a 13       		.uleb128 0x13
 3587 012b 11       		.uleb128 0x11
 3588 012c 01       		.uleb128 0x1
 3589 012d 12       		.uleb128 0x12
 3590 012e 06       		.uleb128 0x6
 3591 012f 40       		.uleb128 0x40
 3592 0130 18       		.uleb128 0x18
 3593 0131 9742     		.uleb128 0x2117
 3594 0133 19       		.uleb128 0x19
 3595 0134 00       		.byte	0
 3596 0135 00       		.byte	0
 3597 0136 15       		.uleb128 0x15
 3598 0137 2E       		.uleb128 0x2e
 3599 0138 00       		.byte	0
 3600 0139 31       		.uleb128 0x31
 3601 013a 13       		.uleb128 0x13
 3602 013b 11       		.uleb128 0x11
 3603 013c 01       		.uleb128 0x1
 3604 013d 12       		.uleb128 0x12
 3605 013e 06       		.uleb128 0x6
 3606 013f 40       		.uleb128 0x40
 3607 0140 18       		.uleb128 0x18
 3608 0141 9742     		.uleb128 0x2117
 3609 0143 19       		.uleb128 0x19
 3610 0144 00       		.byte	0
 3611 0145 00       		.byte	0
 3612 0146 16       		.uleb128 0x16
 3613 0147 2E       		.uleb128 0x2e
 3614 0148 01       		.byte	0x1
 3615 0149 3F       		.uleb128 0x3f
 3616 014a 19       		.uleb128 0x19
 3617 014b 03       		.uleb128 0x3
 3618 014c 0E       		.uleb128 0xe
 3619 014d 3A       		.uleb128 0x3a
 3620 014e 0B       		.uleb128 0xb
 3621 014f 3B       		.uleb128 0x3b
 3622 0150 05       		.uleb128 0x5
 3623 0151 27       		.uleb128 0x27
 3624 0152 19       		.uleb128 0x19
 3625 0153 49       		.uleb128 0x49
 3626 0154 13       		.uleb128 0x13
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 102


 3627 0155 11       		.uleb128 0x11
 3628 0156 01       		.uleb128 0x1
 3629 0157 12       		.uleb128 0x12
 3630 0158 06       		.uleb128 0x6
 3631 0159 40       		.uleb128 0x40
 3632 015a 18       		.uleb128 0x18
 3633 015b 9742     		.uleb128 0x2117
 3634 015d 19       		.uleb128 0x19
 3635 015e 01       		.uleb128 0x1
 3636 015f 13       		.uleb128 0x13
 3637 0160 00       		.byte	0
 3638 0161 00       		.byte	0
 3639 0162 17       		.uleb128 0x17
 3640 0163 34       		.uleb128 0x34
 3641 0164 00       		.byte	0
 3642 0165 03       		.uleb128 0x3
 3643 0166 0E       		.uleb128 0xe
 3644 0167 3A       		.uleb128 0x3a
 3645 0168 0B       		.uleb128 0xb
 3646 0169 3B       		.uleb128 0x3b
 3647 016a 05       		.uleb128 0x5
 3648 016b 49       		.uleb128 0x49
 3649 016c 13       		.uleb128 0x13
 3650 016d 02       		.uleb128 0x2
 3651 016e 18       		.uleb128 0x18
 3652 016f 00       		.byte	0
 3653 0170 00       		.byte	0
 3654 0171 18       		.uleb128 0x18
 3655 0172 05       		.uleb128 0x5
 3656 0173 00       		.byte	0
 3657 0174 03       		.uleb128 0x3
 3658 0175 0E       		.uleb128 0xe
 3659 0176 3A       		.uleb128 0x3a
 3660 0177 0B       		.uleb128 0xb
 3661 0178 3B       		.uleb128 0x3b
 3662 0179 05       		.uleb128 0x5
 3663 017a 49       		.uleb128 0x49
 3664 017b 13       		.uleb128 0x13
 3665 017c 02       		.uleb128 0x2
 3666 017d 18       		.uleb128 0x18
 3667 017e 00       		.byte	0
 3668 017f 00       		.byte	0
 3669 0180 19       		.uleb128 0x19
 3670 0181 2E       		.uleb128 0x2e
 3671 0182 01       		.byte	0x1
 3672 0183 3F       		.uleb128 0x3f
 3673 0184 19       		.uleb128 0x19
 3674 0185 03       		.uleb128 0x3
 3675 0186 0E       		.uleb128 0xe
 3676 0187 3A       		.uleb128 0x3a
 3677 0188 0B       		.uleb128 0xb
 3678 0189 3B       		.uleb128 0x3b
 3679 018a 05       		.uleb128 0x5
 3680 018b 27       		.uleb128 0x27
 3681 018c 19       		.uleb128 0x19
 3682 018d 49       		.uleb128 0x49
 3683 018e 13       		.uleb128 0x13
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 103


 3684 018f 20       		.uleb128 0x20
 3685 0190 0B       		.uleb128 0xb
 3686 0191 01       		.uleb128 0x1
 3687 0192 13       		.uleb128 0x13
 3688 0193 00       		.byte	0
 3689 0194 00       		.byte	0
 3690 0195 1A       		.uleb128 0x1a
 3691 0196 34       		.uleb128 0x34
 3692 0197 00       		.byte	0
 3693 0198 03       		.uleb128 0x3
 3694 0199 0E       		.uleb128 0xe
 3695 019a 3A       		.uleb128 0x3a
 3696 019b 0B       		.uleb128 0xb
 3697 019c 3B       		.uleb128 0x3b
 3698 019d 05       		.uleb128 0x5
 3699 019e 49       		.uleb128 0x49
 3700 019f 13       		.uleb128 0x13
 3701 01a0 00       		.byte	0
 3702 01a1 00       		.byte	0
 3703 01a2 1B       		.uleb128 0x1b
 3704 01a3 2E       		.uleb128 0x2e
 3705 01a4 01       		.byte	0x1
 3706 01a5 31       		.uleb128 0x31
 3707 01a6 13       		.uleb128 0x13
 3708 01a7 11       		.uleb128 0x11
 3709 01a8 01       		.uleb128 0x1
 3710 01a9 12       		.uleb128 0x12
 3711 01aa 06       		.uleb128 0x6
 3712 01ab 40       		.uleb128 0x40
 3713 01ac 18       		.uleb128 0x18
 3714 01ad 9742     		.uleb128 0x2117
 3715 01af 19       		.uleb128 0x19
 3716 01b0 01       		.uleb128 0x1
 3717 01b1 13       		.uleb128 0x13
 3718 01b2 00       		.byte	0
 3719 01b3 00       		.byte	0
 3720 01b4 1C       		.uleb128 0x1c
 3721 01b5 05       		.uleb128 0x5
 3722 01b6 00       		.byte	0
 3723 01b7 31       		.uleb128 0x31
 3724 01b8 13       		.uleb128 0x13
 3725 01b9 02       		.uleb128 0x2
 3726 01ba 17       		.uleb128 0x17
 3727 01bb 00       		.byte	0
 3728 01bc 00       		.byte	0
 3729 01bd 1D       		.uleb128 0x1d
 3730 01be 05       		.uleb128 0x5
 3731 01bf 00       		.byte	0
 3732 01c0 31       		.uleb128 0x31
 3733 01c1 13       		.uleb128 0x13
 3734 01c2 02       		.uleb128 0x2
 3735 01c3 18       		.uleb128 0x18
 3736 01c4 00       		.byte	0
 3737 01c5 00       		.byte	0
 3738 01c6 1E       		.uleb128 0x1e
 3739 01c7 34       		.uleb128 0x34
 3740 01c8 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 104


 3741 01c9 31       		.uleb128 0x31
 3742 01ca 13       		.uleb128 0x13
 3743 01cb 02       		.uleb128 0x2
 3744 01cc 18       		.uleb128 0x18
 3745 01cd 00       		.byte	0
 3746 01ce 00       		.byte	0
 3747 01cf 1F       		.uleb128 0x1f
 3748 01d0 34       		.uleb128 0x34
 3749 01d1 00       		.byte	0
 3750 01d2 31       		.uleb128 0x31
 3751 01d3 13       		.uleb128 0x13
 3752 01d4 1C       		.uleb128 0x1c
 3753 01d5 06       		.uleb128 0x6
 3754 01d6 00       		.byte	0
 3755 01d7 00       		.byte	0
 3756 01d8 20       		.uleb128 0x20
 3757 01d9 1D       		.uleb128 0x1d
 3758 01da 01       		.byte	0x1
 3759 01db 31       		.uleb128 0x31
 3760 01dc 13       		.uleb128 0x13
 3761 01dd 11       		.uleb128 0x11
 3762 01de 01       		.uleb128 0x1
 3763 01df 12       		.uleb128 0x12
 3764 01e0 06       		.uleb128 0x6
 3765 01e1 58       		.uleb128 0x58
 3766 01e2 0B       		.uleb128 0xb
 3767 01e3 59       		.uleb128 0x59
 3768 01e4 05       		.uleb128 0x5
 3769 01e5 00       		.byte	0
 3770 01e6 00       		.byte	0
 3771 01e7 21       		.uleb128 0x21
 3772 01e8 34       		.uleb128 0x34
 3773 01e9 00       		.byte	0
 3774 01ea 03       		.uleb128 0x3
 3775 01eb 0E       		.uleb128 0xe
 3776 01ec 3A       		.uleb128 0x3a
 3777 01ed 0B       		.uleb128 0xb
 3778 01ee 3B       		.uleb128 0x3b
 3779 01ef 05       		.uleb128 0x5
 3780 01f0 49       		.uleb128 0x49
 3781 01f1 13       		.uleb128 0x13
 3782 01f2 1C       		.uleb128 0x1c
 3783 01f3 06       		.uleb128 0x6
 3784 01f4 00       		.byte	0
 3785 01f5 00       		.byte	0
 3786 01f6 22       		.uleb128 0x22
 3787 01f7 1D       		.uleb128 0x1d
 3788 01f8 01       		.byte	0x1
 3789 01f9 31       		.uleb128 0x31
 3790 01fa 13       		.uleb128 0x13
 3791 01fb 11       		.uleb128 0x11
 3792 01fc 01       		.uleb128 0x1
 3793 01fd 12       		.uleb128 0x12
 3794 01fe 06       		.uleb128 0x6
 3795 01ff 58       		.uleb128 0x58
 3796 0200 0B       		.uleb128 0xb
 3797 0201 59       		.uleb128 0x59
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 105


 3798 0202 05       		.uleb128 0x5
 3799 0203 01       		.uleb128 0x1
 3800 0204 13       		.uleb128 0x13
 3801 0205 00       		.byte	0
 3802 0206 00       		.byte	0
 3803 0207 23       		.uleb128 0x23
 3804 0208 898201   		.uleb128 0x4109
 3805 020b 01       		.byte	0x1
 3806 020c 11       		.uleb128 0x11
 3807 020d 01       		.uleb128 0x1
 3808 020e 31       		.uleb128 0x31
 3809 020f 13       		.uleb128 0x13
 3810 0210 01       		.uleb128 0x1
 3811 0211 13       		.uleb128 0x13
 3812 0212 00       		.byte	0
 3813 0213 00       		.byte	0
 3814 0214 24       		.uleb128 0x24
 3815 0215 8A8201   		.uleb128 0x410a
 3816 0218 00       		.byte	0
 3817 0219 02       		.uleb128 0x2
 3818 021a 18       		.uleb128 0x18
 3819 021b 9142     		.uleb128 0x2111
 3820 021d 18       		.uleb128 0x18
 3821 021e 00       		.byte	0
 3822 021f 00       		.byte	0
 3823 0220 25       		.uleb128 0x25
 3824 0221 898201   		.uleb128 0x4109
 3825 0224 01       		.byte	0x1
 3826 0225 11       		.uleb128 0x11
 3827 0226 01       		.uleb128 0x1
 3828 0227 31       		.uleb128 0x31
 3829 0228 13       		.uleb128 0x13
 3830 0229 00       		.byte	0
 3831 022a 00       		.byte	0
 3832 022b 26       		.uleb128 0x26
 3833 022c 1D       		.uleb128 0x1d
 3834 022d 00       		.byte	0
 3835 022e 31       		.uleb128 0x31
 3836 022f 13       		.uleb128 0x13
 3837 0230 52       		.uleb128 0x52
 3838 0231 01       		.uleb128 0x1
 3839 0232 55       		.uleb128 0x55
 3840 0233 17       		.uleb128 0x17
 3841 0234 58       		.uleb128 0x58
 3842 0235 0B       		.uleb128 0xb
 3843 0236 59       		.uleb128 0x59
 3844 0237 05       		.uleb128 0x5
 3845 0238 00       		.byte	0
 3846 0239 00       		.byte	0
 3847 023a 27       		.uleb128 0x27
 3848 023b 2E       		.uleb128 0x2e
 3849 023c 01       		.byte	0x1
 3850 023d 3F       		.uleb128 0x3f
 3851 023e 19       		.uleb128 0x19
 3852 023f 03       		.uleb128 0x3
 3853 0240 0E       		.uleb128 0xe
 3854 0241 3A       		.uleb128 0x3a
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 106


 3855 0242 0B       		.uleb128 0xb
 3856 0243 3B       		.uleb128 0x3b
 3857 0244 05       		.uleb128 0x5
 3858 0245 27       		.uleb128 0x27
 3859 0246 19       		.uleb128 0x19
 3860 0247 11       		.uleb128 0x11
 3861 0248 01       		.uleb128 0x1
 3862 0249 12       		.uleb128 0x12
 3863 024a 06       		.uleb128 0x6
 3864 024b 40       		.uleb128 0x40
 3865 024c 18       		.uleb128 0x18
 3866 024d 9642     		.uleb128 0x2116
 3867 024f 19       		.uleb128 0x19
 3868 0250 01       		.uleb128 0x1
 3869 0251 13       		.uleb128 0x13
 3870 0252 00       		.byte	0
 3871 0253 00       		.byte	0
 3872 0254 28       		.uleb128 0x28
 3873 0255 34       		.uleb128 0x34
 3874 0256 00       		.byte	0
 3875 0257 03       		.uleb128 0x3
 3876 0258 08       		.uleb128 0x8
 3877 0259 3A       		.uleb128 0x3a
 3878 025a 0B       		.uleb128 0xb
 3879 025b 3B       		.uleb128 0x3b
 3880 025c 05       		.uleb128 0x5
 3881 025d 49       		.uleb128 0x49
 3882 025e 13       		.uleb128 0x13
 3883 025f 02       		.uleb128 0x2
 3884 0260 17       		.uleb128 0x17
 3885 0261 00       		.byte	0
 3886 0262 00       		.byte	0
 3887 0263 29       		.uleb128 0x29
 3888 0264 1D       		.uleb128 0x1d
 3889 0265 01       		.byte	0x1
 3890 0266 31       		.uleb128 0x31
 3891 0267 13       		.uleb128 0x13
 3892 0268 52       		.uleb128 0x52
 3893 0269 01       		.uleb128 0x1
 3894 026a 55       		.uleb128 0x55
 3895 026b 17       		.uleb128 0x17
 3896 026c 58       		.uleb128 0x58
 3897 026d 0B       		.uleb128 0xb
 3898 026e 59       		.uleb128 0x59
 3899 026f 05       		.uleb128 0x5
 3900 0270 01       		.uleb128 0x1
 3901 0271 13       		.uleb128 0x13
 3902 0272 00       		.byte	0
 3903 0273 00       		.byte	0
 3904 0274 2A       		.uleb128 0x2a
 3905 0275 05       		.uleb128 0x5
 3906 0276 00       		.byte	0
 3907 0277 31       		.uleb128 0x31
 3908 0278 13       		.uleb128 0x13
 3909 0279 1C       		.uleb128 0x1c
 3910 027a 0B       		.uleb128 0xb
 3911 027b 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 107


 3912 027c 00       		.byte	0
 3913 027d 2B       		.uleb128 0x2b
 3914 027e 0B       		.uleb128 0xb
 3915 027f 01       		.byte	0x1
 3916 0280 55       		.uleb128 0x55
 3917 0281 17       		.uleb128 0x17
 3918 0282 00       		.byte	0
 3919 0283 00       		.byte	0
 3920 0284 2C       		.uleb128 0x2c
 3921 0285 34       		.uleb128 0x34
 3922 0286 00       		.byte	0
 3923 0287 31       		.uleb128 0x31
 3924 0288 13       		.uleb128 0x13
 3925 0289 02       		.uleb128 0x2
 3926 028a 17       		.uleb128 0x17
 3927 028b 00       		.byte	0
 3928 028c 00       		.byte	0
 3929 028d 2D       		.uleb128 0x2d
 3930 028e 2E       		.uleb128 0x2e
 3931 028f 01       		.byte	0x1
 3932 0290 31       		.uleb128 0x31
 3933 0291 13       		.uleb128 0x13
 3934 0292 11       		.uleb128 0x11
 3935 0293 01       		.uleb128 0x1
 3936 0294 12       		.uleb128 0x12
 3937 0295 06       		.uleb128 0x6
 3938 0296 40       		.uleb128 0x40
 3939 0297 18       		.uleb128 0x18
 3940 0298 9642     		.uleb128 0x2116
 3941 029a 19       		.uleb128 0x19
 3942 029b 01       		.uleb128 0x1
 3943 029c 13       		.uleb128 0x13
 3944 029d 00       		.byte	0
 3945 029e 00       		.byte	0
 3946 029f 2E       		.uleb128 0x2e
 3947 02a0 34       		.uleb128 0x34
 3948 02a1 00       		.byte	0
 3949 02a2 31       		.uleb128 0x31
 3950 02a3 13       		.uleb128 0x13
 3951 02a4 00       		.byte	0
 3952 02a5 00       		.byte	0
 3953 02a6 2F       		.uleb128 0x2f
 3954 02a7 0B       		.uleb128 0xb
 3955 02a8 01       		.byte	0x1
 3956 02a9 11       		.uleb128 0x11
 3957 02aa 01       		.uleb128 0x1
 3958 02ab 12       		.uleb128 0x12
 3959 02ac 06       		.uleb128 0x6
 3960 02ad 01       		.uleb128 0x1
 3961 02ae 13       		.uleb128 0x13
 3962 02af 00       		.byte	0
 3963 02b0 00       		.byte	0
 3964 02b1 30       		.uleb128 0x30
 3965 02b2 01       		.uleb128 0x1
 3966 02b3 01       		.byte	0x1
 3967 02b4 49       		.uleb128 0x49
 3968 02b5 13       		.uleb128 0x13
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 108


 3969 02b6 01       		.uleb128 0x1
 3970 02b7 13       		.uleb128 0x13
 3971 02b8 00       		.byte	0
 3972 02b9 00       		.byte	0
 3973 02ba 31       		.uleb128 0x31
 3974 02bb 21       		.uleb128 0x21
 3975 02bc 00       		.byte	0
 3976 02bd 49       		.uleb128 0x49
 3977 02be 13       		.uleb128 0x13
 3978 02bf 2F       		.uleb128 0x2f
 3979 02c0 0B       		.uleb128 0xb
 3980 02c1 00       		.byte	0
 3981 02c2 00       		.byte	0
 3982 02c3 32       		.uleb128 0x32
 3983 02c4 34       		.uleb128 0x34
 3984 02c5 00       		.byte	0
 3985 02c6 03       		.uleb128 0x3
 3986 02c7 0E       		.uleb128 0xe
 3987 02c8 3A       		.uleb128 0x3a
 3988 02c9 0B       		.uleb128 0xb
 3989 02ca 3B       		.uleb128 0x3b
 3990 02cb 0B       		.uleb128 0xb
 3991 02cc 49       		.uleb128 0x49
 3992 02cd 13       		.uleb128 0x13
 3993 02ce 02       		.uleb128 0x2
 3994 02cf 18       		.uleb128 0x18
 3995 02d0 00       		.byte	0
 3996 02d1 00       		.byte	0
 3997 02d2 33       		.uleb128 0x33
 3998 02d3 34       		.uleb128 0x34
 3999 02d4 00       		.byte	0
 4000 02d5 03       		.uleb128 0x3
 4001 02d6 0E       		.uleb128 0xe
 4002 02d7 3A       		.uleb128 0x3a
 4003 02d8 0B       		.uleb128 0xb
 4004 02d9 3B       		.uleb128 0x3b
 4005 02da 0B       		.uleb128 0xb
 4006 02db 49       		.uleb128 0x49
 4007 02dc 13       		.uleb128 0x13
 4008 02dd 3F       		.uleb128 0x3f
 4009 02de 19       		.uleb128 0x19
 4010 02df 02       		.uleb128 0x2
 4011 02e0 18       		.uleb128 0x18
 4012 02e1 00       		.byte	0
 4013 02e2 00       		.byte	0
 4014 02e3 34       		.uleb128 0x34
 4015 02e4 26       		.uleb128 0x26
 4016 02e5 00       		.byte	0
 4017 02e6 49       		.uleb128 0x49
 4018 02e7 13       		.uleb128 0x13
 4019 02e8 00       		.byte	0
 4020 02e9 00       		.byte	0
 4021 02ea 35       		.uleb128 0x35
 4022 02eb 2E       		.uleb128 0x2e
 4023 02ec 00       		.byte	0
 4024 02ed 3F       		.uleb128 0x3f
 4025 02ee 19       		.uleb128 0x19
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 109


 4026 02ef 03       		.uleb128 0x3
 4027 02f0 0E       		.uleb128 0xe
 4028 02f1 3A       		.uleb128 0x3a
 4029 02f2 0B       		.uleb128 0xb
 4030 02f3 3B       		.uleb128 0x3b
 4031 02f4 0B       		.uleb128 0xb
 4032 02f5 27       		.uleb128 0x27
 4033 02f6 19       		.uleb128 0x19
 4034 02f7 49       		.uleb128 0x49
 4035 02f8 13       		.uleb128 0x13
 4036 02f9 3C       		.uleb128 0x3c
 4037 02fa 19       		.uleb128 0x19
 4038 02fb 00       		.byte	0
 4039 02fc 00       		.byte	0
 4040 02fd 36       		.uleb128 0x36
 4041 02fe 2E       		.uleb128 0x2e
 4042 02ff 01       		.byte	0x1
 4043 0300 3F       		.uleb128 0x3f
 4044 0301 19       		.uleb128 0x19
 4045 0302 03       		.uleb128 0x3
 4046 0303 0E       		.uleb128 0xe
 4047 0304 3A       		.uleb128 0x3a
 4048 0305 0B       		.uleb128 0xb
 4049 0306 3B       		.uleb128 0x3b
 4050 0307 0B       		.uleb128 0xb
 4051 0308 27       		.uleb128 0x27
 4052 0309 19       		.uleb128 0x19
 4053 030a 3C       		.uleb128 0x3c
 4054 030b 19       		.uleb128 0x19
 4055 030c 01       		.uleb128 0x1
 4056 030d 13       		.uleb128 0x13
 4057 030e 00       		.byte	0
 4058 030f 00       		.byte	0
 4059 0310 37       		.uleb128 0x37
 4060 0311 05       		.uleb128 0x5
 4061 0312 00       		.byte	0
 4062 0313 49       		.uleb128 0x49
 4063 0314 13       		.uleb128 0x13
 4064 0315 00       		.byte	0
 4065 0316 00       		.byte	0
 4066 0317 38       		.uleb128 0x38
 4067 0318 2E       		.uleb128 0x2e
 4068 0319 01       		.byte	0x1
 4069 031a 3F       		.uleb128 0x3f
 4070 031b 19       		.uleb128 0x19
 4071 031c 03       		.uleb128 0x3
 4072 031d 0E       		.uleb128 0xe
 4073 031e 3A       		.uleb128 0x3a
 4074 031f 0B       		.uleb128 0xb
 4075 0320 3B       		.uleb128 0x3b
 4076 0321 0B       		.uleb128 0xb
 4077 0322 27       		.uleb128 0x27
 4078 0323 19       		.uleb128 0x19
 4079 0324 3C       		.uleb128 0x3c
 4080 0325 19       		.uleb128 0x19
 4081 0326 00       		.byte	0
 4082 0327 00       		.byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 110


 4083 0328 00       		.byte	0
 4084              		.section	.debug_loc,"",%progbits
 4085              	.Ldebug_loc0:
 4086              	.LLST0:
 4087 0000 00000000 		.4byte	.LVL0
 4088 0004 07000000 		.4byte	.LVL1-1
 4089 0008 0100     		.2byte	0x1
 4090 000a 50       		.byte	0x50
 4091 000b 07000000 		.4byte	.LVL1-1
 4092 000f 10000000 		.4byte	.LVL2
 4093 0013 0100     		.2byte	0x1
 4094 0015 54       		.byte	0x54
 4095 0016 10000000 		.4byte	.LVL2
 4096 001a 24000000 		.4byte	.LFE2
 4097 001e 0400     		.2byte	0x4
 4098 0020 F3       		.byte	0xf3
 4099 0021 01       		.uleb128 0x1
 4100 0022 50       		.byte	0x50
 4101 0023 9F       		.byte	0x9f
 4102 0024 00000000 		.4byte	0
 4103 0028 00000000 		.4byte	0
 4104              	.LLST1:
 4105 002c 08000000 		.4byte	.LVL1
 4106 0030 1B000000 		.4byte	.LVL3-1
 4107 0034 0100     		.2byte	0x1
 4108 0036 50       		.byte	0x50
 4109 0037 00000000 		.4byte	0
 4110 003b 00000000 		.4byte	0
 4111              	.LLST2:
 4112 003f 00000000 		.4byte	.LVL4
 4113 0043 07000000 		.4byte	.LVL5-1
 4114 0047 0100     		.2byte	0x1
 4115 0049 50       		.byte	0x50
 4116 004a 07000000 		.4byte	.LVL5-1
 4117 004e 12000000 		.4byte	.LVL6
 4118 0052 0100     		.2byte	0x1
 4119 0054 54       		.byte	0x54
 4120 0055 12000000 		.4byte	.LVL6
 4121 0059 2C000000 		.4byte	.LFE3
 4122 005d 0400     		.2byte	0x4
 4123 005f F3       		.byte	0xf3
 4124 0060 01       		.uleb128 0x1
 4125 0061 50       		.byte	0x50
 4126 0062 9F       		.byte	0x9f
 4127 0063 00000000 		.4byte	0
 4128 0067 00000000 		.4byte	0
 4129              	.LLST3:
 4130 006b 08000000 		.4byte	.LVL5
 4131 006f 1F000000 		.4byte	.LVL7-1
 4132 0073 0100     		.2byte	0x1
 4133 0075 50       		.byte	0x50
 4134 0076 00000000 		.4byte	0
 4135 007a 00000000 		.4byte	0
 4136              	.LLST4:
 4137 007e 00000000 		.4byte	.LVL8
 4138 0082 08000000 		.4byte	.LVL9
 4139 0086 0100     		.2byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 111


 4140 0088 50       		.byte	0x50
 4141 0089 08000000 		.4byte	.LVL9
 4142 008d 14000000 		.4byte	.LFE9
 4143 0091 0100     		.2byte	0x1
 4144 0093 51       		.byte	0x51
 4145 0094 00000000 		.4byte	0
 4146 0098 00000000 		.4byte	0
 4147              	.LLST5:
 4148 009c 0A000000 		.4byte	.LVL10
 4149 00a0 0C000000 		.4byte	.LVL11
 4150 00a4 0500     		.2byte	0x5
 4151 00a6 70       		.byte	0x70
 4152 00a7 00       		.sleb128 0
 4153 00a8 49       		.byte	0x49
 4154 00a9 1A       		.byte	0x1a
 4155 00aa 9F       		.byte	0x9f
 4156 00ab 0C000000 		.4byte	.LVL11
 4157 00af 14000000 		.4byte	.LFE9
 4158 00b3 0100     		.2byte	0x1
 4159 00b5 50       		.byte	0x50
 4160 00b6 00000000 		.4byte	0
 4161 00ba 00000000 		.4byte	0
 4162              	.LLST6:
 4163 00be 00000000 		.4byte	.LVL14
 4164 00c2 0A000000 		.4byte	.LVL17
 4165 00c6 0100     		.2byte	0x1
 4166 00c8 50       		.byte	0x50
 4167 00c9 0A000000 		.4byte	.LVL17
 4168 00cd 14000000 		.4byte	.LFE12
 4169 00d1 0400     		.2byte	0x4
 4170 00d3 F3       		.byte	0xf3
 4171 00d4 01       		.uleb128 0x1
 4172 00d5 50       		.byte	0x50
 4173 00d6 9F       		.byte	0x9f
 4174 00d7 00000000 		.4byte	0
 4175 00db 00000000 		.4byte	0
 4176              	.LLST7:
 4177 00df 04000000 		.4byte	.LVL15
 4178 00e3 06000000 		.4byte	.LVL16
 4179 00e7 0200     		.2byte	0x2
 4180 00e9 30       		.byte	0x30
 4181 00ea 9F       		.byte	0x9f
 4182 00eb 00000000 		.4byte	0
 4183 00ef 00000000 		.4byte	0
 4184              	.LLST8:
 4185 00f3 00000000 		.4byte	.LVL19
 4186 00f7 0C000000 		.4byte	.LVL22
 4187 00fb 0100     		.2byte	0x1
 4188 00fd 50       		.byte	0x50
 4189 00fe 0C000000 		.4byte	.LVL22
 4190 0102 12000000 		.4byte	.LFE13
 4191 0106 0400     		.2byte	0x4
 4192 0108 F3       		.byte	0xf3
 4193 0109 01       		.uleb128 0x1
 4194 010a 50       		.byte	0x50
 4195 010b 9F       		.byte	0x9f
 4196 010c 00000000 		.4byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 112


 4197 0110 00000000 		.4byte	0
 4198              	.LLST9:
 4199 0114 04000000 		.4byte	.LVL20
 4200 0118 06000000 		.4byte	.LVL21
 4201 011c 0200     		.2byte	0x2
 4202 011e 30       		.byte	0x30
 4203 011f 9F       		.byte	0x9f
 4204 0120 00000000 		.4byte	0
 4205 0124 00000000 		.4byte	0
 4206              	.LLST10:
 4207 0128 00000000 		.4byte	.LVL23
 4208 012c 0A000000 		.4byte	.LVL26
 4209 0130 0100     		.2byte	0x1
 4210 0132 50       		.byte	0x50
 4211 0133 0A000000 		.4byte	.LVL26
 4212 0137 18000000 		.4byte	.LFE14
 4213 013b 0400     		.2byte	0x4
 4214 013d F3       		.byte	0xf3
 4215 013e 01       		.uleb128 0x1
 4216 013f 50       		.byte	0x50
 4217 0140 9F       		.byte	0x9f
 4218 0141 00000000 		.4byte	0
 4219 0145 00000000 		.4byte	0
 4220              	.LLST11:
 4221 0149 04000000 		.4byte	.LVL24
 4222 014d 06000000 		.4byte	.LVL25
 4223 0151 0200     		.2byte	0x2
 4224 0153 30       		.byte	0x30
 4225 0154 9F       		.byte	0x9f
 4226 0155 00000000 		.4byte	0
 4227 0159 00000000 		.4byte	0
 4228              	.LLST12:
 4229 015d 00000000 		.4byte	.LVL28
 4230 0161 0A000000 		.4byte	.LVL31
 4231 0165 0100     		.2byte	0x1
 4232 0167 50       		.byte	0x50
 4233 0168 0A000000 		.4byte	.LVL31
 4234 016c 14000000 		.4byte	.LFE15
 4235 0170 0400     		.2byte	0x4
 4236 0172 F3       		.byte	0xf3
 4237 0173 01       		.uleb128 0x1
 4238 0174 50       		.byte	0x50
 4239 0175 9F       		.byte	0x9f
 4240 0176 00000000 		.4byte	0
 4241 017a 00000000 		.4byte	0
 4242              	.LLST13:
 4243 017e 04000000 		.4byte	.LVL29
 4244 0182 06000000 		.4byte	.LVL30
 4245 0186 0200     		.2byte	0x2
 4246 0188 30       		.byte	0x30
 4247 0189 9F       		.byte	0x9f
 4248 018a 00000000 		.4byte	0
 4249 018e 00000000 		.4byte	0
 4250              	.LLST14:
 4251 0192 00000000 		.4byte	.LVL32
 4252 0196 15000000 		.4byte	.LVL37-1
 4253 019a 0100     		.2byte	0x1
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 113


 4254 019c 50       		.byte	0x50
 4255 019d 15000000 		.4byte	.LVL37-1
 4256 01a1 40000000 		.4byte	.LFE16
 4257 01a5 0400     		.2byte	0x4
 4258 01a7 F3       		.byte	0xf3
 4259 01a8 01       		.uleb128 0x1
 4260 01a9 50       		.byte	0x50
 4261 01aa 9F       		.byte	0x9f
 4262 01ab 00000000 		.4byte	0
 4263 01af 00000000 		.4byte	0
 4264              	.LLST15:
 4265 01b3 00000000 		.4byte	.LVL32
 4266 01b7 15000000 		.4byte	.LVL37-1
 4267 01bb 0100     		.2byte	0x1
 4268 01bd 51       		.byte	0x51
 4269 01be 15000000 		.4byte	.LVL37-1
 4270 01c2 40000000 		.4byte	.LFE16
 4271 01c6 0400     		.2byte	0x4
 4272 01c8 F3       		.byte	0xf3
 4273 01c9 01       		.uleb128 0x1
 4274 01ca 51       		.byte	0x51
 4275 01cb 9F       		.byte	0x9f
 4276 01cc 00000000 		.4byte	0
 4277 01d0 00000000 		.4byte	0
 4278              	.LLST16:
 4279 01d4 16000000 		.4byte	.LVL37
 4280 01d8 37000000 		.4byte	.LVL42-1
 4281 01dc 0100     		.2byte	0x1
 4282 01de 50       		.byte	0x50
 4283 01df 00000000 		.4byte	0
 4284 01e3 00000000 		.4byte	0
 4285              	.LLST17:
 4286 01e7 12000000 		.4byte	.LVL36
 4287 01eb 15000000 		.4byte	.LVL37-1
 4288 01ef 0C00     		.2byte	0xc
 4289 01f1 70       		.byte	0x70
 4290 01f2 00       		.sleb128 0
 4291 01f3 33       		.byte	0x33
 4292 01f4 1A       		.byte	0x1a
 4293 01f5 08       		.byte	0x8
 4294 01f6 FF       		.byte	0xff
 4295 01f7 1A       		.byte	0x1a
 4296 01f8 33       		.byte	0x33
 4297 01f9 24       		.byte	0x24
 4298 01fa 23       		.byte	0x23
 4299 01fb 06       		.uleb128 0x6
 4300 01fc 9F       		.byte	0x9f
 4301 01fd 15000000 		.4byte	.LVL37-1
 4302 0201 22000000 		.4byte	.LVL38
 4303 0205 0C00     		.2byte	0xc
 4304 0207 74       		.byte	0x74
 4305 0208 00       		.sleb128 0
 4306 0209 33       		.byte	0x33
 4307 020a 1A       		.byte	0x1a
 4308 020b 08       		.byte	0x8
 4309 020c FF       		.byte	0xff
 4310 020d 1A       		.byte	0x1a
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 114


 4311 020e 33       		.byte	0x33
 4312 020f 24       		.byte	0x24
 4313 0210 23       		.byte	0x23
 4314 0211 06       		.uleb128 0x6
 4315 0212 9F       		.byte	0x9f
 4316 0213 00000000 		.4byte	0
 4317 0217 00000000 		.4byte	0
 4318              	.LLST18:
 4319 021b 26000000 		.4byte	.LVL39
 4320 021f 32000000 		.4byte	.LVL41
 4321 0223 0100     		.2byte	0x1
 4322 0225 51       		.byte	0x51
 4323 0226 32000000 		.4byte	.LVL41
 4324 022a 38000000 		.4byte	.LVL43
 4325 022e 0100     		.2byte	0x1
 4326 0230 54       		.byte	0x54
 4327 0231 00000000 		.4byte	0
 4328 0235 00000000 		.4byte	0
 4329              	.LLST19:
 4330 0239 0A000000 		.4byte	.LVL33
 4331 023d 0C000000 		.4byte	.LVL34
 4332 0241 0200     		.2byte	0x2
 4333 0243 30       		.byte	0x30
 4334 0244 9F       		.byte	0x9f
 4335 0245 00000000 		.4byte	0
 4336 0249 00000000 		.4byte	0
 4337              	.LLST20:
 4338 024d 10000000 		.4byte	.LVL35
 4339 0251 12000000 		.4byte	.LVL36
 4340 0255 0200     		.2byte	0x2
 4341 0257 30       		.byte	0x30
 4342 0258 9F       		.byte	0x9f
 4343 0259 00000000 		.4byte	0
 4344 025d 00000000 		.4byte	0
 4345              	.LLST21:
 4346 0261 00000000 		.4byte	.LVL44
 4347 0265 14000000 		.4byte	.LVL48
 4348 0269 0100     		.2byte	0x1
 4349 026b 50       		.byte	0x50
 4350 026c 14000000 		.4byte	.LVL48
 4351 0270 24000000 		.4byte	.LFE17
 4352 0274 0400     		.2byte	0x4
 4353 0276 F3       		.byte	0xf3
 4354 0277 01       		.uleb128 0x1
 4355 0278 50       		.byte	0x50
 4356 0279 9F       		.byte	0x9f
 4357 027a 00000000 		.4byte	0
 4358 027e 00000000 		.4byte	0
 4359              	.LLST22:
 4360 0282 10000000 		.4byte	.LVL47
 4361 0286 14000000 		.4byte	.LVL48
 4362 028a 0F00     		.2byte	0xf
 4363 028c 72       		.byte	0x72
 4364 028d 00       		.sleb128 0
 4365 028e 70       		.byte	0x70
 4366 028f 00       		.sleb128 0
 4367 0290 33       		.byte	0x33
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 115


 4368 0291 1A       		.byte	0x1a
 4369 0292 08       		.byte	0x8
 4370 0293 FF       		.byte	0xff
 4371 0294 1A       		.byte	0x1a
 4372 0295 33       		.byte	0x33
 4373 0296 24       		.byte	0x24
 4374 0297 23       		.byte	0x23
 4375 0298 06       		.uleb128 0x6
 4376 0299 25       		.byte	0x25
 4377 029a 9F       		.byte	0x9f
 4378 029b 00000000 		.4byte	0
 4379 029f 00000000 		.4byte	0
 4380              	.LLST23:
 4381 02a3 04000000 		.4byte	.LVL45
 4382 02a7 06000000 		.4byte	.LVL46
 4383 02ab 0200     		.2byte	0x2
 4384 02ad 30       		.byte	0x30
 4385 02ae 9F       		.byte	0x9f
 4386 02af 00000000 		.4byte	0
 4387 02b3 00000000 		.4byte	0
 4388              	.LLST24:
 4389 02b7 00000000 		.4byte	.LVL49
 4390 02bb 04000000 		.4byte	.LVL50
 4391 02bf 0100     		.2byte	0x1
 4392 02c1 50       		.byte	0x50
 4393 02c2 04000000 		.4byte	.LVL50
 4394 02c6 14000000 		.4byte	.LFE18
 4395 02ca 0400     		.2byte	0x4
 4396 02cc F3       		.byte	0xf3
 4397 02cd 01       		.uleb128 0x1
 4398 02ce 50       		.byte	0x50
 4399 02cf 9F       		.byte	0x9f
 4400 02d0 00000000 		.4byte	0
 4401 02d4 00000000 		.4byte	0
 4402              	.LLST25:
 4403 02d8 00000000 		.4byte	.LVL51
 4404 02dc 08000000 		.4byte	.LVL52
 4405 02e0 0100     		.2byte	0x1
 4406 02e2 50       		.byte	0x50
 4407 02e3 08000000 		.4byte	.LVL52
 4408 02e7 18000000 		.4byte	.LFE19
 4409 02eb 0400     		.2byte	0x4
 4410 02ed F3       		.byte	0xf3
 4411 02ee 01       		.uleb128 0x1
 4412 02ef 50       		.byte	0x50
 4413 02f0 9F       		.byte	0x9f
 4414 02f1 00000000 		.4byte	0
 4415 02f5 00000000 		.4byte	0
 4416              	.LLST26:
 4417 02f9 00000000 		.4byte	.LVL53
 4418 02fd 04000000 		.4byte	.LVL54
 4419 0301 0100     		.2byte	0x1
 4420 0303 50       		.byte	0x50
 4421 0304 04000000 		.4byte	.LVL54
 4422 0308 14000000 		.4byte	.LFE20
 4423 030c 0400     		.2byte	0x4
 4424 030e F3       		.byte	0xf3
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 116


 4425 030f 01       		.uleb128 0x1
 4426 0310 50       		.byte	0x50
 4427 0311 9F       		.byte	0x9f
 4428 0312 00000000 		.4byte	0
 4429 0316 00000000 		.4byte	0
 4430              	.LLST27:
 4431 031a 00000000 		.4byte	.LVL55
 4432 031e 04000000 		.4byte	.LVL56
 4433 0322 0100     		.2byte	0x1
 4434 0324 50       		.byte	0x50
 4435 0325 04000000 		.4byte	.LVL56
 4436 0329 14000000 		.4byte	.LFE21
 4437 032d 0400     		.2byte	0x4
 4438 032f F3       		.byte	0xf3
 4439 0330 01       		.uleb128 0x1
 4440 0331 50       		.byte	0x50
 4441 0332 9F       		.byte	0x9f
 4442 0333 00000000 		.4byte	0
 4443 0337 00000000 		.4byte	0
 4444              	.LLST28:
 4445 033b 00000000 		.4byte	.LVL57
 4446 033f 04000000 		.4byte	.LVL58
 4447 0343 0100     		.2byte	0x1
 4448 0345 50       		.byte	0x50
 4449 0346 04000000 		.4byte	.LVL58
 4450 034a 14000000 		.4byte	.LFE22
 4451 034e 0400     		.2byte	0x4
 4452 0350 F3       		.byte	0xf3
 4453 0351 01       		.uleb128 0x1
 4454 0352 50       		.byte	0x50
 4455 0353 9F       		.byte	0x9f
 4456 0354 00000000 		.4byte	0
 4457 0358 00000000 		.4byte	0
 4458              	.LLST29:
 4459 035c 00000000 		.4byte	.LVL60
 4460 0360 04000000 		.4byte	.LVL61
 4461 0364 0100     		.2byte	0x1
 4462 0366 50       		.byte	0x50
 4463 0367 04000000 		.4byte	.LVL61
 4464 036b 22000000 		.4byte	.LVL65
 4465 036f 0100     		.2byte	0x1
 4466 0371 54       		.byte	0x54
 4467 0372 00000000 		.4byte	0
 4468 0376 00000000 		.4byte	0
 4469              	.LLST30:
 4470 037a 00000000 		.4byte	.LVL66
 4471 037e 08000000 		.4byte	.LVL67
 4472 0382 0100     		.2byte	0x1
 4473 0384 50       		.byte	0x50
 4474 0385 08000000 		.4byte	.LVL67
 4475 0389 14000000 		.4byte	.LFE26
 4476 038d 0400     		.2byte	0x4
 4477 038f F3       		.byte	0xf3
 4478 0390 01       		.uleb128 0x1
 4479 0391 50       		.byte	0x50
 4480 0392 9F       		.byte	0x9f
 4481 0393 00000000 		.4byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 117


 4482 0397 00000000 		.4byte	0
 4483              	.LLST31:
 4484 039b 00000000 		.4byte	.LVL69
 4485 039f 09000000 		.4byte	.LVL70-1
 4486 03a3 0100     		.2byte	0x1
 4487 03a5 50       		.byte	0x50
 4488 03a6 09000000 		.4byte	.LVL70-1
 4489 03aa A0000000 		.4byte	.LVL86
 4490 03ae 0100     		.2byte	0x1
 4491 03b0 54       		.byte	0x54
 4492 03b1 A0000000 		.4byte	.LVL86
 4493 03b5 CC000000 		.4byte	.LVL89
 4494 03b9 0700     		.2byte	0x7
 4495 03bb 74       		.byte	0x74
 4496 03bc B39C8080 		.sleb128 -268431821
 4496      7F
 4497 03c1 9F       		.byte	0x9f
 4498 03c2 CC000000 		.4byte	.LVL89
 4499 03c6 CE000000 		.4byte	.LVL90
 4500 03ca 0100     		.2byte	0x1
 4501 03cc 54       		.byte	0x54
 4502 03cd CE000000 		.4byte	.LVL90
 4503 03d1 24010000 		.4byte	.LFE4
 4504 03d5 0600     		.2byte	0x6
 4505 03d7 91       		.byte	0x91
 4506 03d8 60       		.sleb128 -32
 4507 03d9 06       		.byte	0x6
 4508 03da 23       		.byte	0x23
 4509 03db 03       		.uleb128 0x3
 4510 03dc 9F       		.byte	0x9f
 4511 03dd 00000000 		.4byte	0
 4512 03e1 00000000 		.4byte	0
 4513              	.LLST32:
 4514 03e5 24000000 		.4byte	.LVL72
 4515 03e9 26000000 		.4byte	.LVL73
 4516 03ed 0100     		.2byte	0x1
 4517 03ef 55       		.byte	0x55
 4518 03f0 36000000 		.4byte	.LVL74
 4519 03f4 38000000 		.4byte	.LVL75
 4520 03f8 0100     		.2byte	0x1
 4521 03fa 55       		.byte	0x55
 4522 03fb 48000000 		.4byte	.LVL76
 4523 03ff 4A000000 		.4byte	.LVL77
 4524 0403 0100     		.2byte	0x1
 4525 0405 55       		.byte	0x55
 4526 0406 5A000000 		.4byte	.LVL78
 4527 040a 5C000000 		.4byte	.LVL79
 4528 040e 0100     		.2byte	0x1
 4529 0410 55       		.byte	0x55
 4530 0411 6C000000 		.4byte	.LVL81
 4531 0415 CC000000 		.4byte	.LVL89
 4532 0419 0100     		.2byte	0x1
 4533 041b 55       		.byte	0x55
 4534 041c 00000000 		.4byte	0
 4535 0420 00000000 		.4byte	0
 4536              	.LLST33:
 4537 0424 6C000000 		.4byte	.LVL81
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 118


 4538 0428 CC000000 		.4byte	.LVL89
 4539 042c 0200     		.2byte	0x2
 4540 042e 7D       		.byte	0x7d
 4541 042f 00       		.sleb128 0
 4542 0430 00000000 		.4byte	0
 4543 0434 00000000 		.4byte	0
 4544              	.LLST34:
 4545 0438 74000000 		.4byte	.LVL82
 4546 043c CC000000 		.4byte	.LVL89
 4547 0440 0200     		.2byte	0x2
 4548 0442 91       		.byte	0x91
 4549 0443 5C       		.sleb128 -36
 4550 0444 00000000 		.4byte	0
 4551 0448 00000000 		.4byte	0
 4552              	.LLST35:
 4553 044c 88000000 		.4byte	.LVL83
 4554 0450 94000000 		.4byte	.LVL84
 4555 0454 0100     		.2byte	0x1
 4556 0456 57       		.byte	0x57
 4557 0457 00000000 		.4byte	0
 4558 045b 00000000 		.4byte	0
 4559              	.LLST36:
 4560 045f CC000000 		.4byte	.LVL89
 4561 0463 CE000000 		.4byte	.LVL90
 4562 0467 0200     		.2byte	0x2
 4563 0469 30       		.byte	0x30
 4564 046a 9F       		.byte	0x9f
 4565 046b 00000000 		.4byte	0
 4566 046f 00000000 		.4byte	0
 4567              	.LLST37:
 4568 0473 00000000 		.4byte	.LVL92
 4569 0477 12000000 		.4byte	.LVL93
 4570 047b 0100     		.2byte	0x1
 4571 047d 50       		.byte	0x50
 4572 047e 12000000 		.4byte	.LVL93
 4573 0482 44000000 		.4byte	.LFE5
 4574 0486 0400     		.2byte	0x4
 4575 0488 F3       		.byte	0xf3
 4576 0489 01       		.uleb128 0x1
 4577 048a 50       		.byte	0x50
 4578 048b 9F       		.byte	0x9f
 4579 048c 00000000 		.4byte	0
 4580 0490 00000000 		.4byte	0
 4581              	.LLST38:
 4582 0494 00000000 		.4byte	.LVL95
 4583 0498 18000000 		.4byte	.LVL96
 4584 049c 0100     		.2byte	0x1
 4585 049e 50       		.byte	0x50
 4586 049f 18000000 		.4byte	.LVL96
 4587 04a3 48000000 		.4byte	.LFE27
 4588 04a7 0400     		.2byte	0x4
 4589 04a9 F3       		.byte	0xf3
 4590 04aa 01       		.uleb128 0x1
 4591 04ab 50       		.byte	0x50
 4592 04ac 9F       		.byte	0x9f
 4593 04ad 00000000 		.4byte	0
 4594 04b1 00000000 		.4byte	0
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 119


 4595              	.LLST39:
 4596 04b5 00000000 		.4byte	.LVL99
 4597 04b9 08000000 		.4byte	.LVL100
 4598 04bd 0200     		.2byte	0x2
 4599 04bf 30       		.byte	0x30
 4600 04c0 9F       		.byte	0x9f
 4601 04c1 08000000 		.4byte	.LVL100
 4602 04c5 0E000000 		.4byte	.LVL101
 4603 04c9 0200     		.2byte	0x2
 4604 04cb 31       		.byte	0x31
 4605 04cc 9F       		.byte	0x9f
 4606 04cd 0E000000 		.4byte	.LVL101
 4607 04d1 10000000 		.4byte	.LVL102
 4608 04d5 0200     		.2byte	0x2
 4609 04d7 32       		.byte	0x32
 4610 04d8 9F       		.byte	0x9f
 4611 04d9 10000000 		.4byte	.LVL102
 4612 04dd 12000000 		.4byte	.LVL103
 4613 04e1 0200     		.2byte	0x2
 4614 04e3 34       		.byte	0x34
 4615 04e4 9F       		.byte	0x9f
 4616 04e5 12000000 		.4byte	.LVL103
 4617 04e9 50000000 		.4byte	.LFE29
 4618 04ed 0200     		.2byte	0x2
 4619 04ef 35       		.byte	0x35
 4620 04f0 9F       		.byte	0x9f
 4621 04f1 00000000 		.4byte	0
 4622 04f5 00000000 		.4byte	0
 4623              	.LLST40:
 4624 04f9 12000000 		.4byte	.LVL103
 4625 04fd 14000000 		.4byte	.LVL104
 4626 0501 0500     		.2byte	0x5
 4627 0503 0C       		.byte	0xc
 4628 0504 3C000020 		.4byte	0x2000003c
 4629 0508 14000000 		.4byte	.LVL104
 4630 050c 18000000 		.4byte	.LVL105
 4631 0510 0200     		.2byte	0x2
 4632 0512 73       		.byte	0x73
 4633 0513 00       		.sleb128 0
 4634 0514 00000000 		.4byte	0
 4635 0518 00000000 		.4byte	0
 4636              	.LLST41:
 4637 051c 00000000 		.4byte	.LVL111
 4638 0520 04000000 		.4byte	.LVL112
 4639 0524 0100     		.2byte	0x1
 4640 0526 50       		.byte	0x50
 4641 0527 04000000 		.4byte	.LVL112
 4642 052b 10000000 		.4byte	.LFE34
 4643 052f 0400     		.2byte	0x4
 4644 0531 F3       		.byte	0xf3
 4645 0532 01       		.uleb128 0x1
 4646 0533 50       		.byte	0x50
 4647 0534 9F       		.byte	0x9f
 4648 0535 00000000 		.4byte	0
 4649 0539 00000000 		.4byte	0
 4650              	.LLST42:
 4651 053d 00000000 		.4byte	.LVL115
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 120


 4652 0541 06000000 		.4byte	.LVL116
 4653 0545 0100     		.2byte	0x1
 4654 0547 50       		.byte	0x50
 4655 0548 06000000 		.4byte	.LVL116
 4656 054c 10000000 		.4byte	.LFE39
 4657 0550 0400     		.2byte	0x4
 4658 0552 F3       		.byte	0xf3
 4659 0553 01       		.uleb128 0x1
 4660 0554 50       		.byte	0x50
 4661 0555 9F       		.byte	0x9f
 4662 0556 00000000 		.4byte	0
 4663 055a 00000000 		.4byte	0
 4664              	.LLST43:
 4665 055e 00000000 		.4byte	.LVL117
 4666 0562 04000000 		.4byte	.LVL118
 4667 0566 0100     		.2byte	0x1
 4668 0568 50       		.byte	0x50
 4669 0569 04000000 		.4byte	.LVL118
 4670 056d 0C000000 		.4byte	.LFE40
 4671 0571 0400     		.2byte	0x4
 4672 0573 F3       		.byte	0xf3
 4673 0574 01       		.uleb128 0x1
 4674 0575 50       		.byte	0x50
 4675 0576 9F       		.byte	0x9f
 4676 0577 00000000 		.4byte	0
 4677 057b 00000000 		.4byte	0
 4678              		.section	.debug_aranges,"",%progbits
 4679 0000 6C010000 		.4byte	0x16c
 4680 0004 0200     		.2byte	0x2
 4681 0006 00000000 		.4byte	.Ldebug_info0
 4682 000a 04       		.byte	0x4
 4683 000b 00       		.byte	0
 4684 000c 0000     		.2byte	0
 4685 000e 0000     		.2byte	0
 4686 0010 00000000 		.4byte	.LFB0
 4687 0014 14000000 		.4byte	.LFE0-.LFB0
 4688 0018 00000000 		.4byte	.LFB1
 4689 001c 10000000 		.4byte	.LFE1-.LFB1
 4690 0020 00000000 		.4byte	.LFB2
 4691 0024 24000000 		.4byte	.LFE2-.LFB2
 4692 0028 00000000 		.4byte	.LFB3
 4693 002c 2C000000 		.4byte	.LFE3-.LFB3
 4694 0030 00000000 		.4byte	.LFB6
 4695 0034 20000000 		.4byte	.LFE6-.LFB6
 4696 0038 00000000 		.4byte	.LFB7
 4697 003c 10000000 		.4byte	.LFE7-.LFB7
 4698 0040 00000000 		.4byte	.LFB8
 4699 0044 0C000000 		.4byte	.LFE8-.LFB8
 4700 0048 00000000 		.4byte	.LFB9
 4701 004c 14000000 		.4byte	.LFE9-.LFB9
 4702 0050 00000000 		.4byte	.LFB10
 4703 0054 10000000 		.4byte	.LFE10-.LFB10
 4704 0058 00000000 		.4byte	.LFB11
 4705 005c 0C000000 		.4byte	.LFE11-.LFB11
 4706 0060 00000000 		.4byte	.LFB12
 4707 0064 14000000 		.4byte	.LFE12-.LFB12
 4708 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 121


 4709 006c 12000000 		.4byte	.LFE13-.LFB13
 4710 0070 00000000 		.4byte	.LFB14
 4711 0074 18000000 		.4byte	.LFE14-.LFB14
 4712 0078 00000000 		.4byte	.LFB15
 4713 007c 14000000 		.4byte	.LFE15-.LFB15
 4714 0080 00000000 		.4byte	.LFB16
 4715 0084 40000000 		.4byte	.LFE16-.LFB16
 4716 0088 00000000 		.4byte	.LFB17
 4717 008c 24000000 		.4byte	.LFE17-.LFB17
 4718 0090 00000000 		.4byte	.LFB18
 4719 0094 14000000 		.4byte	.LFE18-.LFB18
 4720 0098 00000000 		.4byte	.LFB19
 4721 009c 18000000 		.4byte	.LFE19-.LFB19
 4722 00a0 00000000 		.4byte	.LFB20
 4723 00a4 14000000 		.4byte	.LFE20-.LFB20
 4724 00a8 00000000 		.4byte	.LFB21
 4725 00ac 14000000 		.4byte	.LFE21-.LFB21
 4726 00b0 00000000 		.4byte	.LFB22
 4727 00b4 14000000 		.4byte	.LFE22-.LFB22
 4728 00b8 00000000 		.4byte	.LFB23
 4729 00bc 04000000 		.4byte	.LFE23-.LFB23
 4730 00c0 00000000 		.4byte	.LFB24
 4731 00c4 18000000 		.4byte	.LFE24-.LFB24
 4732 00c8 00000000 		.4byte	.LFB25
 4733 00cc 2C000000 		.4byte	.LFE25-.LFB25
 4734 00d0 00000000 		.4byte	.LFB26
 4735 00d4 14000000 		.4byte	.LFE26-.LFB26
 4736 00d8 00000000 		.4byte	.LFB4
 4737 00dc 24010000 		.4byte	.LFE4-.LFB4
 4738 00e0 00000000 		.4byte	.LFB5
 4739 00e4 44000000 		.4byte	.LFE5-.LFB5
 4740 00e8 00000000 		.4byte	.LFB27
 4741 00ec 48000000 		.4byte	.LFE27-.LFB27
 4742 00f0 00000000 		.4byte	.LFB29
 4743 00f4 50000000 		.4byte	.LFE29-.LFB29
 4744 00f8 00000000 		.4byte	.LFB31
 4745 00fc 10000000 		.4byte	.LFE31-.LFB31
 4746 0100 00000000 		.4byte	.LFB32
 4747 0104 10000000 		.4byte	.LFE32-.LFB32
 4748 0108 00000000 		.4byte	.LFB30
 4749 010c 18000000 		.4byte	.LFE30-.LFB30
 4750 0110 00000000 		.4byte	.LFB28
 4751 0114 1C000000 		.4byte	.LFE28-.LFB28
 4752 0118 00000000 		.4byte	.LFB33
 4753 011c 10000000 		.4byte	.LFE33-.LFB33
 4754 0120 00000000 		.4byte	.LFB34
 4755 0124 10000000 		.4byte	.LFE34-.LFB34
 4756 0128 00000000 		.4byte	.LFB35
 4757 012c 10000000 		.4byte	.LFE35-.LFB35
 4758 0130 00000000 		.4byte	.LFB36
 4759 0134 10000000 		.4byte	.LFE36-.LFB36
 4760 0138 00000000 		.4byte	.LFB37
 4761 013c 10000000 		.4byte	.LFE37-.LFB37
 4762 0140 00000000 		.4byte	.LFB41
 4763 0144 24000000 		.4byte	.LFE41-.LFB41
 4764 0148 00000000 		.4byte	.LFB38
 4765 014c 0C000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 122


 4766 0150 00000000 		.4byte	.LFB39
 4767 0154 10000000 		.4byte	.LFE39-.LFB39
 4768 0158 00000000 		.4byte	.LFB40
 4769 015c 0C000000 		.4byte	.LFE40-.LFB40
 4770 0160 00000000 		.4byte	.LFB42
 4771 0164 70000000 		.4byte	.LFE42-.LFB42
 4772 0168 00000000 		.4byte	0
 4773 016c 00000000 		.4byte	0
 4774              		.section	.debug_ranges,"",%progbits
 4775              	.Ldebug_ranges0:
 4776 0000 2C000000 		.4byte	.LBB42
 4777 0004 2E000000 		.4byte	.LBE42
 4778 0008 2E000000 		.4byte	.LBB45
 4779 000c 30000000 		.4byte	.LBE45
 4780 0010 00000000 		.4byte	0
 4781 0014 00000000 		.4byte	0
 4782 0018 0A000000 		.4byte	.LBB56
 4783 001c 0C000000 		.4byte	.LBE56
 4784 0020 12000000 		.4byte	.LBB60
 4785 0024 14000000 		.4byte	.LBE60
 4786 0028 16000000 		.4byte	.LBB61
 4787 002c 18000000 		.4byte	.LBE61
 4788 0030 00000000 		.4byte	0
 4789 0034 00000000 		.4byte	0
 4790 0038 22000000 		.4byte	.LBB62
 4791 003c 24000000 		.4byte	.LBE62
 4792 0040 26000000 		.4byte	.LBB70
 4793 0044 28000000 		.4byte	.LBE70
 4794 0048 00000000 		.4byte	0
 4795 004c 00000000 		.4byte	0
 4796 0050 24000000 		.4byte	.LBB65
 4797 0054 26000000 		.4byte	.LBE65
 4798 0058 2A000000 		.4byte	.LBB74
 4799 005c 2C000000 		.4byte	.LBE74
 4800 0060 2E000000 		.4byte	.LBB76
 4801 0064 30000000 		.4byte	.LBE76
 4802 0068 30000000 		.4byte	.LBB77
 4803 006c 32000000 		.4byte	.LBE77
 4804 0070 00000000 		.4byte	0
 4805 0074 00000000 		.4byte	0
 4806 0078 28000000 		.4byte	.LBB71
 4807 007c 2A000000 		.4byte	.LBE71
 4808 0080 2C000000 		.4byte	.LBB75
 4809 0084 2E000000 		.4byte	.LBE75
 4810 0088 00000000 		.4byte	0
 4811 008c 00000000 		.4byte	0
 4812 0090 00000000 		.4byte	.LFB0
 4813 0094 14000000 		.4byte	.LFE0
 4814 0098 00000000 		.4byte	.LFB1
 4815 009c 10000000 		.4byte	.LFE1
 4816 00a0 00000000 		.4byte	.LFB2
 4817 00a4 24000000 		.4byte	.LFE2
 4818 00a8 00000000 		.4byte	.LFB3
 4819 00ac 2C000000 		.4byte	.LFE3
 4820 00b0 00000000 		.4byte	.LFB6
 4821 00b4 20000000 		.4byte	.LFE6
 4822 00b8 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 123


 4823 00bc 10000000 		.4byte	.LFE7
 4824 00c0 00000000 		.4byte	.LFB8
 4825 00c4 0C000000 		.4byte	.LFE8
 4826 00c8 00000000 		.4byte	.LFB9
 4827 00cc 14000000 		.4byte	.LFE9
 4828 00d0 00000000 		.4byte	.LFB10
 4829 00d4 10000000 		.4byte	.LFE10
 4830 00d8 00000000 		.4byte	.LFB11
 4831 00dc 0C000000 		.4byte	.LFE11
 4832 00e0 00000000 		.4byte	.LFB12
 4833 00e4 14000000 		.4byte	.LFE12
 4834 00e8 00000000 		.4byte	.LFB13
 4835 00ec 12000000 		.4byte	.LFE13
 4836 00f0 00000000 		.4byte	.LFB14
 4837 00f4 18000000 		.4byte	.LFE14
 4838 00f8 00000000 		.4byte	.LFB15
 4839 00fc 14000000 		.4byte	.LFE15
 4840 0100 00000000 		.4byte	.LFB16
 4841 0104 40000000 		.4byte	.LFE16
 4842 0108 00000000 		.4byte	.LFB17
 4843 010c 24000000 		.4byte	.LFE17
 4844 0110 00000000 		.4byte	.LFB18
 4845 0114 14000000 		.4byte	.LFE18
 4846 0118 00000000 		.4byte	.LFB19
 4847 011c 18000000 		.4byte	.LFE19
 4848 0120 00000000 		.4byte	.LFB20
 4849 0124 14000000 		.4byte	.LFE20
 4850 0128 00000000 		.4byte	.LFB21
 4851 012c 14000000 		.4byte	.LFE21
 4852 0130 00000000 		.4byte	.LFB22
 4853 0134 14000000 		.4byte	.LFE22
 4854 0138 00000000 		.4byte	.LFB23
 4855 013c 04000000 		.4byte	.LFE23
 4856 0140 00000000 		.4byte	.LFB24
 4857 0144 18000000 		.4byte	.LFE24
 4858 0148 00000000 		.4byte	.LFB25
 4859 014c 2C000000 		.4byte	.LFE25
 4860 0150 00000000 		.4byte	.LFB26
 4861 0154 14000000 		.4byte	.LFE26
 4862 0158 00000000 		.4byte	.LFB4
 4863 015c 24010000 		.4byte	.LFE4
 4864 0160 00000000 		.4byte	.LFB5
 4865 0164 44000000 		.4byte	.LFE5
 4866 0168 00000000 		.4byte	.LFB27
 4867 016c 48000000 		.4byte	.LFE27
 4868 0170 00000000 		.4byte	.LFB29
 4869 0174 50000000 		.4byte	.LFE29
 4870 0178 00000000 		.4byte	.LFB31
 4871 017c 10000000 		.4byte	.LFE31
 4872 0180 00000000 		.4byte	.LFB32
 4873 0184 10000000 		.4byte	.LFE32
 4874 0188 00000000 		.4byte	.LFB30
 4875 018c 18000000 		.4byte	.LFE30
 4876 0190 00000000 		.4byte	.LFB28
 4877 0194 1C000000 		.4byte	.LFE28
 4878 0198 00000000 		.4byte	.LFB33
 4879 019c 10000000 		.4byte	.LFE33
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 124


 4880 01a0 00000000 		.4byte	.LFB34
 4881 01a4 10000000 		.4byte	.LFE34
 4882 01a8 00000000 		.4byte	.LFB35
 4883 01ac 10000000 		.4byte	.LFE35
 4884 01b0 00000000 		.4byte	.LFB36
 4885 01b4 10000000 		.4byte	.LFE36
 4886 01b8 00000000 		.4byte	.LFB37
 4887 01bc 10000000 		.4byte	.LFE37
 4888 01c0 00000000 		.4byte	.LFB41
 4889 01c4 24000000 		.4byte	.LFE41
 4890 01c8 00000000 		.4byte	.LFB38
 4891 01cc 0C000000 		.4byte	.LFE38
 4892 01d0 00000000 		.4byte	.LFB39
 4893 01d4 10000000 		.4byte	.LFE39
 4894 01d8 00000000 		.4byte	.LFB40
 4895 01dc 0C000000 		.4byte	.LFE40
 4896 01e0 00000000 		.4byte	.LFB42
 4897 01e4 70000000 		.4byte	.LFE42
 4898 01e8 00000000 		.4byte	0
 4899 01ec 00000000 		.4byte	0
 4900              		.section	.debug_line,"",%progbits
 4901              	.Ldebug_line0:
 4902 0000 BB040000 		.section	.debug_str,"MS",%progbits,1
 4902      02004F00 
 4902      00000201 
 4902      FB0E0D00 
 4902      01010101 
 4903              	.LASF43:
 4904 0000 72616D56 		.ascii	"ramVectorTable\000"
 4904      6563746F 
 4904      72546162 
 4904      6C6500
 4905              	.LASF63:
 4906 000f 62675472 		.ascii	"bgTrim4\000"
 4906      696D3400 
 4907              	.LASF10:
 4908 0017 75696E74 		.ascii	"uint16\000"
 4908      313600
 4909              	.LASF37:
 4910 001e 696E7453 		.ascii	"intState\000"
 4910      74617465 
 4910      00
 4911              	.LASF28:
 4912 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4912      73436C6B 
 4912      57726974 
 4912      65486663 
 4912      6C6B4469 
 4913              	.LASF42:
 4914 0040 6F6C6449 		.ascii	"oldIsr\000"
 4914      737200
 4915              	.LASF36:
 4916 0047 43794469 		.ascii	"CyDisableInts\000"
 4916      7361626C 
 4916      65496E74 
 4916      7300
 4917              	.LASF66:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 125


 4918 0055 63757272 		.ascii	"currentImoTrim2Value\000"
 4918      656E7449 
 4918      6D6F5472 
 4918      696D3256 
 4918      616C7565 
 4919              	.LASF7:
 4920 006a 6C6F6E67 		.ascii	"long long unsigned int\000"
 4920      206C6F6E 
 4920      6720756E 
 4920      7369676E 
 4920      65642069 
 4921              	.LASF87:
 4922 0081 43795379 		.ascii	"CySysTickInitVar\000"
 4922      73546963 
 4922      6B496E69 
 4922      74566172 
 4922      00
 4923              	.LASF38:
 4924 0092 4379456E 		.ascii	"CyEnableInts\000"
 4924      61626C65 
 4924      496E7473 
 4924      00
 4925              	.LASF56:
 4926 009f 4379536F 		.ascii	"CySoftwareReset\000"
 4926      66747761 
 4926      72655265 
 4926      73657400 
 4927              	.LASF72:
 4928 00af 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4928      73546963 
 4928      6B456E61 
 4928      626C6549 
 4928      6E746572 
 4929              	.LASF52:
 4930 00c8 4379496E 		.ascii	"CyIntGetState\000"
 4930      74476574 
 4930      53746174 
 4930      6500
 4931              	.LASF6:
 4932 00d6 6C6F6E67 		.ascii	"long long int\000"
 4932      206C6F6E 
 4932      6720696E 
 4932      7400
 4933              	.LASF0:
 4934 00e4 7369676E 		.ascii	"signed char\000"
 4934      65642063 
 4934      68617200 
 4935              	.LASF62:
 4936 00f0 66726571 		.ascii	"freq\000"
 4936      00
 4937              	.LASF69:
 4938 00f5 43794465 		.ascii	"CyDelayFreq\000"
 4938      6C617946 
 4938      72657100 
 4939              	.LASF32:
 4940 0101 696E7465 		.ascii	"interruptState\000"
 4940      72727570 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 126


 4940      74537461 
 4940      746500
 4941              	.LASF77:
 4942 0110 43795379 		.ascii	"CySysTickGetReload\000"
 4942      73546963 
 4942      6B476574 
 4942      52656C6F 
 4942      616400
 4943              	.LASF4:
 4944 0123 6C6F6E67 		.ascii	"long int\000"
 4944      20696E74 
 4944      00
 4945              	.LASF53:
 4946 012c 4379496E 		.ascii	"CyIntDisable\000"
 4946      74446973 
 4946      61626C65 
 4946      00
 4947              	.LASF83:
 4948 0139 43795379 		.ascii	"CySysTickGetCallback\000"
 4948      73546963 
 4948      6B476574 
 4948      43616C6C 
 4948      6261636B 
 4949              	.LASF9:
 4950 014e 75696E74 		.ascii	"uint8\000"
 4950      3800
 4951              	.LASF89:
 4952 0154 63796465 		.ascii	"cydelayFreqKhz\000"
 4952      6C617946 
 4952      7265714B 
 4952      687A00
 4953              	.LASF59:
 4954 0163 43794465 		.ascii	"CyDelayUs\000"
 4954      6C617955 
 4954      7300
 4955              	.LASF13:
 4956 016d 646F7562 		.ascii	"double\000"
 4956      6C6500
 4957              	.LASF49:
 4958 0174 73686966 		.ascii	"shift\000"
 4958      7400
 4959              	.LASF24:
 4960 017a 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4960      734C7664 
 4960      436C6561 
 4960      72496E74 
 4960      65727275 
 4961              	.LASF11:
 4962 0191 75696E74 		.ascii	"uint32\000"
 4962      333200
 4963              	.LASF40:
 4964 0198 6E756D62 		.ascii	"number\000"
 4964      657200
 4965              	.LASF39:
 4966 019f 6D61736B 		.ascii	"mask\000"
 4966      00
 4967              	.LASF67:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 127


 4968 01a4 43795379 		.ascii	"CySysLvdEnable\000"
 4968      734C7664 
 4968      456E6162 
 4968      6C6500
 4969              	.LASF50:
 4970 01b3 4379496E 		.ascii	"CyIntGetPriority\000"
 4970      74476574 
 4970      5072696F 
 4970      72697479 
 4970      00
 4971              	.LASF91:
 4972 01c4 63796465 		.ascii	"cydelay32kMs\000"
 4972      6C617933 
 4972      326B4D73 
 4972      00
 4973              	.LASF70:
 4974 01d1 43795379 		.ascii	"CySysTickInit\000"
 4974      73546963 
 4974      6B496E69 
 4974      7400
 4975              	.LASF23:
 4976 01df 76616C75 		.ascii	"value\000"
 4976      6500
 4977              	.LASF84:
 4978 01e5 43794765 		.ascii	"CyGetUniqueId\000"
 4978      74556E69 
 4978      71756549 
 4978      6400
 4979              	.LASF79:
 4980 01f3 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4980      73546963 
 4980      6B476574 
 4980      436F756E 
 4980      74466C61 
 4981              	.LASF8:
 4982 0209 756E7369 		.ascii	"unsigned int\000"
 4982      676E6564 
 4982      20696E74 
 4982      00
 4983              	.LASF25:
 4984 0216 43795379 		.ascii	"CySysTickClear\000"
 4984      73546963 
 4984      6B436C65 
 4984      617200
 4985              	.LASF5:
 4986 0225 6C6F6E67 		.ascii	"long unsigned int\000"
 4986      20756E73 
 4986      69676E65 
 4986      6420696E 
 4986      7400
 4987              	.LASF76:
 4988 0237 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4988      734C7664 
 4988      47657449 
 4988      6E746572 
 4988      72757074 
 4989              	.LASF27:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 128


 4990 0252 43795379 		.ascii	"CySysClkImoStop\000"
 4990      73436C6B 
 4990      496D6F53 
 4990      746F7000 
 4991              	.LASF99:
 4992 0262 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4992      74657243 
 4992      72697469 
 4992      63616C53 
 4992      65637469 
 4993              	.LASF54:
 4994 0279 4379496E 		.ascii	"CyIntSetPending\000"
 4994      74536574 
 4994      50656E64 
 4994      696E6700 
 4995              	.LASF35:
 4996 0289 43795379 		.ascii	"CySysGetResetReason\000"
 4996      73476574 
 4996      52657365 
 4996      74526561 
 4996      736F6E00 
 4997              	.LASF3:
 4998 029d 73686F72 		.ascii	"short unsigned int\000"
 4998      7420756E 
 4998      7369676E 
 4998      65642069 
 4998      6E7400
 4999              	.LASF45:
 5000 02b0 4379496E 		.ascii	"CyIntSetVector\000"
 5000      74536574 
 5000      56656374 
 5000      6F7200
 5001              	.LASF95:
 5002 02bf 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 5002      6E657261 
 5002      7465645F 
 5002      536F7572 
 5002      63655C50 
 5003              	.LASF48:
 5004 02e0 7072696F 		.ascii	"priority\000"
 5004      72697479 
 5004      00
 5005              	.LASF61:
 5006 02e9 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5006      73436C6B 
 5006      57726974 
 5006      65496D6F 
 5006      46726571 
 5007              	.LASF98:
 5008 02fe 4379496E 		.ascii	"CyIntSetSysVector\000"
 5008      74536574 
 5008      53797356 
 5008      6563746F 
 5008      7200
 5009              	.LASF16:
 5010 0310 72656733 		.ascii	"reg32\000"
 5010      3200
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 129


 5011              	.LASF74:
 5012 0316 43795379 		.ascii	"CySysTickStart\000"
 5012      73546963 
 5012      6B537461 
 5012      727400
 5013              	.LASF18:
 5014 0325 73697A65 		.ascii	"sizetype\000"
 5014      74797065 
 5014      00
 5015              	.LASF55:
 5016 032e 4379496E 		.ascii	"CyIntClearPending\000"
 5016      74436C65 
 5016      61725065 
 5016      6E64696E 
 5016      6700
 5017              	.LASF41:
 5018 0340 61646472 		.ascii	"address\000"
 5018      65737300 
 5019              	.LASF64:
 5020 0348 62675472 		.ascii	"bgTrim5\000"
 5020      696D3500 
 5021              	.LASF82:
 5022 0350 72657456 		.ascii	"retVal\000"
 5022      616C00
 5023              	.LASF81:
 5024 0357 66756E63 		.ascii	"function\000"
 5024      74696F6E 
 5024      00
 5025              	.LASF92:
 5026 0360 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5026      6F467265 
 5026      714D687A 
 5026      32526567 
 5026      00
 5027              	.LASF78:
 5028 0371 43795379 		.ascii	"CySysTickGetValue\000"
 5028      73546963 
 5028      6B476574 
 5028      56616C75 
 5028      6500
 5029              	.LASF96:
 5030 0383 443A5C63 		.ascii	"D:\\customers\\patternagents\\PSoC4_Workshop\\proje"
 5030      7573746F 
 5030      6D657273 
 5030      5C706174 
 5030      7465726E 
 5031 03b2 6374735C 		.ascii	"cts\\LAB_TWO\\UART_Bootloader.cydsn\000"
 5031      4C41425F 
 5031      54574F5C 
 5031      55415254 
 5031      5F426F6F 
 5032              	.LASF88:
 5033 03d4 63796465 		.ascii	"cydelayFreqHz\000"
 5033      6C617946 
 5033      72657148 
 5033      7A00
 5034              	.LASF47:
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 130


 5035 03e2 4379496E 		.ascii	"CyIntSetPriority\000"
 5035      74536574 
 5035      5072696F 
 5035      72697479 
 5035      00
 5036              	.LASF12:
 5037 03f3 666C6F61 		.ascii	"float\000"
 5037      7400
 5038              	.LASF93:
 5039 03f9 43794578 		.ascii	"CyExitCriticalSection\000"
 5039      69744372 
 5039      69746963 
 5039      616C5365 
 5039      6374696F 
 5040              	.LASF19:
 5041 040f 63795379 		.ascii	"cySysTickCallback\000"
 5041      73546963 
 5041      6B43616C 
 5041      6C626163 
 5041      6B00
 5042              	.LASF46:
 5043 0421 4379496E 		.ascii	"CyIntGetVector\000"
 5043      74476574 
 5043      56656374 
 5043      6F7200
 5044              	.LASF58:
 5045 0430 6D696C6C 		.ascii	"milliseconds\000"
 5045      69736563 
 5045      6F6E6473 
 5045      00
 5046              	.LASF100:
 5047 043d 43794465 		.ascii	"CyDelayCycles\000"
 5047      6C617943 
 5047      79636C65 
 5047      7300
 5048              	.LASF15:
 5049 044b 72656738 		.ascii	"reg8\000"
 5049      00
 5050              	.LASF68:
 5051 0450 74687265 		.ascii	"threshold\000"
 5051      73686F6C 
 5051      6400
 5052              	.LASF20:
 5053 045a 43794861 		.ascii	"CyHalt\000"
 5053      6C7400
 5054              	.LASF1:
 5055 0461 756E7369 		.ascii	"unsigned char\000"
 5055      676E6564 
 5055      20636861 
 5055      7200
 5056              	.LASF2:
 5057 046f 73686F72 		.ascii	"short int\000"
 5057      7420696E 
 5057      7400
 5058              	.LASF51:
 5059 0479 4379496E 		.ascii	"CyIntEnable\000"
 5059      74456E61 
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 131


 5059      626C6500 
 5060              	.LASF44:
 5061 0485 4379496E 		.ascii	"CyIntGetSysVector\000"
 5061      74476574 
 5061      53797356 
 5061      6563746F 
 5061      7200
 5062              	.LASF30:
 5063 0497 636C6B53 		.ascii	"clkSelect\000"
 5063      656C6563 
 5063      7400
 5064              	.LASF22:
 5065 04a1 72656173 		.ascii	"reason\000"
 5065      6F6E00
 5066              	.LASF14:
 5067 04a8 63686172 		.ascii	"char\000"
 5067      00
 5068              	.LASF17:
 5069 04ad 63796973 		.ascii	"cyisraddress\000"
 5069      72616464 
 5069      72657373 
 5069      00
 5070              	.LASF73:
 5071 04ba 43795379 		.ascii	"CySysTickEnable\000"
 5071      73546963 
 5071      6B456E61 
 5071      626C6500 
 5072              	.LASF94:
 5073 04ca 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 5073      4320342E 
 5073      382E3420 
 5073      32303134 
 5073      30353236 
 5074 04fd 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 5074      20726576 
 5074      6973696F 
 5074      6E203231 
 5074      31333538 
 5075 0530 73202D66 		.ascii	"s -ffunction-sections\000"
 5075      66756E63 
 5075      74696F6E 
 5075      2D736563 
 5075      74696F6E 
 5076              	.LASF29:
 5077 0546 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5077      73436C6B 
 5077      57726974 
 5077      65537973 
 5077      636C6B44 
 5078              	.LASF80:
 5079 055d 43795379 		.ascii	"CySysTickSetCallback\000"
 5079      73546963 
 5079      6B536574 
 5079      43616C6C 
 5079      6261636B 
 5080              	.LASF86:
 5081 0572 43795379 		.ascii	"CySysTickCallbacks\000"
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 132


 5081      73546963 
 5081      6B43616C 
 5081      6C626163 
 5081      6B7300
 5082              	.LASF85:
 5083 0585 756E6971 		.ascii	"uniqueId\000"
 5083      75654964 
 5083      00
 5084              	.LASF57:
 5085 058e 43794465 		.ascii	"CyDelay\000"
 5085      6C617900 
 5086              	.LASF75:
 5087 0596 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5087      73546963 
 5087      6B446973 
 5087      61626C65 
 5087      496E7465 
 5088              	.LASF33:
 5089 05b0 43795379 		.ascii	"CySysLvdDisable\000"
 5089      734C7664 
 5089      44697361 
 5089      626C6500 
 5090              	.LASF90:
 5091 05c0 63796465 		.ascii	"cydelayFreqMhz\000"
 5091      6C617946 
 5091      7265714D 
 5091      687A00
 5092              	.LASF34:
 5093 05cf 73746174 		.ascii	"status\000"
 5093      757300
 5094              	.LASF71:
 5095 05d6 43795379 		.ascii	"CySysTickStop\000"
 5095      73546963 
 5095      6B53746F 
 5095      7000
 5096              	.LASF31:
 5097 05e4 64697669 		.ascii	"divider\000"
 5097      64657200 
 5098              	.LASF26:
 5099 05ec 43795379 		.ascii	"CySysClkImoStart\000"
 5099      73436C6B 
 5099      496D6F53 
 5099      74617274 
 5099      00
 5100              	.LASF65:
 5101 05fd 6E657749 		.ascii	"newImoTrim2Value\000"
 5101      6D6F5472 
 5101      696D3256 
 5101      616C7565 
 5101      00
 5102              	.LASF60:
 5103 060e 6D696372 		.ascii	"microseconds\000"
 5103      6F736563 
 5103      6F6E6473 
 5103      00
 5104              	.LASF21:
 5105 061b 43795379 		.ascii	"CySysTickSetReload\000"
ARM GAS  C:\Users\moxon\AppData\Local\Temp\ccM9MmHX.s 			page 133


 5105      73546963 
 5105      6B536574 
 5105      52656C6F 
 5105      616400
 5106              	.LASF97:
 5107 062e 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5107      73546963 
 5107      6B536572 
 5107      76696365 
 5107      43616C6C 
 5108              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
